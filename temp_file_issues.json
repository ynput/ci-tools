[
    {
        "number": 59,
        "title": "Maya: Look allow referenced materials publish",
        "body": " <p>We should allow publishing a look that has referenced materials loaded from a material library (ground, water, fire, etc) </p>\n\n<p>This material wouldn't be in the lookdev scene originally but in matlib.</p>\n<i>[PYPE-375] created by admin</i>\n\n[cuID:PYPE-1379]",
        "url": "https://github.com/ynput/OpenPype/issues/59"
    },
    {
        "number": 62,
        "title": "look light rig publishing",
        "body": " \n<i>[PYPE-229] created by admin</i>\n\n[cuID:PYPE-1380]",
        "url": "https://github.com/ynput/OpenPype/issues/62"
    },
    {
        "number": 67,
        "title": "hou colorspaces",
        "body": " <p>Implement houdini color management to get on par with Nuke.</p>\n<i>[PYPE-78] created by jakub</i>\n\n[cuID:PYPE-1105]",
        "url": "https://github.com/ynput/OpenPype/issues/67"
    },
    {
        "number": 88,
        "title": "add colorspace to version metadata on cg render",
        "body": " <p>we are missing color metadata when publishing CG renders which can cause small issues in tightly controller projects.</p>\n<i>[PYPE-400] created by admin</i>\n\n[cuID:PYPE-1106]",
        "url": "https://github.com/ynput/OpenPype/issues/88"
    },
    {
        "number": 147,
        "title": "search paths, anatomy and multiroot",
        "body": " ## Use of *search paths*\r\n\r\nSometimes it is needed to specify *search path* - basically root where is something searched recursively. One good example is [Arnold in Maya](https://docs.arnoldrenderer.com/display/A5AFMUG/Search+Path):\r\n\r\nYou can specify path used to resolve other paths for textures, etc. So:\r\n```\r\n/some/path:/some/other/path\r\n```\r\nis used to resolve texture relative path `foo/bar/baz.tx` -> `/some/path/foo/bar/baz.tx`\r\n\r\nTo make it more complicated, we need to specify search path using environment variables, so that path can be resolved correctly on linux, windows or macos.\r\n\r\nSo lets have a root like:\r\n```javascript\r\n{\r\n    \"work\": {\r\n        \"windows\": \"//foo/bar/work\",\r\n        \"linux\": \"/mnt/foo/bar/work\",\r\n        \"darwin\": \"/Volumes/foo/bar/work\"\r\n    }\r\n}\r\n```\r\nThis will generate `PYPE_ROOT_WORK` environment variable set correctly on each platform.\r\n\r\nNow lets assume we use templates like this:\r\n```\r\n{root[name]}/baz/{project[name]}/{hierarchy}/{asset}/work/{task}\r\n```\r\n*(notice the **baz** part there)*\r\n\r\nIf we then set Arnold search path like this:\r\n```\r\n[PYPE_ROOT_WORK]\r\n```\r\nit will be to wide, resulting is search `//foo/bar/work` and relative paths with *baz* **and** project name inside like `baz/SomeProject/path/to/texture.tx`. That doesn't seem to be right and might be extremelly slow on places with lots of projects (or directory hierarchies).\r\n\r\nWe could hardcode project like `[PYPE_ROOT_WORK]/SomeProject` but this will not work with used template.\r\n\r\nWe could use part of resolved path from template ad add it like:\r\n\r\n```python\r\n>>> #pseudocode\r\n>>> template = \"{root[name]}/baz/{project[name]}/{hierarchy}/{asset}/work/{task}\"\r\n>>> path = template.format(template_data)\r\n>>> resolution_root = path.split(os.pathsep)[1]\r\n>>> print(resolution_root)\r\nbaz\r\n```\r\nand then we could use `resolution_root` like:\r\n```\r\n[PYPE_ROOT_WORK]/baz\r\n```\r\nthat makes more sense but `resolutio_root` or more precisely its index should be user specified. But question is where? It could even be made by more parts of path, like:\r\n\r\n```python\r\n>>> resolution_root = path.split(os.pathsep)[1:2]\r\n>>> print(resolution_root)\r\n['baz', 'SomeProject']\r\n```\n\n[cuID:PYPE-1128]",
        "url": "https://github.com/ynput/OpenPype/issues/147"
    },
    {
        "number": 200,
        "title": "splash loader",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nSome processes requires longer time to wait before a running operation is completed. We are not signalizing to an user by anyway that there is ongoing process and he needs to wait. Sometimes it could look as freezes or a bug. (loading workfiles in Resolve or loading cache to Maya)\r\n\r\n**Describe the solution you'd like**\r\nA pype tray widget could be created as hidden by default and called out by socket connection or other way for display. It could be beautiful funny animation where we would entertain the user and he will forgot about the stress from longer waiting time. \r\n\n\n[cuID:PYPE-1115]",
        "url": "https://github.com/ynput/OpenPype/issues/200"
    },
    {
        "number": 225,
        "title": "Basic status support in GUIs",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nA client reported that when users work on quick repetitive tasks, without going back and forth between ftrack and DCC, it would be useful to be able to display basic status information in the loader and workfiles apps. Even as simple as crossing out omitted shots would be usefull\r\n\r\n**Describe the solution you'd like**\r\nWe could possibly sync this data from ftrack to `asset[data]` and `version['data']` and then act accordingly in the GUI\r\n\r\n**Additional context**\r\nThe caveat is that it might then makes sense to support status globally in avalon and have it as optional data on anything. It could also come in handy by seeing whether the version in the loader has been approved or not and so on.\r\n\r\nhttps://pype.freshdesk.com/a/tickets/15\n\n[cuID:PYPE-1130]",
        "url": "https://github.com/ynput/OpenPype/issues/225"
    },
    {
        "number": 366,
        "title": "envvar in deadline dependencies hangs the job",
        "body": " We are sending all dependant files to deadline jobs to make sure they are all synced before the job starts, however sometimes client might use environment variable in the texture path or something similar. When that happens, deadline is unable to resolve this path and the job will stay pending until manually released\r\n\r\nWe should probably resolve these when storing them into the deadline payload to prevent this behaviousr\r\n\n\n[cuID:PYPE-1119]",
        "url": "https://github.com/ynput/OpenPype/issues/366"
    },
    {
        "number": 415,
        "title": "anatomy template format crash if has extra curly bracket",
        "body": " ## Issue\r\n- If template has one extra curly bracket whole template formatting crashes\r\n\r\n## How to test\r\n- add one template in default.yaml with value `\"{asset}}\"`\n\n[cuID:PYPE-1118]",
        "url": "https://github.com/ynput/OpenPype/issues/415"
    },
    {
        "number": 595,
        "title": "Patch system",
        "body": " Comment in WIP (You may comment, changes are to be expected)\r\n\r\nCurrently anytime an update to MongoDB structure is needed as a part of a Pype upgrade, queries must be captured in update notes and then run manually during the upgrade process.\r\n\r\nThis feature should make it more automatic. The idea is to have a list of applicable db patches, mark patches that were run successfully and on any start of Pype check if all db patches present in installation were already applied. If not, run sequentially patches and mark all successes, revert (if possible) to original state if error happened.\r\n\r\n\r\n**Parts of the system:**\r\n\r\n- Delivery mechanism of patches itself and storage\r\n- Marking of applied patches\r\n- Triggering mechanism\r\n- Rollback\r\n\r\n\r\n**Delivery mechanism**\r\nMongoDB updates could be stored only as plain file with one or multiple queries, but better would be for each update create Python file (class) that would contain possibilities to run:\r\n\r\n- global update (run on all collections in DB)\r\n- project update\r\n- Ftrack (any other third party API) update\r\n\r\nIt is recommended to create one patch (python script) per feature request, or bug fix, not a single big file per release. \r\nThere is no actual dependence of patches on release itself. (It means that patches are not labeled by version number.)\r\n\r\nRecommended name notation for patch:\r\n`pype\\upgrade_patches\\001_patch_name.py`\r\nNumber in name is important for sorting\r\n\r\nPython script will be implementing class with 3 functions: (TODO)\r\n`global_db_update` - everything that should be running on all projects\r\n`project_db_update(project_name)` - db update specific for `project_name` - useful for testing of updates, limiting only on single project\r\n`external_api_update(project_name=None)`\r\n\r\n\r\n**Marking of applied patches**\r\nNew collection 'upgrade_patches' will be added to `pype` mongoDB. It will contain documents:\r\n```\r\n[\r\n\u00a0 { \r\n\u00a0 \u00a0 name: '001_my_first_patch',    \r\n\u00a0 \u00a0 applied_dt: '02-10-2020 15:55:00',\r\n\u00a0 \u00a0 type: enum('global', 'project'),     # it is applied on all projects or should be only on specific\r\n\u00a0 \u00a0 aplied_on_projects: [],                  # list of projects that were modified (only project that were there during upgrade ?)\r\n\u00a0 \u00a0 mongo_updated: true,                 # change to mongoDB structure/content\r\n\u00a0 \u00a0 external_api_updated: [{ api: 'ftrack'}] # any external APIs updated, FTrack most probably for now\r\n\u00a0 \u00a0 triggered_by: John_Doe (?)                  # id of Pype installation who triggered this\r\n}\r\n]\r\n```\r\n**Triggering mechanism**\r\nEach start of Pype will list all files in `pype\\upgrade_patches` and compare found file names (without extension) with names from `upgrade_patches`. All missing will be marked to run sequentially. (Could we do \"Do you accept updating DB\" dialog during the start of Pype?)\r\n(? Limit this check only on runs in 'debug' mode to limit accidental triggering?)\r\n(TODO - figure out what to do if patch will be applied only on single project as a test, then it should be applied on rest. How that would be possible if upgrade should be a part of regular start of Pype. Environment variable, command line argument?)\r\nAll parts(methods) of single patch will be run sequentially, only if all parts finish successfully, next patch will be run.\r\n(Investigate possibility of single transaction for all Mongo update queries.)\r\n\r\n**Rollback**\r\nIt might prove necessary to backup the state of DB before updates for possible rollback if error is found.\r\nNot sure if build something to backup/restore directly in Pype OR somehow use external `mongodump` + `mongorestore` scripts. In the latter case we would need to distribute these with Pype installation.\r\n\r\nIt might be useful to rename 'broken' collections and keep them on server for future debugging. Restore then would recreate all collections from backup.\r\n\r\n(Or maybe rename all collections instead of backup, that would allow us to maybe highlight changes after update. Not sure if it is actually possible to rename the collection though.)\r\n\r\nIn case of error similar document should be created on `upgrade_patches` with additional 'error' field for trackback of issue for possible debugging.\r\n\r\n**Notes and possible issues**\r\nIt might be useful to store versions of Pype to each of the patches and stop starting of Pype with a lower version then its stored in DB.\r\nCurrently there is no 'main' (wanted to called it master but thats a no-no now :-p) Pype that could trigger this, so there might be an issue with unwanted start of upgrade by someone who gets their hands on installation prematurely. Maybe introduce command line flag? (But then it might happen that updated installation package is distributed to people, but upgrade it not run yet (because of timing/personal issues).\r\n\r\nMiro board for design https://miro.com/app/board/o9J_kjoG3R8=/?moveToWidget=3074457347479145837&cot=1\n\n[cuID:PYPE-1123]",
        "url": "https://github.com/ynput/OpenPype/issues/595"
    },
    {
        "number": 694,
        "title": "As an Artist I would like the context menu in the Loader app to receive some improvements",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently the Loader app context menu is often very slow to load. As well, this menu is generally cluttered with no clear organisation. \r\n\r\nFinally, the nomenclature of \"import\" vs. \"load\" is not consistent for some DCCs and the actions. For example, in Photoshop\r\n\r\n**Describe the solution you'd like**\r\n\r\n1. It would be preferable that when there are multiple representations for a single action, that these are grouped into a sub-menu.  I know that there was discussion of having the menu the other way around ( representation > action ) ... either way would be an improvement from a menu that looks like this:\r\n![2020-11-05_10-53-11](https://user-images.githubusercontent.com/2853462/98283476-b98f3a80-1f6d-11eb-825f-9e78e9ed2ad5.png)\r\n2. Get to the bottom of slowness of loading the context menu. Anecdotally, this seems to be especially bad in Photoshop.\r\n3. Consistently use the term \"Load\" for the label of the Action when it is actually adding metadata to the current scene/file/project, rather than terms like import or the name of the plugin like ImageLoader.  Use the label \"Import\" when you are just bringing the item in with no metadata. Use the term \"Open\" or \"Open & Localise\" when the loader will actually directly open a localised sandboxed version.\r\n4. Consistently add \"Open & Localise\" actions in relevant DCCs. Photoshop and Harmony both would benefit considerably to have this feature!\r\n5. Add config options for filters of which families should appear in a DCC so no menu items that cant be run ever show up.\r\n ( I could be wrong, but I think this is not yet fully implemented.\r\n\r\n \r\n\n\n[cuID:PYPE-1132]",
        "url": "https://github.com/ynput/OpenPype/issues/694"
    },
    {
        "number": 714,
        "title": "Editorial Farm Publishing",
        "body": " At this moment all of editorial publishing is done locally and since it is very resource / time consuming task it would be better to find some other solution to it. The farm rendering could solve the issue. Bellow you can find a very brief graph of processes which could solve the issue. \r\n\r\nMost of Global plugins are deliberately skipped as they are not necessary to include.\r\n\r\nIf most of these plugins will be working with OTIO objects then we could create very universal workflow perhaps living mostly in Global plugins.\r\n\r\n![editorial remote rendering](https://user-images.githubusercontent.com/40640033/99082994-2b4a3280-25c5-11eb-9f15-3f01c907b9f7.jpg)\r\n\r\nLets disuse what is possible to do. And here is link to the Miro board if you want to contribute to the graph https://miro.com/app/board/o9J_lfbogwI=/\n\n[cuID:PYPE-1133]",
        "url": "https://github.com/ynput/OpenPype/issues/714"
    },
    {
        "number": 836,
        "title": "Workfiles: Ability to show progress/activity when opening/ssaving",
        "body": " ## Description\r\n\r\nWhen opening or saving file via *Workfiles* tool it would be nice to show user some progress indicator. For example in Harmony, when saving can take a lot of time (because it needs to be zipped) user is staring helplessly on non-responsive UI of *Workfiles* hoping it is doing its job (that can take even few minutes).\n\n[cuID:PYPE-1135]",
        "url": "https://github.com/ynput/OpenPype/issues/836"
    },
    {
        "number": 838,
        "title": "Build Workfile: Create instances",
        "body": " **Goal**\r\n\r\nCreate studio specific instances when building a workfile.\r\n\r\n**Motivation**\r\n\r\nWhen users build a workfile they will need to create instances as well before being able to publish. These instances are often standardized on a project, for example animation will always wanna create a review instance.\r\n\r\n**Implementation**\r\n\r\nRunning the creator plugins would happen after all loading has been done.\r\n\r\nWhich creator plugins to run and input settings to the creator plugins would be studio specific.\n\n[cuID:PYPE-1136]",
        "url": "https://github.com/ynput/OpenPype/issues/838"
    },
    {
        "number": 879,
        "title": "Integration: Windows and hardlink support",
        "body": " ## Trouble with hardlinks on Windows\r\n\r\nHardlinks on Windows are more limited than in Linux. If underlaying file system of project share runs on Windows, there is limit of 1023 hardlinks to the same file.  This can be easily reached on bigger projects. Linux (from kernel 3.x.x) has this limit set on ext4 on 65000, but it is filesystem AND kernel dependent.\r\n\r\nAlso opening any of the hardlinks in locking way will lock them all. This is ok because published file shouldn't be touched but until we implement texture publishing, this can wreak havoc.\r\n\r\n### Sources:\r\n\r\n[CreateHardLink on Microsoft](https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createhardlinka)\r\n\n\n[cuID:PYPE-1137]",
        "url": "https://github.com/ynput/OpenPype/issues/879"
    },
    {
        "number": 890,
        "title": "Arnold Standin not working with relative paths",
        "body": " Pype is currently forcing relative paths in arnold to start with [PYPE_ROOT] which is overriding the env vars. We need to double check if the problem is incorrectly set path on the farm, or remove the forced replacement.\r\n\r\nhttps://pype.freshdesk.com/a/tickets/515\n\n[cuID:yjx90r]",
        "url": "https://github.com/ynput/OpenPype/issues/890"
    },
    {
        "number": 925,
        "title": "Integrator: Atomicity of operation",
        "body": " ## Problem\r\n\r\nWhen integrator is doing its job it goes through lot of operations - writing to database, copying files, etc. Problem is when something fails. It will leave stuff in invalid state.\r\n\r\n### Case study\r\n\r\nPublishing renders on farm. It will create versions in database and then starts copying. For some reason (but it really doesn't matter if it is missing file or invalid permissions) copying of files fails, integrator crashes and then we have versions in database and partial stuff on disk.\r\n\r\n## Solution\r\n\r\nParts of it can be solved by validators (checking if we have all files before integrating them) but some errors can occur during integration itself. Those should fail gracefully, rolling back whole \"session\".\r\n\r\nIntegrator should create journal of operations. If one of them failed then next action should go over this journal and revert everything back.\n\n[cuID:PYPE-1351]",
        "url": "https://github.com/ynput/OpenPype/issues/925"
    },
    {
        "number": 927,
        "title": "DV Resolve - loading/updating - OTIO file",
        "body": " \n\n[cuID:PYPE-1141]",
        "url": "https://github.com/ynput/OpenPype/issues/927"
    },
    {
        "number": 929,
        "title": "DV Resolve - publishing - retime",
        "body": " \n\n[cuID:PYPE-1143]",
        "url": "https://github.com/ynput/OpenPype/issues/929"
    },
    {
        "number": 1118,
        "title": "Ftrack server enhancements",
        "body": " ## Suggested enhancements\r\n### Small bugs\r\n- don't store content event handler files by their names (doubled filename won't be loaded)\r\n- store information about loaded files/classes and crashed files/classes\r\n    - this is for report purpose (mainly crashed files are important)\r\n\r\n### Client administration enhancements\r\n- replace socket communication with websocket\r\n    - date, info and reports would be much easier to pass to status action\r\n    - be able to stop and keep stopped any ftrack event process\r\n\r\n### Nice to have\r\n- don't look for `register` function but for classes that inherit from `BaseHandler`\r\n    - add abstract methods to `BaseHandler`\n\n[cuID:PYPE-1339]",
        "url": "https://github.com/ynput/OpenPype/issues/1118"
    },
    {
        "number": 1134,
        "title": "Plugins: Cleanup plugin will leave 'beauty' rendered files",
        "body": " **Bug**\r\n\r\nPublishing multiple instances on farm from Maya - for example `Main` (beauty), `Shadows`, and `Normals` will finish and cleanup plugin should delete all after they are copied to their final destination. It will delete `Shadows` and `Normals` but leave `Main` behind.\n\n[cuID:PYPE-1154]",
        "url": "https://github.com/ynput/OpenPype/issues/1134"
    },
    {
        "number": 1140,
        "title": "Maya: Arnold stand-in texture paths",
        "body": " ## Problem\r\n\r\nWhen publishing Arnold stand-in with textures for rendering on multiplatform render farm care must be taken with paths to the textures. If you provide absolute path to the texture like `\\\\some\\unc\\path.tx` then this path won't work on Linux machines as paths in ASS files are not remapped by Deadline for example. Arnold is providing mechanism to overcome this limitation - you can use relative texture path and point Arnold using **Texture Search Path** in Render settings to look there. This path can take environment variables in a form `[ENV_VAR]` so if your relative texture path is `path.tx` and your `[TX_FOLDER]` is defined on Windows as `\\\\some\\unc\\` and on Linux like `/mnt/textures/` it will work.\r\n\r\nBut Pype doesn't check anything about it and should either add all found texture *roots* to **Texture Search Path** or issue warning via validator when absolute path is used or texture is unreachable.\r\n\r\n**Resources:** [Arnold documentation](https://docs.arnoldrenderer.com/display/A5AFMUG/Search+Path)\n\n[cuID:PYPE-1157]",
        "url": "https://github.com/ynput/OpenPype/issues/1140"
    },
    {
        "number": 1176,
        "title": "Plugin settings overrides",
        "body": " ## Description\r\nWe should be able easily apply attribute value changes for all plugins (pyblish, load, create, ...) from settings. Which probably does not work as expected in all cases right now. That is because some plugins may be registered from pype modules but settings are looking only into host specific settings.\r\n\r\nRight now it maybe work as expected for pyblish plugins if folder structer match settings structure. Which is nice but also not 100% as it is based on filepath of dynamically loaded modulu which may not contain correct in all hosts as every python may have different approach how to load plugin files.\r\n\r\n### Suggested solution 1\r\nAll plugin class names would be unique across all modules/hosts so it would be possible to load all plugin specific settings from all project specific settings and get the value/s by class name.\r\n**Big disadvantage** is that we must be carefull about plugin names across whole pype.\r\n\r\n### Suggested solution 2\r\nImplement class method on each plugin type class that would change class attributes based on passed project settings value. This method can be implemented on Pype's plugin class which would be used as base for plugins. This method can do what is happening in current `patched_discover` function. This approach gives more freedom as it would be easy to change content of the method for specific cases where it is easier to use different values that plugin specific.\r\n\r\n```python\r\n# Example\r\n# This class can be used as base for all publish context plugins so all plugins would work the same way.\r\nclass PypeContextPlugin(pyblish.api.ContextPlugin):\r\n    @classmethod\r\n    def apply_settings_overrides(cls, project_settings):\r\n        # Code from `patched_discover`\r\n        filepath = os.path.normpath(inspect.getsourcefile(cls))\r\n        host_from_file = file.split(os.path.sep)[-4:-3][0]\r\n        plugin_kind = file.split(os.path.sep)[-2:-1][0]\r\n        config_data = (\r\n            project_settings\r\n            .get(host_from_file, {})\r\n            .get(plugin_kind, {})\r\n            .get(plugin.__name__)\r\n        ) or {}\r\n        for key, value in config_data.items():\r\n            setattr(cls, key, value)\r\n```\r\n\r\nThis way it can be really specific for the plugin. Also can be easily extended per plugin or globally, like add filters, specify which attributes can be overriden, value validations, totally skip attribute overrides, class definition may specific settings keys where are stored it's values (`[\"ftrack\". \"publish\"]`), add ability to change (or set) GUI `options` by settings etc.\r\n\r\nAnd there are other possible solutions. The point of this issue is to mention that plugin overrides may not work as expected for all kind of plugins in current Pype 3.\n\n[cuID:PYPE-1342]",
        "url": "https://github.com/ynput/OpenPype/issues/1176"
    },
    {
        "number": 1244,
        "title": "Export maya ass job",
        "body": " ## Description\r\n- script `~/pype/export_maya_ass_job.py` does not work in Pype 3\n\n[cuID:PYPE-1192]",
        "url": "https://github.com/ynput/OpenPype/issues/1244"
    },
    {
        "number": 1306,
        "title": "Maya: Refactor Maya API",
        "body": " ## Problem\r\n\r\nMaya integration is complex. Main problem with it is that right now most of the code is in one file `hosts/maya/api/lib.py`. This file is ~2700 lines of code long and including function from looks management to generic dialog popup functions. This should be split into module `lib/__init__.py` with different packages grouping specific functionality. This way it will be more maintainable and testable.\n\n[cuID:PYPE-1345]",
        "url": "https://github.com/ynput/OpenPype/issues/1306"
    },
    {
        "number": 1355,
        "title": "Pype 4: Define representation as data class",
        "body": " ## Problem\r\n\r\nCurrent use of representation data as normal dict is pretty wild as we depend on its values but we are not enforcing them anyhow. It lacks proper documentation and is not very developer friendly. I propose to use [attrs module](https://www.attrs.org/en/stable/) we already have in dependencies for it - it provides clear interface for data classes in python and proper serialization so code impact should be minimal.\n\n[cuID:PYPE-1347]",
        "url": "https://github.com/ynput/OpenPype/issues/1355"
    },
    {
        "number": 1361,
        "title": "Maya: Renderman support issues",
        "body": " ## RenderMan issues\r\n\r\nCurrently limited support for RenderMan in Maya is having these problems:\r\n\r\n- [ ] Creator won't set proper Render Settings\r\n- [X] Render settings validator is validating wrong attributes for image prefix (`imageFileFormat` only, but it should check `imageOutputDirectory` __AND__ `imageFileFormat`) (Solved by #3006)\r\n- [ ] Enabling animation in \ud83d\udd3c validator repair action\r\n- [ ] Publishing/Loading RIB files?\r\n\r\n[cuID:PYPE-1348]",
        "url": "https://github.com/ynput/OpenPype/issues/1361"
    },
    {
        "number": 1453,
        "title": "Configuration Docs",
        "body": " Global holder for settings sections that need to be documented\r\n\r\n- [ ] Project settings > Deadline > Publish > MayaSubmitDeadline\r\n- [ ] Project settings > Deadline > Publish > NukeSubmitDeadline\r\n- [x] Project settings > Deadline > Publish > HarmonySubmitDeadline\r\n- [x] Project settings > Deadline > Publish > AfterEffectsSubmitDeadline\r\n- [ ] Project settings > Ftrack > Events > sync_to_avalon\r\n- [ ] Project settings > Ftrack > Events > prepare_project\r\n- [ ] Project settings > Ftrack > Events > sync_hier_entity_attributes\r\n- [ ] Project settings > Ftrack > Events > clone_review_session\r\n- [ ] Project settings > Ftrack > Events > thumbnail_updates\r\n- [ ] Project settings > Ftrack > Events > user_assignment\r\n- [ ] Project settings > Ftrack > Events > status_update\r\n- [ ] Project settings > Ftrack > Events > status_task_to_parent\r\n- [ ] Project settings > Ftrack > Events > status_task_to_version\r\n- [ ] Project settings > Ftrack > Events > status_version_to_task\r\n- [ ] Project settings > Ftrack > Events > first_version_status\r\n- [ ] Project settings > Ftrack > Events > next_task_update\r\n- [ ] Project settings > Ftrack > User_handlers > application_launch_statuses\r\n- [ ] Project settings > Ftrack > User_handlers > create_update_attributes\r\n- [ ] Project settings > Ftrack > User_handlers > prepare_project\r\n- [ ] Project settings > Ftrack > User_handlers > clean_hierarchical_attr\r\n- [ ] Project settings > Ftrack > User_handlers > delete_asset_subset\r\n- [ ] Project settings > Ftrack > User_handlers > delete_old_versions\r\n- [ ] Project settings > Ftrack > User_handlers > delivery_action\r\n- [ ] Project settings > Ftrack > User_handlers > store_thubmnail_to_avalon\r\n- [ ] Project settings > Ftrack > User_handlers > job_killer\r\n- [ ] Project settings > Ftrack > User_handlers > sync_to_avalon_local\r\n- [ ] Project settings > Ftrack > User_handlers > get_tasks_event_to_csv\r\n- [ ] Project settings > Ftrack > User_handlers > seed_project\r\n- [ ] Project settings > Ftrack > Publish > IntegrateFtrackNote\r\n- [ ] Project settings > Ftrack > Publish > ValidateFtrackAttributes\r\n- [ ] Project settings > Global > Publish > IntegrateHeroVersion\r\n- [ ] Project settings > Global > Publish > ExtractJpegEXR\r\n- [x] Project settings > Global > Publish > ExtractReview\r\n- [ ] Project settings > Global > Publish > ExtractBurnin\r\n- [x] Project settings > Global > Publish > IntegrateAssetNew\r\n- [ ] Project settings > Global > Publish > ProcessSubmittedJobOnFarm\r\n- [ ] Project settings > Global > Tools > creator\r\n- [ ] Project settings > Global > Tools > Workfiles\r\n- [ ] Project settings > Global > Project_folder_structure > __project_root__\r\n- [x] Project settings > Global > Sync_server > enabled\r\n- [x] Project settings > Global > Sync_server > config\r\n- [x] Project settings > Global > Sync_server > sites\r\n- [ ] Project settings > Global > Project_plugins\r\n- [ ] Project anatomy > Imageio > Hiero > workfile\r\n- [ ] Project anatomy > Imageio > Hiero > regexInputs\r\n- [ ] Project anatomy > Imageio > Nuke > viewer\r\n- [ ] Project anatomy > Imageio > Nuke > workfile\r\n- [ ] Project anatomy > Imageio > Nuke > nodes\r\n- [ ] Project anatomy > Imageio > Nuke > regexInputs\n\n[cuID:PYPE-1317]",
        "url": "https://github.com/ynput/OpenPype/issues/1453"
    },
    {
        "number": 1723,
        "title": "TrayMenu: changelog link",
        "body": " # Description\r\nAt the moment the only way to get to change log is to open CHANGELOG.md fille in OpenPype codebase (not everyone knows how to get there) or find it on Github (also not everyone knows how to). \r\n\r\n# Solution\r\nEasiest way would be to have the Github link available at our OpenPype info widget (TrayMenu). This link would open Githhub page in web brouwser. \r\n\r\n![image](https://user-images.githubusercontent.com/40640033/122374694-e3c4c400-cf62-11eb-855e-324b4e329b8f.png)\r\n\r\n\n\n[cuID:OP-1133]",
        "url": "https://github.com/ynput/OpenPype/issues/1723"
    },
    {
        "number": 1730,
        "title": "Single definition of host name for publishing",
        "body": " ## Description\r\nWe don't have a way how to get a host name. Currently is used environment `AVLON_APP` which should hold host name to be used but it would be great if we would have a collector or a function to get it at any time the same way.\n\n[cuID:yjxych]",
        "url": "https://github.com/ynput/OpenPype/issues/1730"
    },
    {
        "number": 1780,
        "title": "Pre-flight validation",
        "body": " **Goal**\r\n\r\nGeneralize flagging updates to user on launch.\r\n\r\n**Motivation**\r\n\r\nThere are a couple of crucial setups that needs to be flagged on launch rather than at publish;\r\n\r\n- frame range update.\r\n- resolution update.\r\n- container update.\r\n\r\nCurrently there are no flagging of updates to asset attributes like frame range and resolution.\r\nContainer updates are handled different per host and more importantly flagging to the user about container updates are handled different. Generalizing this feedback to the user, would lower the pipeline specific knowledge for a host.\r\n\n\n[cuID:yjxycq]",
        "url": "https://github.com/ynput/OpenPype/issues/1780"
    },
    {
        "number": 1814,
        "title": "TVPaint ability to not create review of render layer/pass family",
        "body": " ## Description\r\nIt is not possible to disable review of `renderLayer` and `renderPass` families.\r\n\r\n### Notes\r\n- it should be possible to disable that at least per project\n\n[cuID:yjxycx]",
        "url": "https://github.com/ynput/OpenPype/issues/1814"
    },
    {
        "number": 1820,
        "title": "`ProcessSubmittedJobOnFarm` Plulgin refactory",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAt the moment this plugin is holding multiple module specific code. So for example Deadline and Muster code are part of one plugin.\r\n\r\n**Describe the solution you'd like**\r\nSeparate modul specific into separate plugins so those could be controlled with settings.\r\n\r\n\n\n[cuID:PYPE-1306]",
        "url": "https://github.com/ynput/OpenPype/issues/1820"
    },
    {
        "number": 1830,
        "title": "Templates: parsing context from path",
        "body": " ### Problem\r\n\r\nCurrently, we are unable to get context from path by parsing it and extracting it by template because we allow to much freedom in naming and thus we have no way to tokenize it with certainity. This pose some limitation on users workflow - for example you cannot save your workfile via host native way to different directory with automatic context switch. Or you cannot determine context just by its location on disk - useful for publishing for example.\r\n\r\n### Possible solution\r\n\r\nTo overcome it without unnecessary restrictions would be to save context per location - to json side containers or to database for example. So we take file path, check with database (or existance of json file in that location and parsing it) and get the context of it. This database or side container context would be created on demand by OpenPype - whenever we create folder automatically.\r\n\r\nIf user should save file in currently unknown location, we could utilise *on_save* events implemented in various hosts to catch it and pop up dialog window with context selection so user would define what that place is.\n\n[cuID:PYPE-1308]",
        "url": "https://github.com/ynput/OpenPype/issues/1830"
    },
    {
        "number": 1846,
        "title": "Guard against running multiple syncs",
        "body": " ### Problem\r\n\r\nWhen multiple instances of OpenPype are running logged under same ftrack user, that user will see duplicated action in ftrack. When such action is executed it will run twice (or as many as there are logged OpenPype instances running). The greatest danger pose those actions that are modifying database - Sync to Avalon. That one will create duplicate assets in avalon database.\r\n\r\n### Proposal\r\n\r\nWe should lock syncing so no more then one such action can run at the same time (this is probably problem with other cases not directly related to multiple instances with same ftrack user - I suppose there can be more users running this action at the same time). This syncing issue is probably the most dangerous of those cases but it is rather confusing to see doubled actions, launching Maya 2x times and so on, so we should handle this more gracefully.\r\n\r\nWe already have local ID like *holistic-heavenly-skylark* generated per machine per user. We should add to this process ID of running OpenPype and use it as a lock. We can probably do little with different instance running on different machine under same user, but we should at least provide warning dialog or something.\n\n[cuID:PYPE-1313]",
        "url": "https://github.com/ynput/OpenPype/issues/1846"
    },
    {
        "number": 1873,
        "title": "Library Loader: Subset grouping doesn't work",
        "body": " **Describe the bug**\r\nSubset grouping via `CTRL+G` works in hosts Loader (at least in Maya), but it doesn't in Library Loader. It does not popup the grouping setting window.\n\n[cuID:PYPE-1283]",
        "url": "https://github.com/ynput/OpenPype/issues/1873"
    },
    {
        "number": 1908,
        "title": "Version Repository URI Paths",
        "body": " **Goal**\r\n\r\nTo support URI schema paths for the versions repository.\r\n\r\n**Motivation**\r\n\r\nCurrently only local paths are support, but there is no reason why Openpype couldn't download versions from cloud storages.\r\n\r\nOur use case for this is that we have a project where we cant guarantee that the versions repository path is the same for remote users, but we can provide a download link to a dropbox folder which would be the same for everyone.\r\n\r\n**Implementation**\r\n\r\nWe would use URI paths to define which type of storage the version repository is on:\r\n\r\n`file://` > local file system\r\n`git://` > git repository\r\n`dropbox://` > dropbox folder/link\r\n\r\nFor backwards compatibility any paths that fail or do not return a URI scheme, should be treated as local file system path.\n\n[cuID:PYPE-1290]",
        "url": "https://github.com/ynput/OpenPype/issues/1908"
    },
    {
        "number": 1957,
        "title": "Settings: User notes",
        "body": " ## Description\r\nIt would be great if we would be able to \"add a user note\" to settings UI so they can write down \"Why they set it to the value\" or something similar.\n\n[cuID:PYPE-1384]",
        "url": "https://github.com/ynput/OpenPype/issues/1957"
    },
    {
        "number": 1993,
        "title": "premium addon settings reload",
        "body": "  **Describe the bug**\r\nIf anything changes in default settings and then reloaded, nothing is reloaded.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. ./tools/run_settings.ps1\r\n2. change anything in defaults of premium addon settings\r\n2. hit reload \r\n3. check if anything changed\r\n\r\n**Expected behavior**\r\nIf anything had changed in defaults after reload it should be displaied as it is set in defaults\r\n\n\n[cuID:]\n\n[cuID:OP-1615]",
        "url": "https://github.com/ynput/OpenPype/issues/1993"
    },
    {
        "number": 1994,
        "title": "Premium addon adding tag to enumerator",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nToo be able to run a premium add-on plugin which requires the special tag - not available in default codebase, we need to develop way which would allow to push new tag to a settings tag enumerator from addon package. \r\n\r\n\n\n[cuID:OP-1618]",
        "url": "https://github.com/ynput/OpenPype/issues/1994"
    },
    {
        "number": 2011,
        "title": "Animation Library",
        "body": " We need to implement support for publishing and loading animation curves, that can be shared across shots, or possible even shows. The ultimate goal is for the artist to run publish on an animation scene, which will extract alembic cache as we do now (optionally), but also animation clip that can be loaded using our Loader, Library loader and a new animation library GUI.\r\n\r\nMultiple studios have suggested sticking to [Studio Library](https://www.studiolibrary.com/) format, for now considering its wide adoption. This is probably a good idea considering there's not a huge need at the moment for cross host compatibility of this data, even though ultimately that should be our target. \r\n\r\n\r\n[cuID:[OP-1531](https://app.clickup.com/t/11ecym0)]",
        "url": "https://github.com/ynput/OpenPype/issues/2011"
    },
    {
        "number": 2060,
        "title": "Fallback for storing sensitive stuff when keyring \ud83d\udd12 is not available",
        "body": " ## Problem\r\n\r\nOn system where keyring is not available or not feasible (like headless render machines, etc.) there should be fallback option for OpenPype to store sensitive stuff like API keys and mongo url, etc.\r\n\r\nSo I propose that we store these files in jsons (we already have mechanism for it) but encrypt sensitive data with key stored in database. I understand there are big holes in this but at least it won't be plaintext and you'll need to get into mongodb to get the key. I consider this as horrible solution useful only in those cases when keyring cannot be used.\n\n[cuID:[OP-1730](https://app.clickup.com/t/1je50u8)]",
        "url": "https://github.com/ynput/OpenPype/issues/2060"
    },
    {
        "number": 2133,
        "title": "Multiple Resolution profiles with filters",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAt the moment OpenPype is supporting only one delivery resolution profile. There are productions which require more resolution profiles to be used. To be more specific we could be using a `delivery` resolution of 1920x1080 (pixleAspect=1) but for the Nuke working resolution we wish to have 2048x1080 (pixleAspect=1); also we could need for Maya worfiles to have much bigger resolution and perhaps different aspectRatio. \r\n\r\n**Describe the solution you'd like**\r\nThe same way as we are defining Extract Review profiles, we could be creating resolution profiles with filters by `host`, `task_type` or `family`, so we could direct better where should be used any particular resolution definition. \r\n\r\n\r\n\r\n[cuID:[OP-1843](https://app.clickup.com/t/1mrgawc)]",
        "url": "https://github.com/ynput/OpenPype/issues/2133"
    },
    {
        "number": 2134,
        "title": "Ftrack don't validate intent value existence",
        "body": " ## Description\r\nFtrack integrator crashes if intent value is not available in possible values of custom attribute.\r\n\r\n## Suggested solution\r\nValidate if is intent value available. Log warning message if is unavailable and skip settings of intent.\n\n[cuID:[OP-1844](https://app.clickup.com/t/1mrgg9f)]",
        "url": "https://github.com/ynput/OpenPype/issues/2134"
    },
    {
        "number": 2135,
        "title": "Setttings modifiable dictionary and empty keys",
        "body": " ## Description\r\nModifiable dictionary (`dict-modifiable`) does not have ability to set empty string as key which may be needed in some cases.\n\n[cuID:[OP-1845](https://app.clickup.com/t/1mrghbr)]",
        "url": "https://github.com/ynput/OpenPype/issues/2135"
    },
    {
        "number": 2143,
        "title": "Ftrack: Push hierarchical value may crash on new task creation",
        "body": " ## Issue\r\nFtrack event handler `PushFrameValuesToTaskEvent`. When task is created on Ftrack it will process custom attribute changes like being set to `None` and to hierarchical value so there are 2 operatoins changing same attribute in one session commit (at least it looks like that).\r\n\r\n### Traceback\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\iLLiCiT\\PycharmProjects\\pype3\\openpype\\modules\\default_modules\\ftrack\\event_handlers_server\\event_push_frame_values_to_task.py\", line 427, in _commit_changes\r\n    session.commit()\r\n  File \"C:\\Users\\iLLiCiT\\PycharmProjects\\pype3\\.venv\\lib\\site-packages\\ftrack_api\\session.py\", line 1265, in commit\r\n    result = self.call(batch)\r\n  File \"C:\\Users\\iLLiCiT\\PycharmProjects\\pype3\\.venv\\lib\\site-packages\\ftrack_api\\session.py\", line 1643, in call\r\n    raise ftrack_api.exception.ServerError(error_message)\r\nftrack_api.exception.ServerError: Server reported error: ValueError(Could not find entity CustomAttributeValue with entity_key [u'3bcf7a3e-374c-408b-bc76-66a07368ce51', u'0448c7b0-302c-11ec-b307-6622c7bfe4a3'].)\r\n```\r\n\r\n[cuID:[OP-1894](https://app.clickup.com/t/1n3x2a4)]",
        "url": "https://github.com/ynput/OpenPype/issues/2143"
    },
    {
        "number": 2146,
        "title": "Maya: model publish strips material if other than default",
        "body": " **Describe the bug**\r\nWe export maya models without shading, however currently if the model has any material other than maya default, it will be stripped completely and stay green without shading group assigned to it.\r\n\r\n**Expected behavior**\r\nWe shouldn't touch the material in the current scene when exporting model\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/3333008/137890961-503c0002-5a70-4513-9498-75bb7e7fb4d4.png)\r\n\r\n\r\n\r\n\n\n[cuID:[OP-1900](https://app.clickup.com/t/1n9fanc)]",
        "url": "https://github.com/ynput/OpenPype/issues/2146"
    },
    {
        "number": 2213,
        "title": "Standalone publisher editorial adding event order",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAt the moment we are not able to deal with multiple occurrences of a clip name. I a name is detected multiply exception will raise an error.\r\n\r\n**Describe the solution you'd like**\r\nWe could deploi an enhencement to renamer to add an order number in case there are multiple ocurances of the same name. The number will be based on a possition of clip on timeline. New token for name template will be created `{clip_order:02d}`. It will be usually holding number `1` but in case of multiple clip name detection it will create a sequence.\r\n\r\n**Describe alternatives you've considered**\r\nWe could also create `{clip_index:03d}`. It will add number to every clip based on position on timeline. Disadvantage would be in case of need for republishing a new cut of editorial, wchich might be a case of regular problem. \r\n\r\n**Additional context**\r\n- clients are usually doing many publishes of the same edl/xml during a project life. \r\n- sometimes they only need to generate shot names on full clip name + some unification token in case of mulple occurancies of the same clip name. \r\n\n\n[cuID:[OP-1979](https://app.clickup.com/t/1r55uuy)]",
        "url": "https://github.com/ynput/OpenPype/issues/2213"
    },
    {
        "number": 2227,
        "title": "Implement dynamic parameters for Site Sync providers in Local Setting",
        "body": " Currently both System and Project setting allow building settings based on querying Site Sync providers.\r\n\r\nOnly place it is still missing is Local Setting.\r\n\r\nLS should allow artist to modify modifiable parameters returned by `provider.get_local_settings_schema()` method.\n\n[cuID:[OP-2014](https://app.clickup.com/t/1rgn3am)]",
        "url": "https://github.com/ynput/OpenPype/issues/2227"
    },
    {
        "number": 2249,
        "title": "Delivery ignores frame padding",
        "body": " ## Description\r\nFrame padding from delivery template is ignored and padding from source is used but in some cases (when padding should be 7 or higher) it can cause and issue because it will add more padding than expected.\n\n[cuID:[OP-2024](https://app.clickup.com/t/1t7cgrn)]",
        "url": "https://github.com/ynput/OpenPype/issues/2249"
    },
    {
        "number": 2252,
        "title": "Settings: Custom Representation's Tag in Anatomy",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nWe are not having functioning tag filtering model as we only support to select from tags which are created in code and not letting admins to add their own for filtering in Extract Review and Extract Burnins. We need to build more universal worlflow for tags. Similarly like we are defining Task Types in Anatomy. \r\n\r\n**Describe the solution you'd like**\r\nWe could create new section in Anatomy called `Representation Tag`. Here an admin could add any of his custom tag and then use downstream in settings. They would occure in a profile filter for filtering within representation stack.  As those settings are project overidable this allows have a project custom configuration. We also need to add Tag filtering into Burnin profile Additioinal filtering.\r\n\n\n[cuID:[OP-2025](https://app.clickup.com/t/1t7gf3w)]",
        "url": "https://github.com/ynput/OpenPype/issues/2252"
    },
    {
        "number": 2253,
        "title": "Burnins: frame range with frame padding",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nWe are not supporting frame padding in `{frame_start}-{current_frame}-{frame_end}` so in case a admin wants to use his own padding for frame numbers he cannot. It is causing a jumps in current frame in case start frame is 990 and end 1100. \r\n\r\n**Describe the solution you'd like**\r\nIt would be great if our burnin profile templates suports padding formating as such `{frame_start:0>5}-{current_frame:0>5}-{frame_end:0>5}`\r\n\r\n**Describe alternatives you've considered**\r\nOthe way would be to get padding number from end frame (1100) and push it to all numbers so the current frame would not cause jumb at start frame with lower padding (990). \n\n[cuID:[OP-2026](https://app.clickup.com/t/1t7gzjd)]",
        "url": "https://github.com/ynput/OpenPype/issues/2253"
    },
    {
        "number": 2263,
        "title": "Maya: Look Shading Engine Naming validator repair action not working",
        "body": " ## Bug\r\n\r\nWhen publishing look with incorrect naming validator **Look Shading Engine Naming** will trigger ok, but its repair action fails on:\r\n\r\n```\r\nPreparing <class 'openpype.action.RepairAction'>..\r\nAction prepared.\r\n// pyblish.pyblish.plugin.Action : Finding failed instances.. // \r\n// Error: pyblish.plugin : Traceback (most recent call last):\r\n  File \"E:\\projects\\openpype\\3x\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"E:\\projects\\openpype\\3x\\openpype\\action.py\", line 65, in process\r\n    plugin.repair(instance)\r\n  File \"E:\\projects\\openpype\\3x\\openpype\\hosts\\maya\\plugins\\publish\\validate_look_shading_group.py\", line 58, in repair\r\nRuntimeError: Cannot rename a read only node.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/142405997-6b04aa53-a416-4ddf-a2a6-2cbdc2ca1812.png)\r\n\r\n\r\nProblem is that it is trying to rename `initialShadingGroup` that is read only. So if artist forget to apply shader so there is part of the model with default shader, this will fail and it is not very clear why.\r\n\r\n[cuID:[OP-2032](https://app.clickup.com/t/1tjyqft)]",
        "url": "https://github.com/ynput/OpenPype/issues/2263"
    },
    {
        "number": 2313,
        "title": "Maya: attaching multiple renders to same subsets",
        "body": " ## Bug\r\n\r\nWe are missing validator for very specific but possible situation:\r\n\r\nImagine you have subset **A**, **B**, **C**. and you have render layer **I**, **II**, **III***. And you are trying to do this\r\n\r\n```\r\nI:   (A, B, C)\r\nII:  (A, B, C)\r\nIII: (A, B, C)\r\n```\r\n\r\nthis will end up with overwritting itself and will render only one layer and it will fail to publish. \n\n[cuID:[OP-2062](https://app.clickup.com/t/1vhw6u6)]",
        "url": "https://github.com/ynput/OpenPype/issues/2313"
    },
    {
        "number": 2316,
        "title": "Make rpm and deb packages for linux binary distributions",
        "body": " ## Feature\r\n\r\nWe should provide **rpm** / **deb** packages for linux distributions. Those can be created directly in dockerfile after build.\n\n[cuID:[OP-2063](https://app.clickup.com/t/1vhw6un)]",
        "url": "https://github.com/ynput/OpenPype/issues/2316"
    },
    {
        "number": 2327,
        "title": "DJV Action should get djv location from applications",
        "body": " ## Problem\r\n\r\nCurrently djv action is taking djv path from environment variable `DJV_PATH`. But it should be more connected to application list and probably handle different versions.\n\n[cuID:[OP-2066](https://app.clickup.com/t/1vhw6z3)]",
        "url": "https://github.com/ynput/OpenPype/issues/2327"
    },
    {
        "number": 2332,
        "title": "Validate subset name length",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nWe had an issue with our TVPaint render pass subset names getting to 92 character because they are a combination of the render layer name and the render pass name.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA global validator for subset name length, that can be configured by the studio.\r\n\n\n[cuID:[OP-2067](https://app.clickup.com/t/1vhw6zt)]",
        "url": "https://github.com/ynput/OpenPype/issues/2332"
    },
    {
        "number": 2344,
        "title": "Settings: String entity with ability of validate empty string",
        "body": " ## Description\r\nA lot of times happens that an empty string is left in UI e.g. in paths or in filtering which may affect the result how it works.\r\n\r\n## Suggested sulutions\r\n1. Add simple validation check of string if is empty.\r\n    - this has disadvantage that we have to handle situations when there are already existing invalid values in studio's settings and UI should not crash\r\n2. Handle those cases in code.\n\n[cuID:[OP-2076](https://app.clickup.com/t/1vqfz5f)]",
        "url": "https://github.com/ynput/OpenPype/issues/2344"
    },
    {
        "number": 2391,
        "title": "Ftrack base event handler does not know `lists` entityType",
        "body": " ## Description\r\nFtrack base event handler converts selection from event into entities but does not count with entityType `lists`. It seems that this entity type is not used much or was added recently. This issue does not cause hige impact on currentl functionality until we want to use `lists` entities.\n\n[cuID:[OP-2160](https://app.clickup.com/t/1x5f496)]",
        "url": "https://github.com/ynput/OpenPype/issues/2391"
    },
    {
        "number": 2395,
        "title": "extractenvironments command should allow filter out environment variables",
        "body": " Currently `extractenvironments` is used to pull OP env vars from a Deadline worker into DL rendering process. There is no easy way how to skip/filter out specific env vars. \r\n\r\nThere are two options:\r\n- add it to OP settings (issue is that we dont have settings per commands)\r\n- add it to DL configuration, next to location of OP executables\r\n\n\n[cuID:[OP-2166](https://app.clickup.com/t/1xb5gc9)]",
        "url": "https://github.com/ynput/OpenPype/issues/2395"
    },
    {
        "number": 2444,
        "title": "Maya: Keep selection handle consistent to geometry updates",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nLoading a published Alembic loads (by default) with the Selection Handle enabled. Upon first load Maya centers this based on the bounding box of the geometry.\r\n\r\nHowever, upon updating the versions of the loaded content the handle doesn't recenter. Which means that if the updated content is very different in size or even moved in location than the Selection Handle isn't consistent with the new location.\r\n\r\n**Describe the solution you'd like**\r\n\r\nTo ensure consistency we should either:\r\n- Update Selection Handle to the new (local space) center after updating the geometry.\r\n```python\r\nimport maya.api.OpenMaya as om\r\nfrom maya import cmds\r\n    \r\ndef get_local_center(dag_node):\r\n    \r\n    # The bounding box of a transform is always returned in world\r\n    # space even with the `objectSpace` flag - that only works on meshes\r\n    # directly. So we just make the bounds local space ourselves.\r\n    bounds = cmds.xform(dag_node, query=True, worldSpace=True, boundingBox=True)\r\n    \r\n    bmin = om.MPoint(bounds[:3])\r\n    bmax = om.MPoint(bounds[3:])\r\n    matrix = om.MMatrix(cmds.xform(dag_node, query=True, worldSpace=True, matrix=True))\r\n    matrix_inv = matrix.inverse()\r\n    bmin *= matrix_inv\r\n    bmax *= matrix_inv\r\n    bmin = om.MVector(bmin)\r\n    bmax = om.MVector(bmax)\r\n    center = (bmin + bmax) / 2.0\r\n    \r\n    return list(center)\r\n    \r\n    \r\ncenter = get_local_center(transform)\r\ncmds.setAttr(transform + \".selectHandle\", center[0], center[1], center[2], type=\"float3\")\r\n```\r\n\r\n**OR**\r\n- Always set the Selection Handle to origin [0, 0, 0] - which would only be needed on first load.\r\n\r\n```python\r\nfrom maya import cmds\r\n\r\ncmds.setAttr(transform + \".selectHandle\", 0, 0, 0, type=\"float3\")\r\n```\r\n\r\nLikely updating the center is the best workflow so that it'd still work fine for loaded geometry that is not even near the origin. This could be the case for loaded 'pointcaches' from animation for example.\r\n\r\n**Preview of current issue**\r\n\r\nI loaded version 1 and 2 of a simple geometry that changed in height, then also updated the older loaded version 1 to 2. Note the difference in selection handle compared to the geometry.\r\n\r\n![update_model_display_handle_issue](https://user-images.githubusercontent.com/2439881/147364359-518913a6-7061-44b2-8eb6-bf8e12ac0f4e.gif)\r\n\r\n\r\nThe issue is more prominent with published pointcaches of e.g. character animation that was moved to a different location in newer versions than when it was initially loaded.\r\n\r\n---\r\n\r\n**Animation/Time-related issues**\r\n\r\nThis issue could be even more complicated with animated geometry too since the selection handle would currently be different based on the frame the user is on when the animation was loaded. So if a character moves from left to right in a shot then when loading the character with the timeline near the beginning would have the handle on the left side, and otherwise more to the right.\r\n\r\n\n\n[cuID:[OP-2252](https://app.clickup.com/t/1yk18nt)]",
        "url": "https://github.com/ynput/OpenPype/issues/2444"
    },
    {
        "number": 2481,
        "title": "Maya: Look Manager Cross Project Compatibility",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nYou cannot load a look from a Library project.\r\n\r\n**Describe the solution you'd like**\r\nEnable the Look Manager to load looks from other projects than the current one.\r\n\n\n[cuID:[OP-2286](https://app.clickup.com/t/1za1g3y)]",
        "url": "https://github.com/ynput/OpenPype/issues/2481"
    },
    {
        "number": 2490,
        "title": "API documentation",
        "body": " This is attempt to reboot reboot of API documentation. We really need to do it. Solution to it is maybe switch from [Sphinx](https://www.sphinx-doc.org/en/master/) to [pdoc3](https://pdoc3.github.io/pdoc/) as it might be easier to tackle then sphinx beast.\r\n\r\nGoal is to be able to auto (re)generate API documentation on demand and display it in human compatible way even if it is not complete.\r\n\r\nBorrowing citation from pdoc3 site:\r\n\r\n> Documentation is like sex: when it is good, it is very, very good;\r\nand when it is bad, it is better than nothing.\r\n\r\nSteps to achieve it:\r\n\r\n- [x] Decide between Sphinx or pdoc3\r\n- [ ] Configure it so it will ingest most of the relevant code (and ignore vendored, ...)\r\n- [ ] Tweak templates if necessary\r\n- [ ] Set CI to build it and link it with openpype.io web\r\n- [ ] Gradually improve docstring \r\n\r\n[cuID:[OP-2318](https://app.clickup.com/t/1zfq9h4)]",
        "url": "https://github.com/ynput/OpenPype/issues/2490"
    },
    {
        "number": 2520,
        "title": "Tool to add review videos to published versions",
        "body": " ## Feature\r\n\r\nIt would be useful to be able to add review video for published version manually. For example add rendered turntable video to published look, and so on.\r\n\r\nThere are multiple ways to do it, let's discuss them\r\n\r\n### Add path to instance before publishing\r\n\r\nThis way you add directory or file directly on instance before publishing as seen on this mock screenshot from Maya:\r\n![image](https://user-images.githubusercontent.com/33513211/149178798-d89b17a6-2134-491c-8f0b-6f139019af64.png)\r\n\r\nPROS:\r\n\r\n- add it before publishing so new version will have it right away\r\n- you can run publishing plugins against it (validators)\r\n\r\nCONS:\r\n\r\n- saved with scene so there is a risk that next publish will have wrong review attached\r\n- you need to generated review data prior to publishing the data themselves\r\n- DCC specific and probably not very user friendly (some file chooser dialog, drag and drop missing).\r\n\r\n### Add it to new publisher\r\n\r\nThis can use new Publisher UI with better user experience, Pros are the same as above, but it can take out from cons need to save scene with it and user friendliness for file chooser dialog.\r\n\r\n### Reuse of Loader UI\r\n\r\nCurrently Loader has almost everything needed to browse to specific version and to add something to it:\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/149176319-75505f9b-9f92-4f1d-b812-49449df531ab.png)\r\n\r\nSo something like Loader UI with ability to drag and drop media files or directories to set thumbnails or review videos would add the benefit for post editing published versions.\r\n\r\n### Action for Loader\r\n\r\nAs Loader has everything we could add action to loader to set review video. This would be probably the easiest way, but I don't personally like the idea that it is in Loader - tool to load stuff not edit it.\r\n\r\n### Modified publish window\r\n\r\nCurrent Pyblish window can be probably tweaked to support drag and drop on instance on the left side to add file and directory.\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/149177998-6f90bf27-90a8-4093-b169-b6bccaf33315.png)\r\n\r\n\r\n[cuID:[OP-2367](https://app.clickup.com/t/225fn0t)]",
        "url": "https://github.com/ynput/OpenPype/issues/2520"
    },
    {
        "number": 2526,
        "title": "Maya: Switch Asset doesn't update namespace",
        "body": " **Describe the bug**\r\n\r\nWhen loading e.g. `pointcacheFoo` in asset `nugget` the loaded namespaces by default is `nugget_pointcacheFoo_01_`.\r\nHowever when I switch it to `pointcacheBar` in asset `hero` it would keep the original namespace `nugget_pointcacheFoo_01_`. \r\n\r\nThis makes it quite confusing when at the outliner as I'm not sure `nugget_pointcacheFoo_01_` is actually what it's telling me to be.\r\n\r\n**To Reproduce**\r\n\r\n1. Go to OpenPype > Load...\r\n2. Load something\r\n3. Go to OpenPype > Manage..\r\n4. Richt click the loaded content, click Switch Asset\r\n5. Switch it to something else.\r\n\r\nNote how the namespace hasn't changed.\r\n\r\n**Expected behavior**\r\n\r\nI'd like to propose the namespace/naming to update along with the switch.\r\n\r\n[Here's an implementation example as we originally had it in our Colorbleed config](https://github.com/Colorbleed/colorbleed-config/commit/3970232e95a20d48ce6b6b1ca656f7f399914659).\n\n[cuID:[OP-2377](https://app.clickup.com/t/22b6047)]",
        "url": "https://github.com/ynput/OpenPype/issues/2526"
    },
    {
        "number": 2527,
        "title": "Maya: Reference Alembic produces inconsistencies with dag paths / namespaces",
        "body": " ### Issue\r\n\r\n**Describe the bug**\r\n\r\n_Sorry for a lengthy description, but let me take you through what happens._ :)\r\n\r\nLoading Alembics into Maya through referencing fails to include the namespaces that are inside the Alembic file.\r\n\r\nAt the core this is more of an Alembic bug. It is basically [this issue](https://github.com/vvdoogy/alembic/issues/256) which should've been patched a long time ago and does work with `AbcImport` (just importing some Alembic geometry) but not when referencing.\r\n\r\nSay I export an object to Alembic that has a namespace:\r\n```\r\nhero:cube_GEO\r\n```\r\n\r\nNow I reference this in Maya with Alembic. I reference it into a namespace, let's say it's a cache for a shot 010 and the namespace uses that. What I'd expect:\r\n```\r\nshot010:hero:cube_GEO\r\n```\r\nInstead I get:\r\n```\r\nshot010:cube_GEO\r\n```\r\n_Note: The actual .abc file DOES contain the namespaces + using `AbcImport` to import the content does add the namespace_\r\n\r\nWe don't rely all too much on namespaces and so far the actual object name seems alright. The issue isn't that big. Right? However, the issue becomes more complicated if I for example had the `cube_GEO` multiple times in a group with different namespaces. That's something that by default can happen quite easily with OpenPype, as loaded references get added into a root group called `{namespace}:_GRP` (thus `_GRP` will always conflict).\r\n\r\nSo say my source scene is like this. Similar to what OpenPype does during load (making `_GRP` top groups):\r\n\r\n```\r\ngroup/\r\n    hero_01_:_GRP\r\n    hero_02_:_GRP\r\n    hero_03_:_GRP\r\n    hero_04_:_GRP\r\n```\r\n\r\nI reference this output Alembic file. Maya gives me this:\r\n```\r\nshot010:group/\r\n    shot010:_GRP\r\n    shot010:_GRP1\r\n    shot010:_GRP2\r\n    shot010:_GRP3\r\n```\r\n\r\nNote the numbered suffices that Maya is giving it DURING the referencing in the MPxFileTranslator (see [Additional Context](#additionalcontext) below) due to conflicts in the loaded names.\r\nAgain, this problem might feel small.\r\n\r\nBut say the scene gets updated and another cube is added, maybe even from another asset.\r\n\r\nSource:\r\n```\r\ngroup/\r\n    hero_01_:_GRP\r\n    hero_02_:_GRP\r\n    villain_01_:_GRP\r\n    hero_03_:_GRP\r\n    hero_04_:_GRP\r\n```\r\n\r\nResult on reference:\r\n```\r\nshot010:group/\r\n    shot010:_GRP\r\n    shot010:_GRP1\r\n    shot010:_GRP2\r\n    shot010:_GRP3\r\n    shot010:_GRP4\r\n```\r\n\r\nNow if I had reference edits on the `_GRP2` hierarchy then suddenly now they might be mismatched. We don't know exactly where \"villain\" ended up and names might have shuffled around in the loaded scene.\r\n\r\nThis could definitely introduce problems, like losing edits in a Lighting scene, etc.\r\n\r\n\r\n**To Reproduce**\r\n\r\n1. Go to OpenPype > Load..\r\n2. Load a couple of pointcaches - feel free to mix up from different assets/subsets\r\n3. You should have some namespaces with `{namespace}:_GRP` roots. Add these roots to a single group.\r\n4. Go to OpenPype > Create..\r\n5. Make a Pointcache of that top group.\r\n6. Load the new pointcache.\r\n\r\nThe issue should be visible now.\r\n\r\nOr a simple case that shows the issue through code:\r\n```python\r\nfrom maya import cmds\r\nimport openpype.hosts.maya.api.lib as lib\r\nimport tempfile\r\n\r\n\r\n# Create some nodes\r\nnodes = []\r\nnodes.append(cmds.createNode(\"transform\", name=\"namespace_01:_GRP\"))\r\nnodes.append(cmds.createNode(\"transform\", name=\"namespace_02:_GRP\"))\r\nnodes.append(cmds.createNode(\"transform\", name=\"namespace_03:_GRP\"))\r\nnodes.append(cmds.createNode(\"transform\", name=\"namespace_04:_GRP\"))\r\n\r\n# Group together\r\ngroup = cmds.group(name=\"group\", empty=True)\r\ncmds.parent(nodes, group)\r\n\r\nwith tempfile.TemporaryDirectory() as folder:\r\n    path = os.path.join(folder, \"test.abc\")\r\n    \r\n    # Alembic Export\r\n    cmds.select(group, noExpand=True, hierarchy=True)\r\n    lib.extract_alembic(path, start=1, end=1, selection=True)\r\n\r\n    # Reference Alembic\r\n    nodes = cmds.file(path,\r\n                      namespace=\"import\",\r\n                      sharedReferenceFile=False,\r\n                      reference=True,\r\n                      type=\"Alembic\",\r\n                      returnNewNodes=True)\r\n```\r\n\r\n### Solutions\r\n\r\nIt's a tricky thing because some of it is due to a potential bug in the Alembic plug-in and how it references. Since the reference loader seems to just be unable to do this correctly out of the box maybe we should ignore this.\r\n\r\nWe could also do it the other way around and Export with `-stripNamespaces` on extraction. However, that would mean the example scenes as shown above CANNOT be extracted like that. Either the `_GRP` names need to be changed OR they must be each put in another sub group to avoid conflict. \r\n\r\nWe actually had that in our previous including [validating clashing node names](https://github.com/Colorbleed/colorbleed-config/blob/acre/colorbleed/plugins/maya/publish/validate_clashing_node_names.py) when `-stripNamespaces` was enabled. Our [Creators had `stripNamespaces` enabled by default](https://github.com/Colorbleed/colorbleed-config/blob/acre/colorbleed/plugins/maya/create/colorbleed_pointcache.py#L28-L29). In practice this meant the problem would be found sooner and resolved before becoming a problem down the pipeline - but still a hurdle for mostly layout/animation crew.\r\n\r\nWe also had conflicts much less due to our loaded content not all being in a `{namespace}:_GRP` but the part after the namespace also having e.g. subset or asset name. This meant that conflicts would really only occur when the same objects were in a group multiple times and stripNamespaces was enabled. \r\n\r\n### Additional context\r\n\r\nMaya `AbcImport` plug-in registers a `MPxFileTranslator` so Maya can now reference that new file type. An file translator when used for referencing basically means that whatever is created during that `read` method is part of that single reference and gets the namespace appened.\r\n\r\nThe main logic for the [MPxFileTranslator and how it reads the content is here](https://github.com/alembic/alembic/blob/6253269ad35db108ed7ab26a70fb3c4183cb710e/maya/AbcImport/AlembicImportFileTranslator.cpp#L49-L51)\r\n\r\n### Discussion\r\n\r\nAny thoughts on this?\n\n[cuID:[OP-2383](https://app.clickup.com/t/22b6wpf)]",
        "url": "https://github.com/ynput/OpenPype/issues/2527"
    },
    {
        "number": 2552,
        "title": "Support non-sequential EXRs with DWAA compression.",
        "body": " **Describe the bug**\r\nWhen rendering non-sequential frames, for example 1 and 90, the FFmpeg compatibility transcode with OIIO will look for frames inbetween so 1-90.\r\n\r\n**To Reproduce**\r\n1. Submit Maya renders with a frame of 1-90 and `By Frame` of 89.\r\n\r\n**Expected behavior**\r\nShould support non-sequential frames since its only the FFmpeg compatibility transcode with OIIO thats the culprit. Tested using a different compression (ZIPS) to bypass the FFmpeg compatibility check, and the pipeline outputs the frames.\r\n\r\nAlthough one issue is that the outputted frames are renamed to a sequential order starting with the start frame.\r\n\r\n**Additional context**\r\nIssue is [here](https://github.com/pypeclub/OpenPype/blob/f28b4242c824665a8c7d7f1a074b762f9f79606e/openpype/lib/transcoding.py#L186) where the FFmpeg compatibility transcode expects a frame range, rather than a frame list.\r\n\n\n[cuID:[OP-2447](https://app.clickup.com/t/237u3ex)]",
        "url": "https://github.com/ynput/OpenPype/issues/2552"
    },
    {
        "number": 2567,
        "title": "Differentiate workdir and workfiles directory",
        "body": " ## Description\r\nRight now in 99% cases is `\"workdir\"` the path where `\"workfiles\"` are stored. But in some cases and workflows it would make more sense to have workdir as root of all work related files and workfiles can be more nested in the root so workdir path is not the directory where workfiles are located.\r\n\r\nThat was in avalon core handled with using function `work_root` in host's implementation. In most hosts used \"scene directory\" (`AVALON_SCENEDIR` environment) to define subdirectory. That has a lot limitations. First limitation is that it is not possible to get path to workfiles outside of host process. So all actions before launch will create invalid paths. It is not possible to find last workfile before launch, copy template workfile to right folder, etc..\n\n[cuID:[OP-2466](https://app.clickup.com/t/2381nq6)]",
        "url": "https://github.com/ynput/OpenPype/issues/2567"
    },
    {
        "number": 2573,
        "title": "Maya: Assembly collection broken",
        "body": " Assembly family in maya is not functional at all on publishing end, because of the changes to how containers store data inside their maya sets. Previously we stored all the nodes from the reference, however now we only keep the reference node itself. The collector is trying to find transforms in the set instead of traversing one level deeper to reference content\r\n\n\n[cuID:[OP-2472](https://app.clickup.com/t/23dkqae)]",
        "url": "https://github.com/ynput/OpenPype/issues/2573"
    },
    {
        "number": 2583,
        "title": "Blender: Update to latest fails",
        "body": " **Describe the bug**\r\nUsing blender, I want to update the modeling in my rigging scene, I get the following error message:\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/felix/Downloads/OpenPype/build/exe.linux-x86_64-3.7/repos/avalon-core/avalon/blender/ops.py\", line 102, in execute\r\n    result = callback(*args, **kwargs)\r\n\r\n  File \"<string>\", line 248, in exec_update\r\n\r\nTypeError: BlendDataLibraries.remove(): error with argument 1, \"library\" -  Function.library does not support a 'None' assignment Library type\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a basic model in modeling task\r\n2. Rig the model in rigging\r\n3. Update the model and publish a v002\r\n4. In rigging scene, go to `Manage` and try to `Update to latest`\r\n5. The error is raised\r\n\r\n**Expected behavior**\r\nI want the model to be updated correctly on the current rig.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Ubuntu 20.04\r\n - Host: Blender 2.93\r\n - OpenPype: 3.8.0-nightly.5\r\n\r\n\r\n[cuID:[OP-2487](https://app.clickup.com/t/23ryjzc)]",
        "url": "https://github.com/ynput/OpenPype/issues/2583"
    },
    {
        "number": 2584,
        "title": "Version Editor",
        "body": " ## Feature\r\n\r\nVery useful tool would be **Version Editor**. Basically tool combining Loader with Standalone Publisher. Loader UI used to pick already published data and run actions on them (like deleting specific version, specific representation from multiple selection, some batch operations) and some of the Standalone Publisher functionality to add data to versions - for example add data for review to be uploaded to ftract, and so on.\n\n[cuID:[OP-2488](https://app.clickup.com/t/23rzdud)]",
        "url": "https://github.com/ynput/OpenPype/issues/2584"
    },
    {
        "number": 2585,
        "title": "ExtractReview ffmpeg 'intra' argument deprecated",
        "body": " our defaults for ffmpeg review constructions using -intra argument are deprecated and fails with new ffmpeg 5\r\n\r\nshould be replaced with codec agnostic '-g 1'\n\n[cuID:[OP-2489](https://app.clickup.com/t/23rzk7r)]",
        "url": "https://github.com/ynput/OpenPype/issues/2585"
    },
    {
        "number": 2588,
        "title": "Houdini: Camera Loader fix mismatch for Maya cameras (render gates using aspect ratio)",
        "body": " ### Issue\r\n\r\nThe Camera Loader which loads Alembic cameras into Houdini has the issue that upon loading the camera might mismatch from the render view in Maya - this issue is also described in the [SideFX Houdini documentation for Alembics](https://www.sidefx.com/docs/houdini/io/alembic.html#working-with-maya-cameras).\r\n\r\nFor certain aspect ratios or certain \"Fit View\" settings in Maya this means that there can be a mismatch between what Houdini shows vs what Maya shows. It would be very nice if the loader could somehow manage this for us - but I'm wondering what the best UX might be for the Artist to decide on how to interpret the fit view inside Houdini.\r\n\r\n### Additional context\r\n\r\n- [Lens Squeeze and Camera Fitting algorithms pseudocode in old Alembic discussion](https://groups.google.com/g/alembic-discussion/c/X7teFm4YVG0/m/HpgEzOrbEI0J)\r\n- [SideFX documentation on Camera Lenses with some algorithms](https://www.sidefx.com/docs/houdini/ref/cameralenses.html)\r\n\r\n### What the Houdini FBX importer does...\r\n\r\nFor one of the cases we've tested this the fix was to update the Camera Aperture expression (which links to the alembic file) with a snippet that we pulled from how Houdini's FBX loader imports Maya camera's, which uses this line:\r\n\r\n```python\r\naperture *= min(1, (ch(resx)/ch(resy)*ch(aspect))/1.500000) // Line of expression on Fbx-camera that fixes the resolutiongate issue\r\n```\r\n\r\nSo we could do the same to the Alembic camera and add it to the expression for example:\r\n```python\r\nnode = hou.pwd()\r\nresx = node.parm('resx').eval()\r\nresy = node.parm('resy').eval()\r\naspect = node.parm('aspect').eval()\r\naperture *= min(1, (resx/resy*aspect)/1.500000)\r\nreturn aperture\r\n```\r\n\r\n### Idea\r\n\r\nI was thinking of maybe adding an extra dropdown menu attribute on the loaded Camera container where the user could toggle through some settings, like **Match Camera View**:\r\n```\r\n- Default (native Alembic camera behavior; no adjustments)\r\n- Match Maya Fit View > Horizontal View\r\n- Match Maya Fit View > Vertical View\r\n```\r\n(Or whatever options make sense).\r\n\n\n[cuID:[OP-2513](https://app.clickup.com/t/23t57p1)]",
        "url": "https://github.com/ynput/OpenPype/issues/2588"
    },
    {
        "number": 2601,
        "title": "Maya Looks: Maya 2022 maketx \"linearize\" does not preserve correct colors upon publish",
        "body": " **Describe the bug**\r\n\r\nIn Maya's Extract Look [when converting to .tx files the current logic is to linearize](https://github.com/pypeclub/OpenPype/blob/00d18962729e353daf79bc2e46d11fcfd5c14321/openpype/hosts/maya/plugins/publish/extract_look.py#L480-L482) anything that was sRGB and [\"convert\" the Color Space to \"Raw\"](https://github.com/pypeclub/OpenPype/blob/00d18962729e353daf79bc2e46d11fcfd5c14321/openpype/hosts/maya/plugins/publish/extract_look.py#L342-L345). \r\n\r\nHowever, Artists here detected color differences in Maya 2022 and are telling me `Raw` is the wrong choice for color space for this case. In Maya 2020 it gave good results, but in Maya 2022 it's messing up.\r\n\r\nI am told that the color space should actually be: `scene-linear Rec.709-sRGB` when being linearized from sRGB files.\r\nAnd, when applying that setting in Maya 2020 and Maya 2022 they both appear correct.\r\n\r\nAnyone here knows more about this?\r\n\r\n---\r\n\r\nNote that this does suffer from the [\"OCIO\" difference between Maya 2020 and 2022](https://github.com/pypeclub/OpenPype/issues/2454) because:\r\nMaya 2022: `scene-linear Rec.709-sRGB`\r\nMaya 2020: `scene-linear Rec.709/sRGB`\r\n_Note the subtle name difference of the color space_\r\n\r\n[cuID:[OP-2526](https://app.clickup.com/t/244d50w)]",
        "url": "https://github.com/ynput/OpenPype/issues/2601"
    },
    {
        "number": 2648,
        "title": "Frame range with included handles",
        "body": " ## Feature\r\n\r\nthere is a request to be able to handle frame range as if it include handles. Currently, handles are added from outside, so for frame range `1001-1050` and we had handles to start and end. But we should be able to handle frame range like having frame range `991-1060`  and fill handles with black if necessary. Seems like this is necessary for certain workflows with Flame.\n\n[cuID:[OP-2585](https://app.clickup.com/t/24nu3d2)]",
        "url": "https://github.com/ynput/OpenPype/issues/2648"
    },
    {
        "number": 2665,
        "title": "Maya: playblast preset for different families",
        "body": " Example:\r\n\r\nFor modeling review it is crucial to see geometry topology. To improve and speed up the review process the playblasts generated during model publish should have \"Wireframe on shaded\" turned on.\r\n\r\nCurrently, we can only set the playblast settings globally.  \r\n\n\n[cuID:[OP-2597](https://app.clickup.com/t/2516941)]",
        "url": "https://github.com/ynput/OpenPype/issues/2665"
    },
    {
        "number": 2666,
        "title": "Tray: Check on start if OpenPype is running already",
        "body": " there is quite a common issue with nontechnical users, that they are trying to run OP and not noticing it has started successfully because of the hidden tray icon on windows.\r\n\r\nI saw several cases with 30 instances of OP running at once.\r\n\r\nIt would be good to check if OP is running and notify the user it is running already on each attempt to start OP\r\n\r\n\r\n \r\n\n\n[cuID:[OP-2600](https://app.clickup.com/t/256q8da)]",
        "url": "https://github.com/ynput/OpenPype/issues/2666"
    },
    {
        "number": 2668,
        "title": "Maya: Validate Rig Output Ids fails when two transforms match name but both have no cbId",
        "body": "**Describe the bug**\r\n\r\n[Validate Rig Output Ids](https://github.com/pypeclub/OpenPype/blob/develop/openpype/hosts/maya/plugins/publish/validate_rig_output_ids.py) fails when checking transforms that have no `cbId` to check for. E.g. a parent group was added to `out_SET` instead of the mesh transforms directly.\r\n\r\n**Error:**\r\n```python\r\nTraceback (most recent call last):\r\n  File \"S:\\openpype\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"<string>\", line 24, in process\r\n  File \"<string>\", line 30, in get_invalid\r\n  File \"<string>\", line 54, in get_invalid_matches\r\n  File \"C:\\Users\\Roy\\AppData\\Roaming\\Python\\Python37\\site-packages\\pymel\\core\\nodetypes.py\", line 3790, in __getattr__\r\n    raise e\r\n  File \"C:\\Users\\Roy\\AppData\\Roaming\\Python\\Python37\\site-packages\\pymel\\core\\nodetypes.py\", line 3782, in __getattr__\r\n    res = DependNode.__getattr__(self, attr)\r\n  File \"C:\\Users\\Roy\\AppData\\Roaming\\Python\\Python37\\site-packages\\pymel\\core\\nodetypes.py\", line 580, in __getattr__\r\n    raise AttributeError(\"%r has no attribute or method named '%s'\" % (self, attr))\r\nAttributeError: nt.Transform('test_GRP') has no attribute or method named 'cbId' // \r\n```\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nimport avalon.api\r\nimport pyblish.util\r\nimport openpype.lib\r\nfrom maya import cmds\r\n\r\n\r\ndef create(Creator, name, members=None):\r\n    \"\"\"Create creator for current asset with name + add members\"\"\"\r\n    # note: the create method does not \"return\" the publish instance so for now \r\n    # we use \"useSelection\" to add the members - since otherwise it's non trivial.\r\n    options = {\"useSelection\": True}\r\n    asset = avalon.api.Session[\"AVALON_ASSET\"]\r\n    with avalon.maya.maintained_selection():\r\n        cmds.select(members, replace=True, noExpand=True)\r\n        container = avalon.api.create(Creator, \r\n                                      name=name, \r\n                                      asset=asset, \r\n                                      options=options)\r\n                                      \r\n\r\n# Simplest reproducable\r\nrig = cmds.createNode(\"transform\", name=\"rig_GRP\")\r\nrig_test = cmds.createNode(\"transform\", name=\"test_GRP\", parent=rig)\r\nother_test = cmds.createNode(\"transform\", name=\"test:test_GRP\")\r\n\r\n# Create instance\r\nCreator = openpype.lib.get_creator_by_name(\"CreateRig\")\r\ncreate(Creator, name=\"rigMain\", members=[rig])\r\n\r\n# Add to out_SET\r\ncmds.sets(rig_test, forceElement=\"out_SET\")\r\n```\r\nSave scene and try to publish.\r\n\r\n**Expected behavior**\r\n\r\nNodes without `cbId` to match for should be ignored. Right?\r\n\r\nAlso, I'd actually had considered children (and children of children, etc.) of what is in the `out_SET` would be checked too, currently they aren't even though they would end up being exported from the rig in animation.\r\n\r\n**Additional context**\r\n\r\nAlso noticed the Validator \"computes\" the data and stores it internally. Upon repair however it should actually `pop()` that cached data so that if you were to e.g. _select invalid_ after repairing it should select nothing or if you re-repair it should select nothing.\r\n\r\nWhether to compute or not could then happen based on whether the cache already exists in data.\r\n\r\n[cuID:[OP-2601](https://app.clickup.com/t/256qbv6)]",
        "url": "https://github.com/ynput/OpenPype/issues/2668"
    },
    {
        "number": 2675,
        "title": "General: implement file/folder filter into repack version command",
        "body": " **Describe the bug**\r\nIf someone will do repack-version command it will also include python cache files into zip and checksum so once those files will change as they usually do, the checksum error will popup\r\n\n\n[cuID:[OP-2605](https://app.clickup.com/t/256t7wd)]",
        "url": "https://github.com/ynput/OpenPype/issues/2675"
    },
    {
        "number": 2686,
        "title": "Settings: alphabetical order of items",
        "body": " as the number of supported applications is growing it became a bit cumbersome to navigate OP application settings. \r\n\r\n- alphabetical order would make the navigation a lot easier for the user\r\n- leaving important items like Global pinned at top\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/352795/153252214-ec321805-29e9-44f7-90f9-475aa490b5e1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/352795/153252311-c7e37fef-2f77-455c-aa4c-6ee14b96fe4b.png)\r\n\n\n[cuID:[OP-2613](https://app.clickup.com/t/256zqpt)]",
        "url": "https://github.com/ynput/OpenPype/issues/2686"
    },
    {
        "number": 2688,
        "title": "General: unpack-project with project rename",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nWe only support `--root` optional argument for changing project root but we should also have `--project-name` argument, so we would be able to change project name to something else. \r\n\r\n**Describe the solution you'd like**\r\nThis will allow us to use one project zip and add it to our db as multiple different project names with the same content. So from `projectA.zip` we will create `projectX` in db and in files. This will also need to change project code and to change those names in the db on all project/representation contexts and file names. I believe we will need to add also  `--project-code` to be able to change all project codes used in db and file names. This could be done by simple search replace in _database.json_. Also from closer look it seems to be good idea to add `project_code` key into _metadata.json_ file during `pack-project` \r\n\r\n**Additional context**\r\noriginal PR for pack/unpack project https://github.com/pypeclub/OpenPype/pull/2629\r\n\n\n[cuID:[OP-2616](https://app.clickup.com/t/25ceg5d)]",
        "url": "https://github.com/ynput/OpenPype/issues/2688"
    },
    {
        "number": 2696,
        "title": "Settings: List difference between \"saved\" settings and current settings",
        "body": " # Feature\r\n\r\nWith the new 'versioned settings' from #2570 we can get the nice visual messages like:\r\n\r\n>  \"Your settings are loaded from an older version\"\r\n\r\nI was thinking it would be nice that in the case the user (or only for admins) is not sync that same bar shows an extra button to that will pop-up a little list widget showing the changes:\r\n\r\n```\r\n+ applications/additional_apps\r\n- modules/ftrack\r\n. modules\r\n```\r\n\r\nWith:\r\n- **`+` new** key in the _default_ settings\r\n- **`-` removed** key in new _default_ settings compared to your previous settings\r\n- **`.` changed** value for an existing key -> especially nice if this could show old vs new value\r\n\r\nWould be extra nice if clicking the names for any of the entries in the list would put the settings `entity.path` into the breadcrumb bar and actually directly move to it.\r\n\r\nWe should be able to compare with the stored settings in the database, right?\r\n\r\n#### Notes\r\n\r\nI'm not sure if `.` **changed** can happen automatically, but that's what I would expect when an enum has a valid value renamed or removed I'd assume the settings would automatically reset that to the new value in `default settings`.\r\n\r\nBrowsing to a `-` **removed** key of course couldn't be done. We could technically split on `/` until we find one that is currently valid using `get_entity_from_path`?\r\n\n\n[cuID:[OP-2624](https://app.clickup.com/t/25cq1rt)]",
        "url": "https://github.com/ynput/OpenPype/issues/2696"
    },
    {
        "number": 2707,
        "title": "Loader: Configure \"default groups\" in the Loader ",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nIn the Loader you can click CTRL+G to create a custom grouping for the selected subsets. In Avalon you could define custom groups that appear by default in the create group popup, in the form of adding this to `project[config]` in the database:\r\n```json\r\n        \"groups\" : [ \r\n            {\r\n                \"name\" : \"Deprecated\",\r\n                \"icon\" : \"trash\",\r\n                \"color\" : \"grey\"\r\n            }\r\n        ],\r\n```\r\n\r\nOpenPype does not have any tools in place to add these nor customize this.\r\n\r\n**Describe the solution you'd like**\r\n\r\nThe OpenPype Admin Settings should allow to define these per project and make sure the tools can pick those up.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nAdding the data directly into the database, but I rather don't want to.\r\n\r\n**Additional Context**\r\n\r\nThe custom groups would appear when clicking on the button to the right which can show with a custom icon and will show additional to the Groups existing on the currently selected asset's subsets.\r\n\r\nOpenPype without default groups defined:\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/153713632-9b3e9d0d-e974-4671-9825-287386cd0f63.png)\r\n\r\nAvalon with default groups defined:\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/153713711-2866acc5-6d93-4936-b846-e552f8e89642.png)\r\n\r\nWe used this previously to easily mark soms subsets as \"dont load these' in the Loader.\r\n\r\n[cuID:[OP-2627](https://app.clickup.com/t/25qzr6j)]",
        "url": "https://github.com/ynput/OpenPype/issues/2707"
    },
    {
        "number": 2723,
        "title": "Houdini: Look dev",
        "body": " ## Feature\r\n\r\nAdd Look dev support to Houdini. Based on HDAs or USD\r\n\r\n\ud83d\udee0\ufe0f **Description work in progress**\n\n[cuID:[OP-2638](https://app.clickup.com/t/25xn813)]",
        "url": "https://github.com/ynput/OpenPype/issues/2723"
    },
    {
        "number": 2724,
        "title": "Implement Package family",
        "body": " ## Feature\r\n\r\nWe need to create family **Package** that would hold just information about various subset grouping them together. This would be useful then for bundling things together for exports, filtering in UI, and so on. It should be just simple list of subset versions that could be created directly from tools without publishing, but versioned.\n\n[cuID:[OP-2641](https://app.clickup.com/t/25xp1b6)]",
        "url": "https://github.com/ynput/OpenPype/issues/2724"
    },
    {
        "number": 2736,
        "title": "Increment workfile version in OpenPype menu across the hosts",
        "body": " ## Feature\r\n\r\nAdd item **Increment and save** to OpenPype menu that will behave the same way as in Maya *File* menu. but across all supported host to unify (and add where it is missing) the usage.\n\n[cuID:[OP-2654](https://app.clickup.com/t/263d1tj)]",
        "url": "https://github.com/ynput/OpenPype/issues/2736"
    },
    {
        "number": 2737,
        "title": "Hero version without normal version",
        "body": " ## Feature\r\n\r\nAbility to have only one hero version without keeping older ones - for large data types, like simulation caches.\n\n[cuID:[OP-2656](https://app.clickup.com/t/263d9zr)]",
        "url": "https://github.com/ynput/OpenPype/issues/2737"
    },
    {
        "number": 2738,
        "title": "Family aliases",
        "body": " ## Feature\r\n\r\nFor filtering and management there is a feature request to have aliases for specific family - for example `Image` - you might need `Concepts`, `References`, ... that will behave exactly like `Image` family. Currently the only way is to add manually those new families to all plugins and places.\n\n[cuID:[OP-2657](https://app.clickup.com/t/263daen)]",
        "url": "https://github.com/ynput/OpenPype/issues/2738"
    },
    {
        "number": 2739,
        "title": "Ftrack auto-comment after version publish",
        "body": " ## Feature\r\n\r\nAfter publish, it would be nice to be able to enable and configure auto commenting on version/task/asset, posting there custom predefined information (paths to published file, etc,)\n\n[cuID:[OP-2658](https://app.clickup.com/t/263dbdt)]",
        "url": "https://github.com/ynput/OpenPype/issues/2739"
    },
    {
        "number": 2756,
        "title": "OP Admin -> Studio settings, with insufficient ftrack permissions",
        "body": " We should handle the situation with user trying to amend Studio Settings with insufficient ftrack permissions a little better. Now it fails with error.\r\n\r\nShould we check the permissions even before opening the settings? Or just with the Save button? \r\n\r\n```\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Python37\\lib\\logging\\__init__.py\", line 1028, in emit\r\nAttributeError: 'NoneType' object has no attribute 'write'\r\nCall stack:\r\n  File \"C:\\Users\\qam\\pypeclub\\OpenPype\\.venv\\Lib\\site-packages\\cx_Freeze\\initscripts\\__startup__.py\", line 113, in run\r\n  File \"C:\\Users\\qam\\pypeclub\\OpenPype\\.venv\\Lib\\site-packages\\cx_Freeze\\initscripts\\Console.py\", line 15, in run\r\n  File \"start.py\", line 1144, in <module>\r\n  File \"start.py\", line 1084, in boot\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\click\\core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\click\\core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\click\\core.py\", line 1236, in invoke\r\n    return Command.invoke(self, ctx)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\click\\core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\click\\decorators.py\", line 21, in new_func\r\n    return f(get_current_context(), *args, **kwargs)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\cli.py\", line 29, in main\r\n    ctx.invoke(tray)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\cli.py\", line 57, in tray\r\n    PypeCommands().launch_tray(debug)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\pype_commands.py\", line 33, in launch_tray\r\n    tray.main()\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\tools\\tray\\pype_tray.py\", line 710, in main\r\n    sys.exit(app.exec_())\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\tools\\settings\\settings\\categories.py\", line 579, in _save\r\n    self.save()\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\tools\\settings\\settings\\categories.py\", line 363, in save\r\n    self.entity.save()\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\settings\\entities\\root_entities.py\", line 399, in save\r\n    self._save_studio_values()\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\settings\\entities\\root_entities.py\", line 568, in _save_studio_values\r\n    save_studio_settings(settings_value)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\settings\\lib.py\", line 50, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\settings\\lib.py\", line 134, in save_studio_settings\r\n    old_data, new_data, changes, new_data_with_metadata\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\modules\\default_modules\\ftrack\\ftrack_module.py\", line 215, in on_system_settings_save\r\n    session.commit()\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\ftrack_api\\session.py\", line 1265, in commit\r\n    result = self.call(batch)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\ftrack_api\\session.py\", line 1642, in call\r\n    self.logger.exception(error_message)\r\n  File \"C:\\Program Files\\Python37\\lib\\logging\\__init__.py\", line 1413, in exception\r\n  File \"C:\\Program Files\\Python37\\lib\\logging\\__init__.py\", line 1407, in error\r\n  File \"C:\\Program Files\\Python37\\lib\\logging\\__init__.py\", line 1514, in _log\r\n  File \"C:\\Program Files\\Python37\\lib\\logging\\__init__.py\", line 1524, in handle\r\n  File \"C:\\Program Files\\Python37\\lib\\logging\\__init__.py\", line 1586, in callHandlers\r\n  File \"C:\\Program Files\\Python37\\lib\\logging\\__init__.py\", line 894, in handle\r\n  File \"C:\\Program Files\\Python37\\lib\\logging\\__init__.py\", line 1033, in emit\r\nMessage: \"Server reported error: PermissionError(Permission denied: not allowed to 'update' 'Variable_Register'. Missing the required 'Manage settings' permission.)\"\r\nArguments: ()\r\n```\r\n\r\n\r\n\n\n[cuID:[OP-2674](https://app.clickup.com/t/26954md)]",
        "url": "https://github.com/ynput/OpenPype/issues/2756"
    },
    {
        "number": 2761,
        "title": "project_settings -> filter_families shows an outdated family list",
        "body": " **Describe the bug**\r\nproject_settings/global/tools/loader/family_filter_profiles/0/filter_families show an obsolete list of families.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'project_settings/global/tools/loader/family_filter_profiles/0/filter_families' in settings\r\n2. Click on 'Filter families'\r\n3. See error\r\n\r\n**Expected behavior**\r\nShow all current families in the system\r\n\r\n**Screenshot**\r\n![families](https://user-images.githubusercontent.com/8620515/154679468-21309ae7-976f-4788-99f2-197d9e2d9972.png)\r\n\r\n\n\n[cuID:[OP-2676](https://app.clickup.com/t/269648c)]",
        "url": "https://github.com/ynput/OpenPype/issues/2761"
    },
    {
        "number": 2773,
        "title": "Documentation: Resolve should point to built OTIO wheel \ud83c\udfa1 ",
        "body": " ## Documentation for Resolve\r\n\r\n> install OpenTimelineIO for 3.6 `%LOCALAPPDATA%\\Programs\\Python\\Python36\\python.exe -m pip install git+https://github.com/PixarAnimationStudios/OpenTimelineIO.git@5aa24fbe89d615448876948fe4b4900455c9a3e8` and move built files from `%LOCALAPPDATA%/Programs/Python/Python36/Lib/site-packages/opentimelineio/cxx-libs/bin` and lib to `%LOCALAPPDATA%/Programs/Python/Python36/Lib/site-packages/opentimelineio/`\r\n\r\n\r\nthis command is complicated because to build otio from sources you need build tools like cmake and compiler. We already have built otio wheel for python 3.7 so we should provide wheels for 3.6 (that is required for Resolve) and point documentation there.\n\n[cuID:[OP-2723](https://app.clickup.com/t/26ewxm1)]",
        "url": "https://github.com/ynput/OpenPype/issues/2773"
    },
    {
        "number": 2774,
        "title": "Add author field to Workfiles tool",
        "body": " ## Enhancement\r\n\r\nAdd `author` field to Workfile tool. Currently use system user until user management in v4 is ready. Maybe add option to use ftrack user if ftrack module is enabled and this option is set?\n\n[cuID:[OP-2725](https://app.clickup.com/t/26ey40t)]",
        "url": "https://github.com/ynput/OpenPype/issues/2774"
    },
    {
        "number": 2777,
        "title": "New Publisher: Enhancements & Bugs",
        "body": " ## Description\r\nList of wanted or planned enhancements in new publisher UI.\r\n\r\n### Publish widget icons\r\n\r\n- [x] colors of enabled and disabled buttons are not much different\r\n- [ ] colors of buttons should match color of background (procesisng, fail, success, ...)\r\n- [x] better validate icon\r\n- [ ] (and better refresh icon?)\r\n\r\n![image](https://user-images.githubusercontent.com/43494761/155007925-13929c3b-498e-466d-8209-21e6580130f8.png)\r\n\r\n### Progress bar\r\n\r\n- [ ] colors do not match the palette much\r\n\r\n![image](https://user-images.githubusercontent.com/43494761/155008387-348b4137-c11d-4ff1-974c-9e1e452a3404.png)\r\n\r\n### Creator dialog\r\n\r\n- [ ] https://app.clickup.com/t/6658547/OP-2882\r\n\r\n  - [x] assets and tasks don't have icons in views\r\n  - [ ] creator plugins don't have icon and description\r\n  - [ ] add detailed description which will be showed using help button\r\n\r\n![image](https://user-images.githubusercontent.com/43494761/155008519-4195701b-ed7e-4549-93df-e95088df2df2.png)\r\n\r\n### Path attribute defintion\r\n\r\n- [ ]  https://app.clickup.com/t/6658547/OP-2881\r\n\r\n  - [ ] add `Browse` button\r\n  - [ ] somehow show allowed extensions and if folders can be passed\r\n  - [ ] (?) validate existence of paths and visually show if is not available\r\n  - [ ] multipath\r\n      - [ ] does not have ability to show path or edit path\r\n      - [ ] delete button is ugly\r\n          - [ ] maybe add delete to the bottom of view and remove selection when clicked\r\n          - [ ] (?) add validation dialog\r\n      - [ ] icons are dark and not visible in the view\r\n\r\n![image](https://user-images.githubusercontent.com/43494761/155009068-31e38947-602b-492c-b430-cc870ec686f6.png)\r\n\r\n![image](https://user-images.githubusercontent.com/43494761/155009151-c1c7012e-9b26-4863-84fd-77e41a1e8d21.png)\r\n\r\n[cuID:[OP-2729](https://app.clickup.com/t/26ezzp5)]",
        "url": "https://github.com/ynput/OpenPype/issues/2777"
    },
    {
        "number": 2787,
        "title": "Deadline: Modify Frame Range updates publish range but not review burnin mp4 length",
        "body": "**Describe the bug**\r\n\r\nThe [Validate Expected Files plug-in](https://github.com/pypeclub/OpenPype/blob/e5efaf842b08a3793a660987a7a744d3888b0020/openpype/modules/default_modules/deadline/plugins/publish/validate_expected_and_rendered_files.py#L39) allows users to override the publish frames of a Deadline Job after submission. The user can Modify Frame Range on the Job in Deadline and the OpenPype publish would understand and update along.\r\n\r\nThis work perfect! \ud83e\udd47 \r\n\r\nExcept for the fact that:\r\n\r\n- This is happening during Validation and it's updating collected data. Shouldn't that be done _during_ collecting? Not a requirement for the logic, but definitely feels off.\r\n- It currently doesn't play nice with the [ExtractReview](https://github.com/pypeclub/OpenPype/blob/d5092340667fa08c674bb8e8877cbfeb14e54ed4/openpype/plugins/publish/extract_review.py#L28) plug-in which produces a burnin mp4 **but** at the original frame range!\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Ensure allow_user_override is enabled in settings: `project_settings/deadline/publish/ValidateExpectedFiles/allow_user_override`\r\n2. Submit a render from maya at frame range 1-10\r\n3. Go to Deadline, **Modify Frame Range..** for the render job to e.g. 1-15\r\n4. Let it render, let it publish.\r\n5. Publish should succeed but mp4 invalidly is still using frames 1-10\r\n\r\n---\r\n\r\nNote that #2625 is currently touching the same code and might be good to get that merged first before we try and fix this PR to avoid merge conflicts.\r\n\r\n[cuID:[OP-5489](https://app.clickup.com/t/861mkcp5m)]",
        "url": "https://github.com/ynput/OpenPype/issues/2787"
    },
    {
        "number": 2795,
        "title": "Workfiles: Open last workfile on launch doesn't work with `AVALON_SCENEDIR` defined",
        "body": "**Describe the bug**\r\n\r\nWhen an application environment overrides `AVALON_SCENEDIR` to allow customizing a subdirectory inside the host folder to save the workfiles then the open last workfile logic will not detect existing scene files and ignore the existence of the `AVALON_SCENEDIR` variable.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. For a host, e.g. Houdini add `\"AVALON_SCENEDIR\": \"scenes\"` into the application environment\r\n2. Launch Houdini, save a workfile.\r\n3. Launch Houdini again with \"open last workfile\" enabled. The existing file is not detected.\r\n\r\n**Expected behavior**\r\n\r\nRespect the `AVALON_SCENEDIR` and correctly detect the workfiles.\n\n[cuID:[OP-6740](https://app.clickup.com/t/861nakt5x)]",
        "url": "https://github.com/ynput/OpenPype/issues/2795"
    },
    {
        "number": 2797,
        "title": "Fusion: OpenPype Logging Handler always logs red errors messages",
        "body": "**Describe the bug**\r\n\r\nWhen OpenPype logs messages through its default logger from [`openpype.lib.log.PypeLogger`](https://github.com/pypeclub/OpenPype/blob/cfcdc80f74f71b2acfa64e88409e122870581cc9/openpype/lib/log.py#L180) it writes to `sys.stderr` due to the [`openpype.lib.log.PypeStreamHandler`](https://github.com/pypeclub/OpenPype/blob/cfcdc80f74f71b2acfa64e88409e122870581cc9/openpype/lib/log.py#L44) inheriting from `logging.StreamHandler` which [defaults to writing to `sys.stderr` when no steam is provided.](https://github.com/python/cpython/blob/b899126094731bc49fecb61f2c1b7557d74ca839/Lib/logging/__init__.py#L1070-L1079)\r\n\r\n![unknown](https://user-images.githubusercontent.com/2439881/155223443-9e379449-59bd-47c1-9bd5-131e163617ea.png)\r\n\r\nFor Fusion artists it's a bit confusing because the Console tab gets a red warning icon whenever any text is written through `sys.stderr` and thus it appears that even when just debug launching messages are printed as if things are going wrong.\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/155223397-ed60b3b7-5a52-40fd-afb2-bded2b4ecb3f.png)\r\n\r\nWould it make sense to override this behavior for logging in Fusion for OpenPype. Preferably even _before_ `openpype.install()` so that all messages are captured the right way. If so, where would I do that? Could an env variable be a solution to this.\r\n\r\nVisually for Fusion the best bet would be to actually write to `sys.stdout` when info or debug level and write to `sys.stderr` when warning or higher. However, I'm not sure if that makes any sense in `logging` world.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Start any tool in Fusion\r\n2. Note how any logged message from the OpenPype logger logs as red error text\r\n\r\n**Additional context**\r\n\r\nAlso reported on discord [here](https://discord.com/channels/517362899170230292/517382145552154634/945787791323832360).\r\nThere [already is some logic in the Fusion integration to solve some of the logging coloring issues](https://github.com/pypeclub/OpenPype/blob/cfcdc80f74f71b2acfa64e88409e122870581cc9/openpype/hosts/fusion/api/pipeline.py#L46-L57) but they date from before OpenPype and thus the OpenPype logger. Also the solution in that install logic might not be the best approach either. So would love to have some input on how to best approach something like this.\n\n[cuID:[OP-6742](https://app.clickup.com/t/861nakt63)]",
        "url": "https://github.com/ynput/OpenPype/issues/2797"
    },
    {
        "number": 2804,
        "title": "Burn In username in reviews",
        "body": "we are using a local username for burn-ins in reviews.\r\n\r\nfor web publisher, we are using ftrack user instead. \r\n\r\nsome studios are not having domain names resolved properly or freelancers connecting from their home machines with obscure user names could cause some troubles, etc.\r\n\r\nwe should allow changing the source of artist's name in settings to cover all scenarios and let the studios decide what they want to use.\r\n\r\n(local user, ftrack user, shotgrid user, OPV4 user, etc.)\n\n[cuID:[OP-6748](https://app.clickup.com/t/861nakt60)]",
        "url": "https://github.com/ynput/OpenPype/issues/2804"
    },
    {
        "number": 2808,
        "title": "Maya: Camera Attribute Validator",
        "body": "**Describe the bug**\r\nThis validator does not allow any animation on some of the camera attributes.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Animate camera film offset attribute\r\n2. Publish.\r\n\r\n**Expected behavior**\r\nIt seems like some (if not all) of the attribute that are locked with this validator, do get the data across to the other DCCs (for example Nuke interprets the film offset). So this validator needs to be revised and potentially either be reduced in scope or removed alltogether.\n\n[cuID:[OP-6749](https://app.clickup.com/t/861nakt65)]",
        "url": "https://github.com/ynput/OpenPype/issues/2808"
    },
    {
        "number": 2809,
        "title": "Restart button in Tray",
        "body": "## Description\r\nIt would be helpfull to have restart button in tray application.\r\n\r\n## Suggested solutions\r\n1. ~~To add a button next to `Exit` action, that would break usage of OS style of menu (MacOS and some linux dist.).~~\r\n2. ~~Add a right click callback on `Exit` action. This is possible but was not tested when OS style is used.~~\r\n3. Add `Restart` action under version action (above `Exit`). The action is already there but is visible only when update is needed.\r\n4. Add `Restart` button to version dialog.\r\n\r\nEDITED\r\nOptions 1. and 2. are not possible in `QSystemTrayIcon`.\n\n[cuID:[OP-6744](https://app.clickup.com/t/861nakt69)]",
        "url": "https://github.com/ynput/OpenPype/issues/2809"
    },
    {
        "number": 2813,
        "title": "Modules: Allow modules to be customized per project",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently we have settings for the Modules that are system wide, like Ftrack URL and whether Ftrack is enabled or not. However, we are running into the cases where one project might use Ftrack - another might not at all. One project might run one Ftrack url, another might need another.\r\n\r\nWould it be possible to implement some (or all?) modules in such a way that they could be project-specific? Or in such a way that'd be trivial for each module to define \"project specific settings\"?\r\n\r\n**Describe the solution you'd like**\r\n\r\nAllow to enable/disable full modules like Ftrack (and upcoming Shotgun, Ftrack, etc.) \r\n\r\n**Describe alternatives you've considered**\r\n\r\nFor e.g. ftrack it could currently be possible to disable all publish plug-ins in project settings to \"reduce\" relying on Ftrack but it's been not clearly documented and I believe for a large part untested. Instead we need an approach that from the ground up could allow to enable/disable whether a project runs with Ftrack or Shotgun, and if they do - with which url, etc.\r\n\r\n[cuID:[OP-5536](https://app.clickup.com/t/861mm69nr)]",
        "url": "https://github.com/ynput/OpenPype/issues/2813"
    },
    {
        "number": 2831,
        "title": "Maya: GUI elements inconsistency",
        "body": " There is a bit of inconsistency in OpenPype's Maya GUI elements\r\nIt can be quite frustrating for a new user to navigate through different parts of OP.\r\n\r\n\r\nTo help visually we can use the same icons in OpenPype menu as we use in side-shelf and match the order.  (Later we can open discussion about the order itself as it can be improved as well and should follow the workflow better)\r\n\r\n \r\n![mayaMenuOP](https://user-images.githubusercontent.com/352795/156392249-81f8c2a4-2b91-4e25-92a3-ba4e4c639540.png)\r\n\r\n\r\nWe should also unify the naming as it differs and makes it even more confusing\r\n\r\n| side-shelf | OpenPypeMenu     |      Tool Title bar |\r\n| ------------ | ---------------- | ----------------- |\r\n| Look Manager | Look assigner...  | Look Manager |\r\n| Loader | Load... | Asset Loader |\r\n| Inventory | Manage... | Scene Inventory |\r\n\r\n\r\n\r\nHaven't looked at other host implementations, but I suppose it will be similar\n\n[cuID:[OP-6741](https://app.clickup.com/t/861nakt66)]",
        "url": "https://github.com/ynput/OpenPype/issues/2831"
    },
    {
        "number": 2870,
        "title": "Workflow for lens distortion",
        "body": " ## Feature\r\n\r\nWe should implement workflow for lens distortion. This is useful for handling camera overscans needed for work with undistorted footage and automation for distortion/undistortion nodes.\r\n\r\nAdvanced workflow can have features like:\r\n\r\n- Getting lens information from raw footage when avaliable (like focal length (even per frame) and lens type)\r\n- Support for uvmaps generated by tracking software or [Lens Distortion Plugin Kit](https://www.3dequalizer.com/?site=tech_docs&id=110216_01) nodes from 3d equalizer.\r\n- Auto generation of undistorted footage\r\n- Re-distort nodes (as specific family?) \r\n- Undistorted cameras with overscan in Maya/Houdini/Nuke\r\n- Overscan in render resolution\n\n[cuID:[OP-2905](https://app.clickup.com/t/28807jm)]",
        "url": "https://github.com/ynput/OpenPype/issues/2870"
    },
    {
        "number": 2873,
        "title": "Maya: Publish pointcache fails with children of parents in the instance",
        "body": " **Describe the bug**\r\n\r\nWhen the publish instance has both a parent and a child inside the instance then Alembic will fail to extract the data when **Include Parent Hierarchy** is set to False.\r\n\r\nAlembic failing to extract makes sense because this case of exporting isn't defined explicitly. When excluding the parent hierarchy from the export and exporting e.g. this:\r\n```\r\nparent > child\r\n```\r\nWith `parent, child` both directly in the instance. Then would you want child to still be inside `parent` in the export. Or without parent hierarchy on its own? Should the data be duplicated (exist both within and outside?)\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nimport avalon.api\r\nfrom openpype.hosts.maya.api.lib import maintained_selection\r\nimport pyblish.util\r\nimport openpype.lib\r\nfrom maya import cmds\r\n\r\n\r\ndef create(Creator, name, members=None):\r\n    \"\"\"Create creator for current asset with name + add members\"\"\"\r\n    # note: the create method does not \"return\" the publish instance so for now \r\n    # we use \"useSelection\" to add the members - since otherwise it's non trivial.\r\n    options = {\"useSelection\": True}\r\n    asset = avalon.api.Session[\"AVALON_ASSET\"]\r\n    with maintained_selection():\r\n        cmds.select(members, replace=True, noExpand=True)\r\n        container = avalon.api.create(Creator, \r\n                                      name=name, \r\n                                      asset=asset, \r\n                                      options=options)\r\n\r\ncube = cmds.polyCube(constructionHistory=False)[0]\r\ngrp = cmds.group(cube, name=\"group\")\r\ncube = cmds.listRelatives(grp, fullPath=True)[0]\r\n\r\n# Create instance\r\nCreator = openpype.lib.get_creator_by_name(\"CreatePointcache\")\r\ncreate(Creator, name=\"pointcacheMain\", members=[grp, cube])\r\n```\r\n\r\nScript Editor log:\r\n```\r\nAlembic Job Arguments : -selection -uvWrite -eulerFilter -dataFormat ogawa -step 1.0 -attr cbId -writeVisibility -worldSpace -root |group -root |group|pCube1 -writeUVSets -frameRange 1001.0 1100.0 -autoSubd -file \"C:/Users/Roy/AppData/Local/Temp/pyblish_tmp_8_f5vrol/pointcacheMain.abc\"\r\n// Error: pyblish.plugin : Traceback (most recent call last):\r\n  File \"S:\\openpype\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"S:\\openpype\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\extract_pointcache.py\", line 82, in process\r\n  File \"S:\\openpype\\OpenPype\\openpype\\hosts\\maya\\api\\lib.py\", line 1233, in extract_alembic\r\n    cmds.AbcExport(j=job_str, verbose=verbose)\r\n  File \"S:\\openpype\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\extract_pointcache.py\", line 2, in AbcExport\r\nRuntimeError: |group and |group|pCube1 have parenting relationships\r\n|group and |group|pCube1 have an ancestor relationship.\r\n\r\nTraceback (most recent call last):\r\n  File \"S:\\openpype\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"<string>\", line 82, in process\r\n  File \"S:\\openpype\\OpenPype\\openpype\\hosts\\maya\\api\\lib.py\", line 1233, in extract_alembic\r\n    cmds.AbcExport(j=job_str, verbose=verbose)\r\n  File \"<string>\", line 2, in AbcExport\r\nRuntimeError: |group and |group|pCube1 have parenting relationships\r\n|group and |group|pCube1 have an ancestor relationship.\r\n // \r\n```\r\n\r\n**Expected behavior**\r\n\r\nWe should add a Validator so that it errors much earlier - and also so we can provide a clear error message to the user as to what is going on and what potential solutions to the problem would be. E.g. we could provide an automatic repair to allow removing children from the publish instance directly - to clean up?\r\n\r\nOr we could instead in the Extractor ignore any children that were in the instance and always only consider the highest nodes in the hierarchies as root nodes. This might reduce less \"struggle\" to the end user?\r\n\n\n[cuID:[OP-2978](https://app.clickup.com/t/25efx90)]",
        "url": "https://github.com/ynput/OpenPype/issues/2873"
    },
    {
        "number": 2883,
        "title": "3Delight: Support for Maya",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nThe OpenPype doesn't have support for 3Delight render.\r\n\r\n**Describe the solution you'd like**\r\nAdd render support for 3Delight.\r\n\r\n**Describe alternatives you've considered**\r\nThis is additive, nothing alternative.\r\n\r\n**Additional context**\r\nThis is needed by us, and we'd develop it and create PR for this feature.\r\n\n\n[cuID:[OP-6739](https://app.clickup.com/t/861nakt68)]",
        "url": "https://github.com/ynput/OpenPype/issues/2883"
    },
    {
        "number": 2893,
        "title": "Krita: Support as Photoshop",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nSupport Krita, which is also painting tool used in many studio.\r\n\r\n**Describe the solution you'd like**\r\nSupport Krita as Photoshop.\r\n\r\n[**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.](https://scripting.krita.org/lessons/menus)\r\n\r\n**Additional context**\r\nIt's possible to write Python plugin for Krita.\r\n\n\n[cuID:[OP-6745](https://app.clickup.com/t/861nakt64)]",
        "url": "https://github.com/ynput/OpenPype/issues/2893"
    },
    {
        "number": 2900,
        "title": "Maya: add loaded containers to published instance GUI refresh issue",
        "body": "**Describe the bug**\r\nSwitching asset version in Maya in Manager GUI doesn't update the lines of the containers which loaded with the asset.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Publish a layout which includes a model container. (layout v1 includes model v1)\r\n2. Publish a new version of the model. (model v2)\r\n3. Update the layout with the new model version and publish it. (layout v2 includes model v2)\r\n4. layout v1 into an other workfile.\r\n5. The manager GUI shows layout v1, model v1\r\n6. Switch layout v1 to v2\r\n7. The manager GUI shows layout v2, model v1 but in the maya scene model v1 swapped to v2 correctly.\r\n\r\n**Expected behavior**\r\nManager GUI should correctly show the loaded model version.\r\n\r\n[cuID:[OP-5492](https://app.clickup.com/t/861mkcvmm)]",
        "url": "https://github.com/ynput/OpenPype/issues/2900"
    },
    {
        "number": 2930,
        "title": "Maya: Extractors fail when currently in Edge Loop Tool context",
        "body": "**Describe the bug**\r\n\r\nAs [reported on Discord](https://discord.com/channels/517362899170230292/563751989075378201/955801556580728893) Maya Extractors fail when the user is currently in the Edge Loop Tool context.\r\n\r\nThis is due to the tool context disallowing certain selections to be made and thus the selections that need to be made to export the selection will fail.\r\n\r\nThis issue can likely be reproduced with other tools that also influence the user selection.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to Modeling > Mesh Tools > Insert Edge Loop\r\n2. Keep the tool active and try to publish e.g. model or pointcache.\r\n3. Extractor will fail\r\n\r\nOr to showcase the root of the issue:\r\n```python\r\nfrom maya import cmds\r\n\r\ncube = cmds.polyCube(ch=False)[0]\r\ncmds.select(clear=True)\r\nassert not cmds.ls(selection=True)\r\nprint(cube)\r\n# pCube1\r\n\r\ncmds.setToolTo(\"polySelectEditContext\")\r\ncmds.select(cube)\r\nprint(cmds.ls(sl=1))\r\n# Issue:\r\n# []\r\n\r\ncmds.select(cube, noExpand=True)\r\nprint(cmds.ls(sl=1))\r\n# Issue:\r\n# []\r\n\r\nfrom openpype.hosts.maya.api.lib import tool\r\n\r\nwith tool(\"selectSuperContext\"):\r\n    cmds.select(cube)\r\n    selection = cmds.ls(selection=True)\r\n    assert selection == [cube]\r\n\r\n# And confirm the issue is back again\r\n# once we're back to the original tool\r\n# context outside our 'tool' context\r\nselection = cmds.ls(selection=True)\r\nassert not selection\r\n```\r\n\r\n**Expected behavior**\r\n\r\nIgnore current tool contexts of the user and **never ever** fail to publish. \ud83e\uddd1\u200d\ud83d\ude92 \r\n\r\n**Screenshots**\r\n\r\n![extractors_fail](https://user-images.githubusercontent.com/2439881/159507327-0131b8e1-f4d5-4a67-9759-efe0ad855be1.png)\r\n\r\n**Workaround**\r\n\r\nFor now the easiest workaround is to enter the Selection tool as current tool before publishing.\r\n\r\n[cuID:[OP-5490](https://app.clickup.com/t/861mkcr00)]",
        "url": "https://github.com/ynput/OpenPype/issues/2930"
    },
    {
        "number": 2955,
        "title": "PEP 621 compliant pyproject.toml",
        "body": "## Enhancement\r\n\r\nOur `pyproject.toml` doesn't conform to [PEP 621](https://peps.python.org/pep-0621/) and should be changed. \r\n\n\n[cuID:[OP-6747](https://app.clickup.com/t/861nakt62)]",
        "url": "https://github.com/ynput/OpenPype/issues/2955"
    },
    {
        "number": 2963,
        "title": "General: Check requirement of new OpenPype build",
        "body": "## Description\r\nWe should be able to tell user that to use some zip it is required to install new version of OpenPype.\r\n\r\n## Suggested solution\r\nWe should be able to check it based on minor version of zip openpype vs. build openpype. For example `3.10.0` build can't run `3.11.1` zip so user should get new version. Maybe it would be also nice to tell user that his build version is newer than zip so it may not work as expected. Question is when to check and show this information because import of openpype from zip may crash, it would be good to add this implementation into igniter.\r\n\r\nThis may be connected to discussion https://github.com/pypeclub/OpenPype/discussions/2694\n\n[cuID:[OP-6738](https://app.clickup.com/t/861nakt61)]",
        "url": "https://github.com/ynput/OpenPype/issues/2963"
    },
    {
        "number": 2964,
        "title": "Ftrack: Versioned settings makes ftrack event server outdated",
        "body": "## Description\r\nVersioned settings caused that Ftrack event server can easily become unchangable when new version of openpype zip is deployed. In that case are created new settings for newer version of OpenPype which are not yet used in already running process of ftrack event server. The server would have to be updated which would require to restart all 4 processes of ftrack event server (main process, event storer, event processor and status).\r\n\r\n### Notes\r\nIn some cases the server does not have access to version repository so the restart would not help at all and manual update is needed.\r\n\r\n## Possible solution n1\r\nFor cases when has access to version repository it should be able to restart only processor and change it's version if it's version change that does not require new build. This would require to enhancement of the processes communication.\r\n\r\n## Possible solutoin n2\r\nDefine which version of settings should ftrack event server use. Maybe change it using some kind of action that would affect processor process. This is a hacky approach so it is desperate backup solution.\n\n[cuID:[OP-6743](https://app.clickup.com/t/861nakt67)]",
        "url": "https://github.com/ynput/OpenPype/issues/2964"
    },
    {
        "number": 2970,
        "title": "Maya: Texture hardlinks enabled (again) by default in Looks",
        "body": " ## Bug\r\n\r\nWe've disabled creation of hardlink for textures by default in #995 but for some reason, this is not in place anymore.\r\nHardlinks are not very reliable in some scenarios because of opened handles, making them unusable mainly for Hero versions and so on.\r\n\r\nWheter to disable it directly in code, or enable `force copy` on look instance by default is matter of question.\r\n\r\nRelated to #879\r\n\n\n[cuID:[OP-2981](https://app.clickup.com/t/25ej2zj)]",
        "url": "https://github.com/ynput/OpenPype/issues/2970"
    },
    {
        "number": 2976,
        "title": "General: Unify profile filter criteria in code",
        "body": " **Description**\r\n\r\nProfile filtering is done in a myriad of locations in the code and in some areas I think can be unified to avoid logic differences and errors.\r\n\r\nAs an example:\r\n\r\n- In [`subset_name_profiles`](https://github.com/pypeclub/OpenPype/blob/b3391ebe7151ae540dc01201d43cf75651cd7979/openpype/lib/plugin_tools.py#L71-L91) the last part of the family name is used.\r\n- In the current integrator (before refactor) [the full family name is used](https://github.com/pypeclub/OpenPype/blob/develop/openpype/plugins/publish/integrate_new.py#L835-L840) - same as in [Collect Ftrack Family](https://github.com/pypeclub/OpenPype/blob/4306a618a021ec8a4a66054e66ad4fca694b139a/openpype/modules/ftrack/plugins/publish/collect_ftrack_family.py#L40)\r\n- The [Collect Ftrack Family plug-in uses `api.Session[\"AVALON_APP\"]`](https://github.com/pypeclub/OpenPype/blob/4306a618a021ec8a4a66054e66ad4fca694b139a/openpype/modules/ftrack/plugins/publish/collect_ftrack_family.py#L39) for the `hosts` filter criteria whereas the [Integrator uses `context.data[\"host_name\"]`](https://github.com/pypeclub/OpenPype/blob/e80f0d18d27183dbbc67e8acaa89b6cde9caf80e/openpype/plugins/publish/integrate_new.py#L837) \r\n- The filter criteria also came up on [this PR](https://github.com/pypeclub/OpenPype/pull/2969#discussion_r838257439) just now which recommends using `context.data[\"hostName\"]` which however CAN be different from `api.Session[\"AVALON_APP\"]` which as listed above is potentially also wrongly used in some areas of the code?\r\n- The [Collect Ftrack Family plug-in](https://github.com/pypeclub/OpenPype/blob/4306a618a021ec8a4a66054e66ad4fca694b139a/openpype/modules/ftrack/plugins/publish/collect_ftrack_family.py#L42-L46) filter criteria doesn't expose the `task_type` entry in the filter criteria even though the Admin settings does expose it. This seems like a **bug** which I think can be traced back to not having a clear definition and entry point for these filter criteria.\r\n\r\nI'm aware the `filter_profiles` is also used in other ways with other filter criteria. However it seems like a bunch of areas use the same filter criteria but seemingly with little consistency? At this point in time I'm mostly targeting those filtering criteria using\r\n\r\nEven better if we could also unify this in Admin Settings with its own Profile Filter Schema for the settings - so that if we change the schema and the function all areas support the extra filtering features, like how it appears \"Task Type\" was added at a later state but not correctly implemented in some areas?\r\n\r\n**Describe the solution you'd like**\r\n\r\nPreferably expose a `get_profile_filter_criteria` method that clearly describes what it expects as input values. Or find another way to ease profile filtering in the many different locations in the code base.\r\n\r\nIn the Integrator Refactor I tried to use the simplest data source that is accessible that had the 'right' formatting compared to what the old integrator was doing and [turn that into `get_profile_filter_criteria` and made it use only the parsed `anatomyData`](https://github.com/pypeclub/OpenPype/pull/2898/files#diff-d4b836839eaaa5d85e220403cb758d98f0769ba8220488c424be668fc681defbR78-R94). Not saying that's the **good way** and I'd definitely love to include that in this Issue/discussion.\r\n\r\nAdditionally I think we can get by by having a single `collect_profile_filter_criteria` Collector so that other plug-ins could even use the cached `instance.data[\"profile_filter_criteria\"]` or alike. Not sure if better but at least it'd mean consistent across the publishing workflow.\r\n\r\nNonetheless I feel the urge to just have an easily accessible and consistent way to create the filter criteria would be beneficial.\r\n\r\n\r\n\r\n[cuID:[OP-2989](https://app.clickup.com/t/25em4g4)]",
        "url": "https://github.com/ynput/OpenPype/issues/2976"
    },
    {
        "number": 2993,
        "title": "Subset name validations",
        "body": " ## Description\r\nRight now we have defined \"allowerd symbols in subset name\" which is used in regex validation, but the validation happens only during creation. There are cases when subset name is created during publishing from names in the scene (e.g. photoshop) which can create subset names that don't match those allowed symbols. The question is if we should validate them too, or we should allow more symbols, or maybe reverse the logic and define \"not allowed symbols\" instead.\r\n\r\n## Additional context\r\nThis subset name can now be created using Photoshop `\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9`  (`background` in translation).\r\n\r\n[cuID:[OP-3000](https://app.clickup.com/t/25m6nw5)]",
        "url": "https://github.com/ynput/OpenPype/issues/2993"
    },
    {
        "number": 2997,
        "title": "Deadline: User Override Frame Range does not update integrated start and end frame.",
        "body": " **Describe the bug**\r\n\r\nThe [ValidateExpectedFiles](https://github.com/pypeclub/OpenPype/blob/develop/openpype/modules/deadline/plugins/publish/validate_expected_and_rendered_files.py#L51-L65)w plug-in allows to override the expected start and end frame for a publish if the user had changed the Frame List in Deadline manually.\r\n\r\nThis updates the `reresentation[\"files\"]` but forgets to update the `representation[\"frameStart\"]` and `representation[\"frameEnd\"]` and also the `instance.data[\"frameStart\"]` and `instance.data[\"frameEnd\"]` which results in:\r\n\r\n- All new files being transferred \u2705 Ok.\r\n- If start frame has changed, then the frames get \"shifted\" after integration due to the start frame being different. So the frames will be off after integration.\r\n- The integrated version will have the wrong `frameStart` and `frameEnd` in the Loader. As if the new files didn't exist and it was still the old frame range.\r\n\r\nWhen solving this Issue I'd also like to move the updating frame range logic to a Collector for consistency in logic.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Submit a maya render to Deadline, e.g. frames `1001-1010`\r\n2. Render and let it publish.\r\n3. In Deadline on the render job change the frame list to `990-1020`, requeue the render.\r\n4. Requeue the publish job.\r\n5. The resulting published version has invalid information.\r\n\r\n**Expected behavior**\r\n\r\nHave the expected frame list as frame range and the resulting published files not be renamed.\r\nHave the loader show the correct frame range (and thus having the right frame range being published along.)\r\n\r\n_Another issue is also present - that is if the NEW publish has LESS frames than before that the old files aren't actually removed. So technically if overwriting an existing representation it should clear out old files for that representation completely. Slightly separate from the core of this issue. But should be fixed down the line too._\r\n\r\n\r\n[cuID:[OP-3006](https://app.clickup.com/t/25m94q7)]",
        "url": "https://github.com/ynput/OpenPype/issues/2997"
    },
    {
        "number": 3007,
        "title": "Unify Deadline settings",
        "body": " ## Feature\r\n\r\nWe use Deadline options across the OpenPype, usually hardcoded to scripts. We have all Deadline job options defined as data class here:\r\n\r\nhttps://github.com/pypeclub/OpenPype/blob/develop/openpype/modules/deadline/abstract_submit_deadline.py\r\n\r\nMaybe we could add to each type and human description, wrap it as entity (enum) to Settings so adding Deadline option would be just selecting it from the list and filling value?\r\n\r\n```repl\r\n# pseudo code\r\n>>> DeadlineJobInfo.Priority = \"a\"\r\nError: Priority is integer value\r\n>>> DeadlineJobInfo.Priority.description()\r\nSpecifies the priority of a job with 0 being the lowest (default = 50). The maximum priority can be configured in the Job Settings of the Repository Options, and defaults to 100.\r\n```\r\n\r\n\r\n[cuID:[OP-6746](https://app.clickup.com/t/861nakt5z)]",
        "url": "https://github.com/ynput/OpenPype/issues/3007"
    },
    {
        "number": 3037,
        "title": "houdini: publish usd requires \"flatten all layers\" in the ROP",
        "body": " Publishing a USD file from Houdini fails with the default ROP option \"flatten implicit layers only\". To publish you need to switch to \"flatten all layers\". I am not sure if this is intended or otherwise but in any case it should work by default, so maybe when creating the ROP you can set that option.\r\n\r\n- op: 3.9.3 windows\r\n- host: Houdini 18.5 and 19.0\r\n\n\n[cuID:[OP-3070](https://app.clickup.com/t/265b28r)]",
        "url": "https://github.com/ynput/OpenPype/issues/3037"
    },
    {
        "number": 3057,
        "title": "Pools and Groups user overrides during publish ",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAs mentioned in #3051 PR we can continue improving pools and groups handling during publish \r\n\r\n**Describe the solution you'd like**\r\n\r\nWe should expose pools and groups in render instances for users so these can be overridden from the default values we set in project settings. (in all hosts where it is actually possible, definitely in Maya, Nuke, Houdini, Blender, etc.)\r\n\r\nRender farm resources management can be quite complex. So far we have per-project settings to allow fine-tunning the requirements based on production needs.\r\n\r\nSometimes it is necessary to alter these settings on a scene level to allow user control. For example, we need to restrict the machines with 256GB ram to render or only machines with GPU installed etc.\r\n\r\nIt will be also valuable to expose these values (the group is hidden in settings now) so it will be much easier to double-check if submission settings are correct.\r\n\r\nWe should expose pools and groups fields as text fields so it would be possible to add/change the assignment.\r\n\r\n![image](https://user-images.githubusercontent.com/352795/163132518-283323f6-6961-4244-b5b2-69a88a896b0d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/352795/163132611-0e97a8f9-1d3a-4edc-8c91-a546f978d936.png)\r\n\r\n\r\n\r\n\n\n[cuID:[OP-3096](https://app.clickup.com/t/26b8h4r)]",
        "url": "https://github.com/ynput/OpenPype/issues/3057"
    },
    {
        "number": 3084,
        "title": "Maya: ability to publish multiple rig subsets from a single workfile",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nYou can create multiple rig subsets in a single workfile with Creator, but validating and extracting them fails, as the code isn't prepared for it.\r\n\r\n**Describe the solution you'd like**\r\nAbility to publish multiple rig subsets from a single workfile.\r\n\n\n[cuID:[OP-3114](https://app.clickup.com/t/28frmx9)]",
        "url": "https://github.com/ynput/OpenPype/issues/3084"
    },
    {
        "number": 3102,
        "title": "Ftrack connection error reporting",
        "body": " ## Bug\r\n\r\nIf computer is disconnected from internet for some reason and openpype cannot connect to ftrack, it reports multiple issues but none of them is related to direct cause - it reports ftrack url missing and that user credentials are invalid, but the root cause is that it cannot connect to internet.\r\n\r\n### To replicate\r\n\r\nDisconnect from internet and run `openpype_console` to see output.\r\n\r\n### Expected behaviour\r\n\r\nIt should show error message like `Cannot connect to ftrack, please check your Internet connection`\n\n[cuID:[OP-3131](https://app.clickup.com/t/28nn8q2)]",
        "url": "https://github.com/ynput/OpenPype/issues/3102"
    },
    {
        "number": 3103,
        "title": "Local settings for active site when SiteSync is off",
        "body": " **Describe the bug**\r\nThere is a discrepancy in Local settings, when it is not possible to change the active site after switching off sitesync for a particular project\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Turn on SiteSync for a project\r\n2. Change your active site to local and change root path to the project in Local settings\r\n3. Restart\r\n4. Your local site is working now\r\n5. Switch the SiteSync off for the project, restart OP\r\n6. Go to local settings and check OpenPype info\r\n\r\n**Expected behavior**\r\nOP should follow what is visible in local settings\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/352795/165257751-e6bda216-d1c6-4c47-a290-aa64e9c8f066.png)\r\n\r\nOP is following what is in OP info and there is no way how to fix it, despite switching on the SiteSync again to enable the active site in Local settings and switching the active site back to the studio site.\r\n\r\n[cuID:[OP-3133](https://app.clickup.com/t/28nnfkx)]",
        "url": "https://github.com/ynput/OpenPype/issues/3103"
    },
    {
        "number": 3113,
        "title": "Maya collect render fails when no render products are generated",
        "body": " ## Bug\r\n\r\n`collect_render` collector plugin in Maya will fail very ungracefully when conditions are so no render products are generated - for example frame range is set so, and so on. It should check if they are generated and if not then fail with specific error message. Currently the traceback doesn't say anything useful as it crashes on completely unrelated part of code.\n\n[cuID:[OP-3145](https://app.clickup.com/t/290zgup)]",
        "url": "https://github.com/ynput/OpenPype/issues/3113"
    },
    {
        "number": 3126,
        "title": "Settings: ColorEntity enhancements",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nWe are only storing color entity information as 8bit color, list of integer with up to 255 of each. Only schema attribute we can use is `use_alpha`. All of it is great, but unusable for 32bit operating hosts. And in case we want to store  hex string instead of a list of numbers, which might come handy to some extent (ex. nuke node knob `tile_color` is using hex )\r\n\r\n**Describe the solution you'd like**\r\nWe could enhance `ColorEntity` with switchers for storing targets and add float alternative of the color. So If we could use following example:\r\n\r\n### example 1. hex \r\n```\r\n{\r\n    \"type\": \"color\",\r\n    \"label\": \"Value\",\r\n    \"key\": \"value\",\r\n    \"use_alpha\": true,\r\n\t\"store_hex\": true\r\n}\r\n```\r\nThis would save to settings. [0] is hex of color and [1] is hex of alpha\r\n`\"value\": [\"0x22ffff55\", \"0xffffffff\"]`\r\n\r\n### example 2. float\r\n```\r\n{\r\n    \"type\": \"color\",\r\n    \"label\": \"Value\",\r\n    \"key\": \"value\",\r\n    \"use_alpha\": true,\r\n\t\"store_32bit\": true\r\n}\r\n```\r\nThis would save to settings. [rgba] float\r\n`\"value\": [1.456, 0.567, 0.898, 1]`\r\n\r\n[cuID:[OP-3169](https://app.clickup.com/t/296qmvc)]",
        "url": "https://github.com/ynput/OpenPype/issues/3126"
    },
    {
        "number": 3138,
        "title": "FTrack: Note creation with empty intent",
        "body": " **Describe the bug**\r\n`IntegrateFtrackInstance/IntegrateFtrackNote` default Note template:\r\n`{intent}: {comment}`\r\n\r\nIf the user don't enter any intent or write any comment a Note sill being created in FTrack with content:\r\n`-:`\r\nwhich is the intent `-`, the separator `:` and an empty string.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Switch on `IntegrateFtrackInstance/IntegrateFtrackNote`  in settings with the defaults\r\n2. Publish anything without setting an intent or writing any comment\r\n3. Check the Note in FTrack\r\n\r\n**Expected behavior**\r\nIf the user don't set an intent or enter a comment, then don't create an FTrack note.\r\n\r\n**Screenshots**\r\nCreated note example:\r\n![image](https://user-images.githubusercontent.com/8620515/166469483-98288dfa-e047-4f79-ac7c-161cedd499a7.png)\r\n\r\n\n\n[cuID:[OP-3178](https://app.clickup.com/t/296wczf)]",
        "url": "https://github.com/ynput/OpenPype/issues/3138"
    },
    {
        "number": 3146,
        "title": "Maya to Muster submitter",
        "body": " **Describe the bug**\r\nWhen Muster is activated in the modules, Create render and Publish does not work at all. By now, I've just tested inside Maya.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to the Module section of admin settings, activate Muster and deactivate Deadline\r\n2. Inside Maya, OpenPype>Create>render does not work. \r\n3. If you fix previous problem, OpenPype>Publish can not do the job.\r\n\r\n**Here is a list of problems so far.** \r\n*create_render* plugin for Maya.\r\n1. These two lines should be moved inside the if at line 269.\r\nhttps://github.com/pypeclub/OpenPype/blob/4ffccc8ecf5e3a2543b00042977076261e978622/openpype/hosts/maya/plugins/create/create_render.py#L242-L243\r\n2. An error at this line, as deadline it is deactivated.\r\nhttps://github.com/pypeclub/OpenPype/blob/4ffccc8ecf5e3a2543b00042977076261e978622/openpype/hosts/maya/plugins/create/create_render.py#L315\r\n*submit_maya_muster* publish plugin for Maya\r\n1. This environment variable does not exist, I suppose.\r\nhttps://github.com/pypeclub/OpenPype/blob/4ffccc8ecf5e3a2543b00042977076261e978622/openpype/hosts/maya/plugins/publish/submit_maya_muster.py#L313\r\n2. This won't work in Python 3.\r\nhttps://github.com/pypeclub/OpenPype/blob/4ffccc8ecf5e3a2543b00042977076261e978622/openpype/hosts/maya/plugins/publish/submit_maya_muster.py#L524\r\n4. The openpype.scripts.publish_filesequence module does not exist. **Is it up to the user to create it, or it was there at some point ?**\r\nhttps://github.com/pypeclub/OpenPype/blob/4ffccc8ecf5e3a2543b00042977076261e978622/openpype/hosts/maya/plugins/publish/submit_maya_muster.py#L43\r\n\r\nMost of them are easy to fix, so my question is the number 5.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Centos 7\r\n - Host: Maya 2022.3\r\n\r\nI'll update this post.\r\n\n\n[cuID:[OP-3192](https://app.clickup.com/t/29j3ymv)]",
        "url": "https://github.com/ynput/OpenPype/issues/3146"
    },
    {
        "number": 3150,
        "title": "Tools: Propagating project tool settings into existing assets ",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nWhen adding a new Tool default to a project existing assets are left unaltered. With many assets it can be intensive to propagate a new tool or updated tool into the project because of this.\r\n\r\nThere are two problems:\r\n- It's unclear that adding a Tool to the project doesn't directly influence existing assets\r\n- It would be nice if the Project Manager or settings would have functionality to easily \"propagate an update\"\r\n\r\n**Additional context**\r\n\r\n- [Tools don't work for existing assets came up on Discord](https://discord.com/channels/517362899170230292/563751989075378201/969262587575418931)\r\n\r\n\n\n[cuID:[OP-3194](https://app.clickup.com/t/29qzy90)]",
        "url": "https://github.com/ynput/OpenPype/issues/3150"
    },
    {
        "number": 3161,
        "title": "New Publisher should have field for intent",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nOld Pyblish had 2 context fields:\r\n- 'comment'\r\n- 'intent'\r\n![Screenshot 2022-05-10 170236](https://user-images.githubusercontent.com/4457962/167660230-c8f70c51-d38e-4083-bea0-0ad8586746f9.png)\r\n\r\nIt seems that NP has only 'comment' field.\r\n\r\nNP should have dropdown for intents too.\r\n\r\n\r\n[cuID:[OP-3212](https://app.clickup.com/t/2a8y2u7)]",
        "url": "https://github.com/ynput/OpenPype/issues/3161"
    },
    {
        "number": 3187,
        "title": "Project Manager: Saving while another user added a task removes the task",
        "body": " **Describe the bug**\r\n\r\nWe hit an issue where one User added a Task to an Asset that hadn't shown in the Project Manager for another User yet. The other user also added a (different) Task on the same Asset.\r\n\r\nSaving by the second user removed the Task added by the first User. \r\n\r\nI believe this \"problem\" has a bigger chance of occurring due to the Project Manager remaining open in the background in Tray when closing it and reopening it. As such, it might remain in its unrefreshed old state from before closing since it doesn't seem to refresh on showing it again?\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Have two Users open the Project Manager\r\n2. Add a \"Modeling\" Task to Asset, then Save.\r\n3. Other User add a \"Rigging\" Task to Asset, then Save.\r\n4. Browse in Launcher to the Asset. Only \"Rigging\" task will be available.\r\n\r\n**Expected behavior**\r\n\r\nIt should persist as much as possible on conflicting Users updating the project in the database. The absolute worst case scenario should be a pop-up on Save saying something like a \"Conflict on Save\" describing which assets/changes are in conflict and should disallow the save without a refresh and have the User refresh with its own changes overlaid on top of it.\n\n[cuID:[OP-3254](https://app.clickup.com/t/2au9v41)]",
        "url": "https://github.com/ynput/OpenPype/issues/3187"
    },
    {
        "number": 3191,
        "title": "TVPaint: Don't change instance family in extractors",
        "body": " ## Short description\r\nTVPaint extractor is changing `renderPass`, `renderLayer` and `renderScene` into `render` but they all should already have it set during collection.\r\n\r\n## Suggested solution\r\nMain family of these instances should be `render` from collecting phase and the current \"main\" family should be moved into `families` of the instance. That may require few changes in extractor.\n\n[cuID:[OP-3257](https://app.clickup.com/t/2aubqpk)]",
        "url": "https://github.com/ynput/OpenPype/issues/3191"
    },
    {
        "number": 3201,
        "title": "Loader tool: Separate logic from UI",
        "body": " ## Description\r\nLoader at this moment has whole logic in each separated widgets but in a lot of cases they should use single controller and model. The best example is subset widget and representation widgets which are both querying the same data and creating modules manger for sync server specific logic. All of that should be implemented using fully UI independent objects (pure python). Each of these steps is slowing down the UI a lot especially when server (mongo) is running on cloud.\r\n\r\nThis approach would also make cleaner UI.\r\n\r\n[cuID:[OP-3262](https://app.clickup.com/t/2b03jmu)]",
        "url": "https://github.com/ynput/OpenPype/issues/3201"
    },
    {
        "number": 3213,
        "title": "Hero version Look texture path",
        "body": " **Describe the bug**\r\nHero version of the published look has textures linked to the version the hero came from.  (it is just a simple copy of the scene)\r\nAs we are copying the resource folder to hero folder, we should remap the paths to use them so the look package is really selfcontained.\r\n\r\nIf we agree on keeping simple copy of the version scene without the hassle of repathing the textures we should not copy the resources to hero folder as the data is of no use.\r\n\r\n**To Reproduce**\r\npublish any shader with texture\r\n\r\n**Expected behavior**\r\ntextures should be used from hero/resources\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/352795/169289057-0806395d-c8ad-4a6b-a30b-b6c44cb5295c.png)\r\n\r\n\n\n[cuID:[OP-3274](https://app.clickup.com/t/2bbe44g)]",
        "url": "https://github.com/ynput/OpenPype/issues/3213"
    },
    {
        "number": 3262,
        "title": "Maya: Extract viewport thumbnail fails",
        "body": " ## Bug\r\n\r\nGeneration of thumbnails from viewport in Maya fails on `Thumbnail` plugin.\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/170968419-d8509f27-a31a-4d97-929d-40864de095b2.png)\n\n[cuID:[OP-3354](https://app.clickup.com/t/2eqzt1f)]",
        "url": "https://github.com/ynput/OpenPype/issues/3262"
    },
    {
        "number": 3273,
        "title": "Maya: settings for multiple review instances",
        "body": " as we have a possibility of having multiple review instances now #3269\r\n\r\nwe need to come up with a system of using different settings for each instance.\r\n\r\nThe current practice of picking up and exposing arbitrary attributes (like Transparency in this example) \r\n![image](https://user-images.githubusercontent.com/352795/171439216-e3b6bc00-5d5f-4dc9-b63f-03270f1dd4f2.png)\r\nis very bad, cluttering the code and UI\r\n\r\nexamples of different settings:\r\n\r\n- I can have two different static images/turnarounds for modeling review - one shaded, the other with wireframe for topology approval\r\n- animation playblasts - one with a simple image plane, the other with alpha for comp to add more sophisticated one\r\n- etc.\r\n\n\n[cuID:[OP-3357](https://app.clickup.com/t/2eqzt5n)]",
        "url": "https://github.com/ynput/OpenPype/issues/3273"
    },
    {
        "number": 3275,
        "title": "Maya: per face shaders assignment validator ",
        "body": " We need to validate per face shader assignments as it breaks look publishing\r\n\r\nper face shaders should be forbidden as we are not able to handle topology changes and identify faces/shaders relationship consistently.\r\n\r\n\n\n[cuID:[OP-3358](https://app.clickup.com/t/2eqzt6m)]",
        "url": "https://github.com/ynput/OpenPype/issues/3275"
    },
    {
        "number": 3311,
        "title": "default uvset name for alembic output",
        "body": " When Maya is used for lighting on a project where alembic data is produced by other DCCs, there is a constant issue with the default uv set name. Maya expects to have at least one uv set name \"map1\"\r\nIn case there is no such uv set name, it will create an empty map1 uv set effectively destroying texture shading on such model.\r\n\r\nTo prevent this from happening we should have (an optional) validator for the uv set name to be map1 in all DCCs\r\n\r\n![image](https://user-images.githubusercontent.com/352795/173031709-370cb7c6-47ad-43f3-9308-11c65172a0e6.png)\r\n\r\n\r\n[cuID:[OP-3372](https://app.clickup.com/t/2f3ht3k)]",
        "url": "https://github.com/ynput/OpenPype/issues/3311"
    },
    {
        "number": 3312,
        "title": "Houdini: support for id attribute for Houdini -> Maya lookdev",
        "body": " ## Feature\r\n\r\nHoudini currently doesn't generate and add `cbId` equivalent attribute so when you publish alembics from Houdini and you want to use them for lookdev in Maya, it will not work.\r\n\r\nThere are few options to handle it:\r\n\r\n- provide SOP level generator for Ids (but it might get tricky with more complex setups)\r\n- add support for paths in Maya look assigner (but that won't add feature parity between maya / houdini)\n\n[cuID:[OP-3390](https://app.clickup.com/t/2f3jrtr)]",
        "url": "https://github.com/ynput/OpenPype/issues/3312"
    },
    {
        "number": 3327,
        "title": "Maya looks: publish paths as an option for look assigner method",
        "body": " ## Feature\r\n\r\nreference: #1559 \r\n\r\nto have looks more flexible, lets publish path along with the ids and let the artist choose when applying look what method of look assignment it should use.\r\n\r\nThis will bring it closer to usd/alembics and allow to apply look to data coming from different dccs.\n\n[cuID:2f3nc24]",
        "url": "https://github.com/ynput/OpenPype/issues/3327"
    },
    {
        "number": 3332,
        "title": "Maya: Deadline asset dependencies not working properly",
        "body": " **Describe the bug**\r\n\r\nWe have a feature of checking asset dependencies turned on by default for Maya jobs submitted to Deadline\r\n\r\n![image](https://user-images.githubusercontent.com/352795/173393994-d32c6360-69f9-4c6d-99f9-1e0ec316cbfc.png)\r\n \r\n\r\nIn many cases, it is creating issues with checking all the assets used in the Maya scene and not starting the render indefinitely waiting for dependencies to be fulfilled.\r\n\r\nMaybe the issue is with the tokens in file names\r\n![image](https://user-images.githubusercontent.com/352795/173396801-10de3805-a3fb-4239-a88e-3ae483c58d3c.png)\r\n\r\n\r\n\r\n\r\nI would definitely suggest turning this off by default and leaving it optional as it is creating more troubles at the moment and it makes sense only in cases when uploading the render scene to the cloud or other RARE cases.\r\n\n\n[cuID:[OP-3413](https://app.clickup.com/t/2fexvep)]",
        "url": "https://github.com/ynput/OpenPype/issues/3332"
    },
    {
        "number": 3343,
        "title": "Deadline: Better AOV handling in submit job",
        "body": " ## Description\r\nRight now there is always used `match_aov_pattern` to find out if review should be created on farm but that doesn't make sense in most of DCCs. When Nuke, Photoshop, Aftereffects are sending job to farm they already know if review should be created and its' not based on AOV's. Right now there is quick hack using `\"useSequenceForReview\"` which works only for sequences and not single file outputs.\r\n\r\n## Expected behavior\r\nUsing AOVs to define if preview is based on AOVs should be turned off by default and triggered only if instance data contains some key (e.g. `\"useAovForReview\"`), otherwise use value from instance.data stored under very specific key (e.g. `instance.data.get(\"reviewEnabled\", False)`).\r\n\r\n\r\n[cuID:[OP-3416](https://app.clickup.com/t/2gbpy5q)]",
        "url": "https://github.com/ynput/OpenPype/issues/3343"
    },
    {
        "number": 3359,
        "title": "Switch context: Notify user when going into new context with different tools",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nOpenPype allows custom tools to be set per asset, e.g. `sh010` could be set to use mtoa 5.1 but `sh050` could use mtoa 5.2. When launching into sh010 and then using work files opening a work file in sh050 the user would still be loading the asset with mtoa 5.1 incorrectly.\r\n\r\nWhen doing so - there is no warning whatsoever and the user might be totally unaware of the tools mismatch.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI'd like to show a warning/pop-up or notify the user in any other way that they are now incorrectly going into a context which should actually be using a different set of tools than currently is used in your session - and that e.g. a \"restart\" is recommended. Even better if the pop-up could then have a button like \"Restart in context\" which would re-open the current application with the correct environment instead.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI've also considered disallowing browsing into the context whatsoever but I do think it's very likely it will leave the user why they aren't able to launch into a specific context. As such, in all cases the user should be made aware of what's going on.\n\n[cuID:[OP-3421](https://app.clickup.com/t/2gpxvr2)]",
        "url": "https://github.com/ynput/OpenPype/issues/3359"
    },
    {
        "number": 3373,
        "title": "Settings: confirmation dialogue when updating project overrides",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAt the moment, whoever hit save button on project overrides settings are updated without user acknowledgement.\r\n\r\n**Describe the solution you'd like**\r\nWhen user hits Save button and original version is lower than actual then it should prompt user that it can potentially disturb the production. \r\n\r\n\n\n[cuID:[OP-3434](https://app.clickup.com/t/2h84395)]",
        "url": "https://github.com/ynput/OpenPype/issues/3373"
    },
    {
        "number": 3389,
        "title": "API: Query workfiles for an asset",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to easily query the existing workfiles for an asset. Or at least have a clear cut way to find the workfiles for an asset.\r\nThe implementation would be used to batch detect the latest workfiles and do automation with that, things like:\r\n\r\n- After Maya render automatically open last related Comp to automatically render it out with the updates.\r\n- Detect newer workfiles than latest publishes for the shot to do a quick check whether publishes are potentially out of date (to be updated)\r\n- Check latest workfiles whether they contain all the latest publishes (e.g. do all comps currently have the latest renders in the comp files)?\r\n\r\nI couldn't find anything that resembled a stable solution that worked out of the box.\r\n\r\n**Describe the solution you'd like**\r\n\r\n- Should allow to query (all) workfiles for a specific asset, task, application/host\r\n- Should support `AVALON_SCENEDIR`\r\n- Should have a simple way to from the list of files get what OpenPype assumes is the last version. (based on name template + version, like workfiles tool does?)\r\n\r\nI'd like to be able to do:\r\n```python\r\nget_workfiles(asset, task=\"compositing\", application=\"maya\")\r\n```\r\n\r\nPotentially this is fine too if it could find the correct `workdir` including the applications' expected `AVALON_SCENEDIR`.\r\n```python\r\nasset = get_asset_by_name(\"hero\")\r\nworkdir = get_workfiles_dir(asset, task=\"compositing\", application=\"maya\")\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nDraft implementation I had set up:\r\n\r\n```python\r\ndef get_last_workfile(asset_doc, task_name, host_name, anatomy, extensions, project_settings):\r\n\r\n    workdir_data = avalon_context.get_workdir_data(project, asset, task_name=task_name, host_name=host_name)\r\n    workdir = avalon_context.get_workdir_with_workdir_data(workdir_data, anatomy=anatomy)\r\n    workdir = os.path.join(workdir, \"scenes\")  # I had to HACK this in since code didn't support the `AVALON_SCENEDIR` for a host\r\n    task_type = workdir_data[\"task\"][\"type\"]\r\n    template_key = avalon_context.get_workfile_template_key(\r\n        task_type, host_name, project_settings=project_settings\r\n    )\r\n    \r\n    # Find last workfile\r\n    file_template = str(anatomy.templates[template_key][\"file\"])\r\n    workdir_data.update({\r\n        \"version\": 1,\r\n        \"user\": get_openpype_username(),\r\n        \"ext\": extensions[0]\r\n    })\r\n\r\n    last_workfile_path = avalon_context.get_last_workfile(\r\n        workdir, file_template, workdir_data, extensions, True\r\n    )\r\n    \r\n    if os.path.exists(last_workfile_path):\r\n        return last_workfile_path\r\n    else:\r\n        print(f\"No workfile exists for: {asset['name']}\")\r\n```\r\n\r\n**Additional context**\r\n\r\nThis might already be solved with a clear example on how to approach this best.\r\n\r\n\r\n[cuID:[OP-3439](https://app.clickup.com/t/2he1krd)]",
        "url": "https://github.com/ynput/OpenPype/issues/3389"
    },
    {
        "number": 3394,
        "title": "OpenImageIO: bundle static build for Linux",
        "body": " ## Problem\r\n\r\nCurrently bundled OIIO for linux isn't static and so is depending on libraries most likely not present on the system (definitely not on Centos 7). We need to switch it on server and `pyproject.toml`\n\n[cuID:[OP-3450](https://app.clickup.com/t/2hz0tn2)]",
        "url": "https://github.com/ynput/OpenPype/issues/3394"
    },
    {
        "number": 3396,
        "title": "Maya: Collect Render slows down publishing a lot",
        "body": " **Describe the bug**\r\n\r\nCollect Render is really slow for large scenes with many layers. The only reason why it's slow is due to these logging lines:\r\n- https://github.com/pypeclub/OpenPype/blob/develop/openpype/hosts/maya/plugins/publish/collect_render.py#L217\r\n- https://github.com/pypeclub/OpenPype/blob/develop/openpype/hosts/maya/plugins/publish/collect_render.py#L298\r\n- https://github.com/pypeclub/OpenPype/blob/develop/openpype/hosts/maya/plugins/publish/collect_render.py#L413\r\n\r\nThat changes a scene that takes 15+ seconds to collect back down to <1 second to collect when they are removed.\r\n\r\nThe issue also is that with that much logged data somehow the Pyblish Pype UI gets relatively slow. The UI remains repsonsive just fine when not processing (except when looking into the logs of that plug-in) but it gets really really sluggish during processing when needing to log more. For example, with the logs still enabled validation also becomes very slow for my test scene - but with those logs just removed in `collect_render` then validation also becomes close to instant.\r\n\r\nIt's a huge speed difference.\r\n\r\nI've quickly tested moving these into an if branch so it only runs if `os.environ.get(\"OPENPYPE_DEBUG\") == \"1\"` and that also worked.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create 10 Render Setup layers (so there's quite a few layers to process)\r\n2. Set render frame range to have 200+ frames, e.g. `1001-1300` (just so expected files list is large to log)\r\n3. Try to publish/submit scene. It'll be very slow.\r\n\r\n**Expected behavior**\r\n\r\nShould be instant.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Host: Maya 2022\r\n\n\n[cuID:[OP-3451](https://app.clickup.com/t/2hz0tn6)]",
        "url": "https://github.com/ynput/OpenPype/issues/3396"
    },
    {
        "number": 3402,
        "title": "Maya: Create Render sets resolution and breaks pixel aspect ratio",
        "body": " **Describe the bug**\r\n\r\nWhen doing OpenPype > Create... > Render then OpenPype resets the render settings for the current renderer.\r\n\r\nIf the current render resolution in render resolution mismatches the one in the project manager / database the resolution is reset in render settings but this breaks the Pixel Aspect ratio.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open an asset that has resolution set to 1920x1080 and pixel aspect to 1.0 (in project manager)\r\n2. In Maya workfile set your render resolution to 50x50\r\n3. OpenPype > Create... > Render\r\n4. Now your render settings pixel aspect ratio is incorrectly set to 0.563\r\n\r\n**Expected behavior**\r\n\r\n1. Create Render should set the settings correctly.\r\n2. And I'd prefer a studio wide setting to disable Create Render to actually mess with render settings in the scene altogether.\r\n\r\n**Screenshots**\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/175311617-9f49df06-66e6-4a9c-860e-ba0337884036.png)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Host: Maya 2022\r\n - Renderer: Redshift, Arnold, V-Ray (reproducable with all of these)\r\n\n\n[cuID:[OP-3453](https://app.clickup.com/t/2hz0tna)]",
        "url": "https://github.com/ynput/OpenPype/issues/3402"
    },
    {
        "number": 3430,
        "title": "Houdini: Publishing scene fragments as workfiles",
        "body": "## Feature\r\n\r\nPublish selection as new hip file. Loader should merge it to current scene. This would work partly as MayaScene family in Maya.\r\n\r\n[cuID:OP-3482]",
        "url": "https://github.com/ynput/OpenPype/issues/3430"
    },
    {
        "number": 3438,
        "title": "Cleanup usage of \"handles\" key from asset document",
        "body": " ## Description\r\nWe still check for `\"handles\"` key on asset document in lot of places but it is backwards compatibility from Pype 2 which is impossible to set without custom code for asset documents creation. I'm convinced we can get rid of it.\r\n\r\n## Additional information\r\nWe have to go through the code and check if it's actually true. First try to find places where `\"handles\"` are filled and change them to use `\"handleStart\"` and `\"handleEnd\"` instead. Then remove the key check from plugins and related code so it probably won't be single PR.\n\n[cuID:[OP-3500](https://app.clickup.com/t/2jaffw9)]",
        "url": "https://github.com/ynput/OpenPype/issues/3438"
    },
    {
        "number": 3451,
        "title": "OP: OpenPypeTileAssembler not working in Deadline",
        "body": " **Describe the bug**\r\nTile assembly job in Deadline is failing with following error\r\n\r\n![image](https://user-images.githubusercontent.com/352795/176681390-aa26b281-d020-4529-af07-964fca78c0fd.png)\r\n\r\n`WARNING: Python version for 'OpenPypeTileAssembler' plugin is not specified! Defaulting to Python 2.`\r\n\r\n```\r\nError: ValueError : invalid literal for int() with base 10: '0.0' (Python.Runtime.PythonException)\r\n  File \"C:\\ProgramData\\Thinkbox\\Deadline10\\workers\\WS01\\plugins\\62bd9a90407bd61ce47c3afd\\OpenPypeTileAssembler.py\", line 333, in render_argument\r\n    \"pos_x\": int(data[\"Tile{}X\".format(tile)]),\r\n   at Python.Runtime.Dispatcher.Dispatch(ArrayList args)\r\n   at __FranticX_GenericDelegate0`1\\[\\[System_String\\, System_Private_CoreLib\\, Version=4_0_0_0\\, Culture=neutral\\, PublicKeyToken=7cec85d7bea7798e\\]\\]Dispatcher.Invoke()\r\n   at FranticX.Processes.ManagedProcess.RenderArgument()\r\n   at Deadline.Plugins.DeadlinePlugin.RenderArgument()\r\n   at FranticX.Processes.ManagedProcess.Execute(Boolean waitForExit)\r\n   at Deadline.Plugins.PluginWrapper.RenderTasks(Task task, String& outMessage, AbortLevel& abortLevel)\r\n```\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nSubmit a Deadline Tile job with OpenPypeTileAssembler set for tiling assembly\r\n\r\n\n\n[cuID:[OP-3508](https://app.clickup.com/t/2jan8wm)]",
        "url": "https://github.com/ynput/OpenPype/issues/3451"
    },
    {
        "number": 3453,
        "title": "Maya: on exit there is a window left and maya is still running",
        "body": " **Describe the bug**\r\nUnder certain conditions there is a window left open on Maya exit and the process is not finished, consuming a lot of memory (depending on the scene content before closing it)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nIt is extremely random and very hard to consistently reproduce. So far it happens in the case of publish which ends up with fail and closing Maya.\r\nIt was reported by other users as well.\r\n\r\n![image](https://user-images.githubusercontent.com/352795/176696409-5ff779ef-6875-4455-b395-405cf7232911.png)\r\n\r\n\r\n**Expected behavior**\r\nMaya should exit and close all subprocesses in a clean way\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Host: Maya2022\r\n\r\n\n\n[cuID:[OP-3510](https://app.clickup.com/t/2janfxk)]",
        "url": "https://github.com/ynput/OpenPype/issues/3453"
    },
    {
        "number": 3467,
        "title": "Host Implementation add more options for `get_containers`",
        "body": " ## Short description (written in hurry)\r\nMethod to get containers should have more options for filtering returned containers. Default behavior should be still same but there should be also option to return containers for selection or from custom state.\r\n\r\nThe states should be defined in some enum and method should expected one additional argument which is by default set to `None`. So the method would look like:\r\n```\r\nclass ReturnType:\r\n    All = object()\r\n    Selection = object()\r\n    RawData = object()\r\n\r\n    \r\ndef get_containers(self, return_type=ReturnType.All, options=None):\r\n    \"\"\"Get containers by return type.\r\n    \r\n    Args:\r\n        return_type (ReturnType): Define way how and from where\r\n            are containers taken.\r\n        options (?List[str]): Options related to `return_type` make sense\r\n            only in specific cases.\r\n\r\n    Returns:\r\n        List[Dict]: List of containers.\r\n    \"\"\"\r\n```\n\n[cuID:[OP-3536](https://app.clickup.com/t/2jp1yzu)]",
        "url": "https://github.com/ynput/OpenPype/issues/3467"
    },
    {
        "number": 3477,
        "title": "Publisher: Instances without context",
        "body": " ## Description\r\nSome creators may be able to tell that their instances don't need to set context because their instances don't integrate any subsets but they're needed for publishing. For example hierarchy instances during publishing.\n\n[cuID:[OP-3548](https://app.clickup.com/t/2k731rm)]",
        "url": "https://github.com/ynput/OpenPype/issues/3477"
    },
    {
        "number": 3481,
        "title": "Maya: More robust render layer collector",
        "body": " ## Description\r\n\r\nCurrenly render layer collector is depending on state of the scene that is later on validated by validators, but because the collector runs before them, there might be situation where not all criteria are met and collector will crash.\r\n\r\nGood example is renderable camera set in the render Settings. Without it, the collector cannot work. Now it will crash on assertion that no render product were generated - that is without the camera true, but it doesn't provide any clue about how to fix it.\n\n[cuID:[OP-3554](https://app.clickup.com/t/2k79xxt)]",
        "url": "https://github.com/ynput/OpenPype/issues/3481"
    },
    {
        "number": 3524,
        "title": "Configurable add review collector",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nCurrently adding of `review` to `families` (and `review` to repre.tags) is a bit scattered around code. It would be beneficial to create generic collector which would be based on Profiles (as for example adding Ftrack family) instead.\r\n\r\n**Describe the solution you'd like**\r\n![159044885-19ba7f7a-d5a0-4f09-bd83-257387bc81f2 (1)](https://user-images.githubusercontent.com/4457962/179261502-5789141e-aabc-4973-bf56-963d8e0bd75b.png)\r\n\r\n**Additional context**\r\nThere existed naive approach https://github.com/pypeclub/OpenPype/pull/2920 which is unfortunately not enough.\r\nMainly in cases when reviewable instances are created during extraction process (which is pretty often unfortunately).\r\nThis collector would be fine for cases that you know what reviewable instances there will be during collection (I think it should work for AE, PS, Harmony), but it will not sort out problem of having logic in multiple places.\r\n\r\n\r\n[cuID:[OP-3594](https://app.clickup.com/t/2m3mz78)]",
        "url": "https://github.com/ynput/OpenPype/issues/3524"
    },
    {
        "number": 3548,
        "title": "Sync queue Quick Filter not filtering properly",
        "body": " **Describe the bug**\r\nSync queue Quick Filter for representations is not working as it should\r\n\r\nit works for three-letter representations like jpg, mp4 etc. \r\n\r\n![image](https://user-images.githubusercontent.com/352795/180169279-7e0a5bf9-afe5-4601-9458-bcf99a8a7422.png)\r\n\r\n\r\nbut not working for Maya files -> ma\r\n\r\n![image](https://user-images.githubusercontent.com/352795/180169593-3ebfcef9-b7cd-4c8a-ab3b-39e850649d02.png)\r\n\r\n\r\n\r\n\n\n[cuID:[OP-3614](https://app.clickup.com/t/2mmut0j)]",
        "url": "https://github.com/ynput/OpenPype/issues/3548"
    },
    {
        "number": 3560,
        "title": "Publisher: Unfolded validator report",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nIn case of more failed instances we are not able to see the list of instances at first glance, but we have to manually unfold the Validation topic to see them.\r\n\r\n**Describe the solution you'd like**\r\nIt would be more user friendly, if we were able to see it  unfold format first look.\r\n\r\n**Additional context**\r\n![image](https://user-images.githubusercontent.com/40640033/180755619-f1d4e354-2a32-4d63-90ab-ffcef8231432.png)\r\n\r\n\n\n[cuID:[OP-3638](https://app.clickup.com/t/2n0a1ut)]",
        "url": "https://github.com/ynput/OpenPype/issues/3560"
    },
    {
        "number": 3575,
        "title": "Add Conan support for binary dependencies",
        "body": " ## What is Conan and how it would help us\r\n\r\nConan is a dependency and package manager for C and C++ languages, It takes care of pulling in necessary dependencies based on build options. It can help us build tools we need in consistent and clean way,\r\n\r\n## Available recipes\r\n\r\nThere are already exisiting recipes for [OpenImageIO](https://conan.io/center/openimageio?version=2.3.7.2), [OpenColorIO](https://conan.io/center/opencolorio) and [ffmpeg](https://conan.io/center/ffmpeg).\n\n[cuID:[OP-3653](https://app.clickup.com/t/2n624at)]",
        "url": "https://github.com/ynput/OpenPype/issues/3575"
    },
    {
        "number": 3602,
        "title": "push-to-zou failure",
        "body": " **Describe the bug**\r\nTrying to push the shots data which exported from Nuke Studio and the process does not completed.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to commad line\r\n2. Run `openpype_console module kitsu push-to-zou -l me@domain.ext -p my_password`\r\n3. See error\r\n```\r\nSynchronizing OpenPype_project...\r\n!!! OpenPype crashed:\r\nTraceback (most recent call last):\r\n  File \"start.py\", line 1106, in boot\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\dependencies\\click\\core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\dependencies\\click\\core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\dependencies\\click\\core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\dependencies\\click\\core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\dependencies\\click\\core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\dependencies\\click\\core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\dependencies\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\openpype\\modules\\kitsu\\kitsu_module.py\", line 117, in push_to_zou\r\n    sync_zou(login, password)\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\openpype\\modules\\kitsu\\utils\\update_zou_with_op.py\", line 42, in sync_zou\r\n    sync_zou_from_op_project(project_doc[\"name\"], dbcon, project_doc)\r\n  File \"C:\\Users\\mreda\\Downloads\\exe.win-amd64-3.7\\openpype\\modules\\kitsu\\utils\\update_zou_with_op.py\", line 131, in sync_zou_from_op_project\r\n    parent_doc = asset_docs[visual_parent_id]\r\nKeyError: None\r\n```\r\n\r\n**Expected behavior**\r\nCan not get the `visual_parent_id` from openpype assets entites.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: windows 10\r\n - Host: command line\r\n\r\n\n\n[cuID:[OP-3674](https://app.clickup.com/t/2nhnj0y)]",
        "url": "https://github.com/ynput/OpenPype/issues/3602"
    },
    {
        "number": 3603,
        "title": "cryptography module and available python versions ",
        "body": " ## Issue\r\n\r\nWhen Houdini 19.5 is installed, launching of Maya is crashing:\r\n\r\n\r\n```\r\nException code: C0000005: ACCESS_VIOLATION - illegal read at address 0x00000010\r\nFault address:  4C371C6B in C:\\Program Files\\Side Effects Software\\Houdini 19.5.303\\bin\\python39.DLL\r\n0001:00180C6B Logical offset (see .map file for location)\r\n\r\nCall stack:\r\n\tModule:  C:\\Program Files (x86)\\OpenPype\\dependencies\\cryptography\\hazmat\\bindings\\_rust.pyd (-exported-)\r\n\tLocation: _rust.pydPyInit__rust + FC bytes\r\n\tModule:  C:\\Program Files\\Autodesk\\Maya2022\\bin\\python37.dll (-exported-)\r\n\tLocation: python37.dllPy_Main + 38F bytes\r\n...\r\n```\r\n\r\n### Probable cause\r\n\r\nThis probably happens because of Houdini added in `PATH`. As `cryptography` module in Python is very picky about `python*.dll` files in path, so what happens is that cryptography module shipped with OP (that has python 3.7 and normally works in Maya 2022) picks dll from Houdini that is on 3.9 and all crashed because they are binary incompatible. So the quick fix would be to get the Houdini from `PATH` probably set on user/system level. Better fix would be to resolve it with #3480.\r\n\r\nBut the risk of python*.dll in path would be still there. Should we always put OP to `PATH` as first item?\r\n\r\n[cuID:[OP-3677](https://app.clickup.com/t/2nq65bq)]",
        "url": "https://github.com/ynput/OpenPype/issues/3603"
    },
    {
        "number": 3606,
        "title": "Hiero publishment error",
        "body": " **Describe the bug**\r\nPublishing shots from Hiero.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. creating a kitsu project\r\n2. creating sequences and shots on kitsu\r\n3. creating an kitsu asset named conform\r\n4. runnig (sync-service) successfully.\r\n5. runing the conform asset task on Hiero\r\n6. importing the footage\r\n7. selecting all the footage and run \"Create\"\r\n![Screenshot 2022-08-01 221121](https://user-images.githubusercontent.com/57462754/182236512-af6a4406-ceec-4ee6-9ce5-efed08bd24d8.png)\r\n8. then \"Publish\"\r\n![Screenshot 2022-08-03 022755](https://user-images.githubusercontent.com/57462754/182499022-956c40c6-5466-48ef-b88b-a0ad921e9af5.png)\r\n\r\n```\r\nInstance: \r\nConforming_workfile\r\nMessage: \r\nAnatomy template \"{root[work]}/{project[name]}/{hierarchy}/Publish/{asset}/{task[name]}/v{version:0>3}/{project[code]}_{asset}_v{version}_{frame}.{ext}\" is unsolved. Missing keys: \"frame\".\r\n```\r\n\r\n![Screenshot 2022-08-01 222435](https://user-images.githubusercontent.com/57462754/182241012-fa658860-b140-49f4-a879-024ae0d92e33.png)\r\n![Screenshot 2022-08-01 222528](https://user-images.githubusercontent.com/57462754/182241015-2595fa59-956f-416f-a5bc-983365ecdbc3.png)\r\n![Screenshot 2022-08-03 042157](https://user-images.githubusercontent.com/57462754/182510460-7896fd20-c492-4a80-a8f4-928621e69bde.png)\r\n\r\n![Screenshot 2022-08-01 222555](https://user-images.githubusercontent.com/57462754/182241019-8688cefb-87be-4d10-8e5f-f815a0c6bdf6.png)\r\n\r\n10. See error\r\n\r\n**Expected behavior**\r\nI should be able to load the footage in nuke scripts later.\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. windows 10]\r\n - Host: [The foundry Hiero 13.2]\r\n\r\n**Logs reviewer**\r\n```\r\n>>> [ Installed event callback for 'taskChanged'.. ]\r\n>>> [ Registering Hiero plug-ins.. ]\r\n>>> [ Registering events for: kBeforeNewProjectCreated, kAfterNewProjectCreated, kBeforeProjectLoad, kAfterProjectLoad, kBeforeProjectSave, kAfterProjectSave, kBeforeProjectClose, kAfterProjectClose, kShutdown, kStartup, kSelectionChanged ]\r\n>>> [ after project load event... ]\r\n>>> [ after project load event... ]\r\n>>> [ ___ track_item: TrackItem('Sq01_Sh0010') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sq01_Sh0010') ]\r\n>>> [ ___ track_item: TrackItem('Sq01_Sh0020') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sq01_Sh0020') ]\r\n>>> [ ___ track_item: TrackItem('Sq01_Sh0030') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sq01_Sh0030') ]\r\n>>> [ ___ track_item: TrackItem('Sq01_Sh0040') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sq01_Sh0040') ]\r\n>>> [ ___ track_item: TrackItem('Sq01_Sh0050') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sq01_Sh0050') ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146C7088> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146C7448> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146C3F08> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146C3308> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146C9488> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146CE208> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146C3DC8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146C34C8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146E1F08> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146D2EC8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146C0648> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146C9BC8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146E1708> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146C8448> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146C0AC8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146C0908> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146C3308> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146C8448> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D146C0DC8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D146CE208> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n>>> [ ___ track_item: TrackItem('Sh0010') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sh0010') ]\r\n>>> [ ___ track_item: TrackItem('Sh0020') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sh0020') ]\r\n>>> [ ___ track_item: TrackItem('Sh0030') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sh0030') ]\r\n>>> [ ___ track_item: TrackItem('Sh0040') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sh0040') ]\r\n>>> [ ___ track_item: TrackItem('Sh0050') ]\r\n>>> [ ___ valid trackitem: TrackItem('Sh0050') ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D14693488> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D1A0034C8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D18CE3588> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D18CE3C48> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D18C83788> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D18C83D48> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D18C85E88> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D18C85988> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D18769488> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D187691C8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D22E72808> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D22E72B88> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D22E727C8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D22E72608> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D22E72DC8> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D22E72B48> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D17F5DE48> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D17F5DD88> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.BinOp object at 0x0000018D22E72D08> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ malformed node or string: <_ast.Attribute object at 0x0000018D22E72F88> ]\r\n*** WRN: >>> { openpype.hosts.hiero.api.lib }: [ invalid syntax (<unknown>, line 1) ]\r\n>>> [ Found match in root \"work\". ]\r\n>>> [ Found match in root \"work\". ]\r\n>>> [ Found match in root \"work\". ]\r\n>>> [ Found match in root \"work\". ]\r\n```\r\n\r\n\r\n[cuID:[OP-3685](https://app.clickup.com/t/2nqc1bj)]",
        "url": "https://github.com/ynput/OpenPype/issues/3606"
    },
    {
        "number": 3613,
        "title": "Enhanced system of priorities",
        "body": " ## Feature\r\n\r\nArtist can set priority on the render instance. That's his choice as he understands his context. Leads/Supervisors may have bigger picture over the assets and shots so they can set priorities on them too. Some task types can have higher priority then the others. Final priority set on the job in Deadline/RoyalRender should be calculated by weighting of all these priorities and these weights should be set in the Settings.\r\n\r\n### Example:\r\n\r\nArtist Bob set priority 70 on render instane in Maya, He is working on the shot S010. Alice is working on car asset and she's doing lookdev. She also sets her priority to 70 on render instance in Maya used for review. There is also modeler Fred that wants to render out turntable of his model, and of course he set priority 70 to his render instance. Their Lead knows, that rendering of the shot has higher priority so he sets on that particular shot priority 80. Default priority on all assets is 50.\r\n\r\nWithout the weighting, all jobs would land on farm with the same priority and it might happen that the more important render of the shot will be the last. But with weights, priority set on the shot by Lead will shift shot render priority much higher and also if there is a weight set on task priority, it will correctly sort order so first will be the shot render, then lookdev and then the turntable.\r\n\n\n[cuID:[OP-3705](https://app.clickup.com/t/2p2mq1b)]",
        "url": "https://github.com/ynput/OpenPype/issues/3613"
    },
    {
        "number": 3626,
        "title": "Hiero No collections found",
        "body": " **Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. creating a kitsu project\r\n2. creating sequences and shots on kitsu\r\n3. creating an kitsu asset named conform\r\n4. runnig (sync-service) successfully.\r\n5. runing the conform asset task on Hiero\r\n6. importing the footage\r\n7. selecting all the footage and run \"Create\"\r\n\r\n**Expected behavior**\r\nI should be able to load the footage in nuke scripts later.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/57462754/183255717-1307ab58-d2c5-4f8f-be90-ff60e8eff7ae.png)\r\n\r\n```\r\nInstance: \r\nSq01_Sh0040_plateMain\r\nMessage: \r\nNo collections found in files: ['HM_Seq03_Sh040_0000.exr', 'HM_Seq03_Sh040_0001.exr', 'HM_Seq03_Sh040_0002.exr', 'HM_Seq03_Sh040_0003.exr', 'HM_Seq03_Sh040_0004.exr', 'HM_Seq03_Sh040_0005.exr', 'HM_Seq03_Sh040_0006.exr', 'HM_Seq03_Sh040_0007.exr', 'HM_Seq03_Sh040_0008.exr', 'HM_Seq03_Sh040_0009.exr', 'HM_Seq03_Sh040_0010.exr', 'HM_Seq03_Sh040_0011.exr', 'HM_Seq03_Sh040_0012.exr', 'HM_Seq03_Sh040_0013.exr', 'HM_Seq03_Sh040_0014.exr', 'HM_Seq03_Sh040_0015.exr', 'HM_Seq03_Sh040_0016.exr', 'HM_Seq03_Sh040_0017.exr', 'HM_Seq03_Sh040_0018.exr', 'HM_Seq03_Sh040_0019.exr', 'HM_Seq03_Sh040_0020.exr', 'HM_Seq03_Sh040_0021.exr', 'HM_Seq03_Sh040_0022.exr', 'HM_Seq03_Sh040_0023.exr', 'HM_Seq03_Sh040_0024.exr', 'HM_Seq03_Sh040_0025.exr', 'HM_Seq03_Sh040_0026.exr', 'HM_Seq03_Sh040_0027.exr', 'HM_Seq03_Sh040_0028.exr', 'HM_Seq03_Sh040_0029.exr', 'HM_Seq03_Sh040_0030.exr', 'HM_Seq03_Sh040_0031.exr', 'HM_Seq03_Sh040_0032.exr', 'HM_Seq03_Sh040_0033.exr', 'HM_Seq03_Sh040_0034.exr', 'HM_Seq03_Sh040_0035.exr', 'HM_Seq03_Sh040_0036.exr', 'HM_Seq03_Sh040_0037.exr', 'HM_Seq03_Sh040_0038.exr', 'HM_Seq03_Sh040_0039.exr', 'HM_Seq03_Sh040_0040.exr', 'HM_Seq03_Sh040_0041.exr', 'HM_Seq03_Sh040_0042.exr', 'HM_Seq03_Sh040_0043.exr', 'HM_Seq03_Sh040_0044.exr', 'HM_Seq03_Sh040_0045.exr', 'HM_Seq03_Sh040_0046.exr', 'HM_Seq03_Sh040_0047.exr', 'HM_Seq03_Sh040_0048.exr', 'HM_Seq03_Sh040_0049.exr', 'HM_Seq03_Sh040_0050.exr', 'HM_Seq03_Sh040_0051.exr', 'HM_Seq03_Sh040_0052.exr', 'HM_Seq03_Sh040_0053.exr', 'HM_Seq03_Sh040_0054.exr']\r\nLine: \r\n50\r\nTraceback: \r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 206, in process\r\n  File \"C:\\Program Files (x86)\\OpenPype\\dependencies\\six.py\", line 719, in reraise\r\n    raise value\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 200, in process\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 317, in register\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 581, in prepare_representation\r\n  File \"C:\\Program Files (x86)\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 50, in assemble\r\nValueError: No collections found in files: ['HM_Seq03_Sh040_0000.exr', 'HM_Seq03_Sh040_0001.exr', 'HM_Seq03_Sh040_0002.exr', 'HM_Seq03_Sh040_0003.exr', 'HM_Seq03_Sh040_0004.exr', 'HM_Seq03_Sh040_0005.exr', 'HM_Seq03_Sh040_0006.exr', 'HM_Seq03_Sh040_0007.exr', 'HM_Seq03_Sh040_0008.exr', 'HM_Seq03_Sh040_0009.exr', 'HM_Seq03_Sh040_0010.exr', 'HM_Seq03_Sh040_0011.exr', 'HM_Seq03_Sh040_0012.exr', 'HM_Seq03_Sh040_0013.exr', 'HM_Seq03_Sh040_0014.exr', 'HM_Seq03_Sh040_0015.exr', 'HM_Seq03_Sh040_0016.exr', 'HM_Seq03_Sh040_0017.exr', 'HM_Seq03_Sh040_0018.exr', 'HM_Seq03_Sh040_0019.exr', 'HM_Seq03_Sh040_0020.exr', 'HM_Seq03_Sh040_0021.exr', 'HM_Seq03_Sh040_0022.exr', 'HM_Seq03_Sh040_0023.exr', 'HM_Seq03_Sh040_0024.exr', 'HM_Seq03_Sh040_0025.exr', 'HM_Seq03_Sh040_0026.exr', 'HM_Seq03_Sh040_0027.exr', 'HM_Seq03_Sh040_0028.exr', 'HM_Seq03_Sh040_0029.exr', 'HM_Seq03_Sh040_0030.exr', 'HM_Seq03_Sh040_0031.exr', 'HM_Seq03_Sh040_0032.exr', 'HM_Seq03_Sh040_0033.exr', 'HM_Seq03_Sh040_0034.exr', 'HM_Seq03_Sh040_0035.exr', 'HM_Seq03_Sh040_0036.exr', 'HM_Seq03_Sh040_0037.exr', 'HM_Seq03_Sh040_0038.exr', 'HM_Seq03_Sh040_0039.exr', 'HM_Seq03_Sh040_0040.exr', 'HM_Seq03_Sh040_0041.exr', 'HM_Seq03_Sh040_0042.exr', 'HM_Seq03_Sh040_0043.exr', 'HM_Seq03_Sh040_0044.exr', 'HM_Seq03_Sh040_0045.exr', 'HM_Seq03_Sh040_0046.exr', 'HM_Seq03_Sh040_0047.exr', 'HM_Seq03_Sh040_0048.exr', 'HM_Seq03_Sh040_0049.exr', 'HM_Seq03_Sh040_0050.exr', 'HM_Seq03_Sh040_0051.exr', 'HM_Seq03_Sh040_0052.exr', 'HM_Seq03_Sh040_0053.exr', 'HM_Seq03_Sh040_0054.exr']\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. windows 10]\r\n - Host: [Hiero]\r\n - Using OpenPype 3.12.2\r\n\r\n**Additional context**\r\nUsing OpenPype 3.12.2\r\n\n\n[cuID:[OP-3709](https://app.clickup.com/t/2pe2wp9)]",
        "url": "https://github.com/ynput/OpenPype/issues/3626"
    },
    {
        "number": 3634,
        "title": "General: Improve the usability of \"Dependency\" tab of the Loader",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nThe \"Dependency\" loader will get more useful after #3629 and #3633. However, to easily trace from a selected version I'd recommend implementing some additional changes.\r\n\r\nThe current state:\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/183627949-5d598519-c7e7-467c-9524-df60b437efde.png)\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n- Allow to identify the Link type, e.g. color code, icon or tooltip based on whether the link is \"generative\" or \"reference\"\r\n- Allow to double click to 'go to' in the Loader. So that your asset+subset+version selection in the Loader changes to that Input/Output.\r\n- Potentially even \"visualize\" whether that 'input version' used is the latest version of that subset. So that you could select a PUBLISH and see from its Inputs that it's not publish using the latest input version.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nOf course better tooling to visualize the dependencies in general would be even better, like a node graph (e.g. [ReactFlow](https://reactflow.dev/)) or even just showing the recursive inputs/outputs in a hierarchy would be useful, like [this example of what we had used in one of our productions before OpenPype](https://github.com/getavalon/core/issues/395#issuecomment-778078006).\r\n\r\n\n\n[cuID:[OP-3715](https://app.clickup.com/t/2pkvzqz)]",
        "url": "https://github.com/ynput/OpenPype/issues/3634"
    },
    {
        "number": 3640,
        "title": "Ftrack process keeps running on tray crash",
        "body": " ## Description\r\nFtrack process keeps running when tray application crashes on windows. It seems to not process any ftrack events but is stuck there,\r\n\r\n## To Reproduce\r\n1. Run tray\r\n2. Kill the tray application (Has P icon without circle around) in windows tasks manager\r\n3. One OpenPype process will remain there\n\n[cuID:[OP-3718](https://app.clickup.com/t/2pm1dcb)]",
        "url": "https://github.com/ynput/OpenPype/issues/3640"
    },
    {
        "number": 3687,
        "title": "Unreal: decouple UIs to separate process",
        "body": " ## Description\r\n\r\nUE has the ability to have its python to be called remotely. This would allow us to run all UIs as separete processes that are comunicating with UE. We'll no longer need to install PySide2 to Unreal.\r\n\r\nThis is done for example [Unreal Blender Tools](https://github.com/EpicGames/BlenderTools)\n\n[cuID:[OP-3750](https://app.clickup.com/t/2r1ttun)]",
        "url": "https://github.com/ynput/OpenPype/issues/3687"
    },
    {
        "number": 3699,
        "title": "Repeated nested folders created when FTrack->Create Project Structure clicked and you have multiple roots",
        "body": " **Describe the bug**\r\nWhen you have multiple roots in your project anatomy (eg: publish, work, render), and click on `Create Project Structure` in FTrack's webUI, you will get repeated nested directories created in your folder. Example with ProjectName=`Blah` and 3 roots:\r\n\r\n```\r\n\u2514\u2500\u2500\u2500Blah\r\n    \u251c\u2500\u2500\u2500asset\r\n    \u251c\u2500\u2500\u2500editorial\r\n    \u251c\u2500\u2500\u2500prod\r\n    \u251c\u2500\u2500\u2500resources\r\n    \u2502   \u251c\u2500\u2500\u2500art_dept\r\n    \u2502   \u251c\u2500\u2500\u2500audio\r\n    \u2502   \u2514\u2500\u2500\u2500footage\r\n    \u2502       \u251c\u2500\u2500\u2500offline\r\n    \u2502       \u2514\u2500\u2500\u2500plates\r\n    \u2514\u2500\u2500\u2500Blah\r\n        \u251c\u2500\u2500\u2500asset\r\n        \u251c\u2500\u2500\u2500editorial\r\n        \u251c\u2500\u2500\u2500prod\r\n        \u251c\u2500\u2500\u2500resources\r\n        \u2502   \u251c\u2500\u2500\u2500art_dept\r\n        \u2502   \u251c\u2500\u2500\u2500audio\r\n        \u2502   \u2514\u2500\u2500\u2500footage\r\n        \u2502       \u251c\u2500\u2500\u2500offline\r\n        \u2502       \u2514\u2500\u2500\u2500plates\r\n        \u2514\u2500\u2500\u2500Blah\r\n            \u251c\u2500\u2500\u2500asset\r\n            \u251c\u2500\u2500\u2500editorial\r\n            \u251c\u2500\u2500\u2500prod\r\n            \u2514\u2500\u2500\u2500resources\r\n                \u251c\u2500\u2500\u2500art_dept\r\n                \u251c\u2500\u2500\u2500audio\r\n                \u2514\u2500\u2500\u2500footage\r\n                    \u251c\u2500\u2500\u2500offline\r\n                    \u2514\u2500\u2500\u2500plates\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a blank new project in OP's Admin Settings.\r\n2. Create multiple roots under `Default` : `project_anatomy/roots`, eg: `work`, `render`, `publish`\r\n3. Save and launch the FTrack webUI\r\n4. Create project (eg: `Blah`) and follow OP's instructions for initial setup\r\n5. Click on `Create Project Structure`\r\n6. Nested directories will be created (see above)\r\n\r\n**Expected behavior**\r\nOnly a single set of directories should be created.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: windows 10 pro\r\n - Host: FTrack?\r\n\r\n**Additional context**\r\nI tried to track the issue down to `openpype/lib/path_tools.py`, in `concatenate_splitted_paths()`, in the [__project_root__](https://github.com/pypeclub/OpenPype/blob/develop/openpype/lib/path_tools.py#L194) section, the first element of `clean_items` is replaced with **two** items for every `anatomy.roots` item. This means that the second `anatomy.roots` iteration will contain two `{project[name]}` elements, and the third iteration will contain 3, etc.\r\n\r\nA suggested fix would be to make a local copy of `clean_items` in that [for loop](https://github.com/pypeclub/OpenPype/blob/develop/openpype/lib/path_tools.py#L189), and use that cleanly on each iteration, similar to the attached patch file. \r\n\r\nThe attached file also contains the dump of the variables `split_paths` & `anatomy` to `concatenate_splitted_paths():`.\r\n\r\n[OpenPype_FTrack_Mutliple_Roots.zip](https://github.com/pypeclub/OpenPype/files/9391445/OpenPype_FTrack_Mutliple_Roots.zip)\n\n[cuID:[OP-3762](https://app.clickup.com/t/2rd25wt)]",
        "url": "https://github.com/ynput/OpenPype/issues/3699"
    },
    {
        "number": 3711,
        "title": "Loader: Hero versions won't update sync server state",
        "body": " ## Description\r\nLoader won't show sync server state of representations for hero version.\r\n\r\n## Additional information\r\nDiscovered in [PR](https://github.com/pypeclub/OpenPype/pull/3710). When hero version is set in loader the representaion information are not updated https://github.com/pypeclub/OpenPype/pull/3710/files/c393105e2502ed4b9dba95aa2a49cefbd849c2a0#diff-95c0349ee7e37b79aa6c91f21c6237cabef8e951dcf2ddb58bb8cd3abefa1e76R264\r\n\r\nAlso it would be maybe good idea to remove representations infor from the row if repre info is not returned (not sure if that can happen?).\r\n\r\n[cuID:[OP-3815](https://app.clickup.com/t/2rjrwcw)]",
        "url": "https://github.com/ynput/OpenPype/issues/3711"
    },
    {
        "number": 3769,
        "title": "Publisher: crash if subset name is missing",
        "body": " ## Bug\r\n\r\nNew publisher is crashing if subset name is missing from instance data. Resulting in following visual glitch:\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/187716361-73a62ce9-7469-47f9-a2a4-befba7c973b9.png)\r\n\r\n<details>\r\n  <summary><strong>Traceback</strong></summary>\r\n<pre>\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\window.py\", line 270, in showEvent\r\n    self.reset()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\window.py\", line 277, in reset\r\n    self.controller.reset()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\control.py\", line 586, in reset\r\n    self._reset_instances()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\control.py\", line 615, in _reset_instances\r\n    self._trigger_callbacks(self._instances_refresh_callback_refs)\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\control.py\", line 566, in _trigger_callbacks\r\n    callback(*args, **kwargs)\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\window.py\", line 410, in _on_instances_refresh\r\n    self._refresh_instances()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\window.py\", line 401, in _refresh_instances\r\n    view.refresh()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\widgets\\card_view_widgets.py\", line 488, in refresh\r\n    group_widget.update_instances(\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\widgets\\card_view_widgets.py\", line 135, in update_inst\r\nances\r\n    widget = InstanceCardWidget(\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\widgets\\card_view_widgets.py\", line 274, in __init__\r\n    self.update_instance_values()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\widgets\\card_view_widgets.py\", line 327, in update_inst\r\nance_values\r\n    self._update_subset_name()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\widgets\\card_view_widgets.py\", line 311, in _update_sub\r\nset_name\r\n    label = html_escape(self.instance.label)\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\utils\\lib.py\", line 45, in html_escape\r\n    text\r\nAttributeError: 'NoneType' object has no attribute 'replace'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\window.py\", line 344, in _on_change_view_clicked\r\n    self._change_view_type()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\window.py\", line 307, in _change_view_type\r\n    new_view.refresh()\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\widgets\\list_view_widgets.py\", line 703, in refresh\r\n    widget = InstanceListItemWidget(\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\publisher\\widgets\\list_view_widgets.py\", line 117, in __init__\r\n    instance_label = html_escape(instance.label)\r\n  File \"C:\\Users\\annat\\Documents\\pype\\3.0\\openpype\\tools\\utils\\lib.py\", line 45, in html_escape\r\n    text\r\nAttributeError: 'NoneType' object has no attribute 'replace'\r\n</pre>\r\n</details>\n\n[cuID:[OP-3866](https://app.clickup.com/t/2tfanhf)]",
        "url": "https://github.com/ynput/OpenPype/issues/3769"
    },
    {
        "number": 3781,
        "title": "Deadline: Avoid submitting along OPENPYPE_LOG_NO_COLORS",
        "body": " **Describe the issue**\r\n\r\nCurrently Deadline submissions pass along `OPENPYPE_LOG_NO_COLORS` per host per job as `EnvironmentKeyValue` in the Job's info. However Deadline Job log viewer doesn't support custom coloring so all jobs running through Deadline should run with `OPENPYPE_LOG_NO_COLORS=1`\r\n\r\n**Proposal**\r\n\r\nI propose to remove submitting along `OPENPYPE_LOG_NO_COLORS` per job but instead set `OPENPYPE_LOG_NO_COLORS=1` in the `GlobalJobPreLoad.py` of the Deadline module whenever it has detected that it's running a OpenPype job.\r\n\r\nThis would reduce the data send per jobs + reduce the logic required per submission.\r\n\r\n**Additional Info**\r\n\r\nBrought up on [OpenPype Discord here](https://discord.com/channels/517362899170230292/563751989075378201/1015203427057401878)\r\n\r\n[cuID:[OP-3897](https://app.clickup.com/t/2tn4agv)]",
        "url": "https://github.com/ynput/OpenPype/issues/3781"
    },
    {
        "number": 3788,
        "title": "Maya: Extract Skeletal Mesh for Unreal - invalid asset name",
        "body": " ## Bug\r\n\r\nduring extraction we are putting stuff together to make common root. This root is named with asset name. Problem is when asset name contains invalid character that Maya can't use - extraction will then fail.\r\n\r\n## Solution\r\n\r\nWe need to validate it here:\r\nhttps://github.com/pypeclub/OpenPype/blob/9a25e97a13fbc7a5826fabd2ec0d7c9901054f7e/openpype/hosts/maya/plugins/publish/extract_unreal_skeletalmesh.py#L62\n\n[cuID:[OP-3899](https://app.clickup.com/t/2tuvt5d)]",
        "url": "https://github.com/ynput/OpenPype/issues/3788"
    },
    {
        "number": 3791,
        "title": "Build flags to control inclusion of vendor binaries, customizable paths in Settings",
        "body": " ## Feature\r\n\r\nWe should introduce build flags to control what binaries should be included in build and add paths to settings to set custom path to ffmpeg/oiio/... Main goal is to save size between compatible versions.\n\n[cuID:[OP-3900](https://app.clickup.com/t/2tuwue8)]",
        "url": "https://github.com/ynput/OpenPype/issues/3791"
    },
    {
        "number": 3796,
        "title": "Maya: Vray Scene creator fails",
        "body": " **Describe the bug**\r\nMaya Vray Scene creator fails \r\n\r\n\r\n```\r\n\r\nFailed to create Subset: \"vraysceneMain\" Family: \"vrayscene\" in Asset: \"sh010\"\r\n\r\nError: Unsupported type: <class 'dict_keys'>\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\REPO\\OpenPype\\openpype\\tools\\creator\\window.py\", line 432, in _on_create\r\n    data={\"variant\": variant}\r\n  File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\create\\legacy_create.py\", line 196, in legacy_create\r\n    instance = plugin.process()\r\n  File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\plugins\\create\\create_vrayscene.py\", line 81, in process\r\n    self.instance = super(CreateVRayScene, self).process()\r\n  File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\api\\plugin.py\", line 96, in process\r\n    lib.imprint(instance, self.data)\r\n  File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\api\\lib.py\", line 426, in imprint\r\n    raise TypeError(\"Unsupported type: %r\" % type(value))\r\nTypeError: Unsupported type: <class 'dict_keys'>\r\n```\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: windows\r\n - Host: Maya 2022\r\n\r\n\r\n\n\n[cuID:[OP-3911](https://app.clickup.com/t/2u0h4ph)]",
        "url": "https://github.com/ynput/OpenPype/issues/3796"
    },
    {
        "number": 3797,
        "title": "Ftrack: Sync sets assets data as None",
        "body": " **Describe the bug**\r\n\r\nI created a new Mongo database, created a new Project in Ftrack, synced a project from Ftrack, launched Maya then tried to publish a model. It failed.\r\n\r\nIt fails on Validate Maya Units with **Scene must be None FPS (now is 25.0)**.\r\n\r\nRepair errors on:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"S:\\openpype\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"S:\\openpype\\OpenPype\\openpype\\action.py\", line 90, in process\r\n    plugin.repair(context)\r\n  File \"S:\\openpype\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\validate_maya_units.py\", line 99, in repair\r\n  File \"S:\\openpype\\OpenPype\\openpype\\hosts\\maya\\api\\lib.py\", line 2087, in set_scene_fps\r\n    dec, ipart = math.modf(fps)\r\nTypeError: must be real number, not NoneType\r\n```\r\n\r\nIt seems the Asset has synced with the following data as None.\r\n**The syncing reported no errors.**\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/188644158-2e9afcac-4762-4a77-8a61-a0b239c50569.png)\r\n\r\n---\r\n\r\nLikely the issue is related to not having pressed \"Ftrack > Actions > Prepare Project\" because doing:\r\n\r\n1. Prepare Project\r\n2. Sync to OpenPype\r\n3. Now data is synced.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Create a new project in Ftrack\r\n4. Add an asset + task\r\n5. Right click on the project, Admin Actions -> Sync to OpenPype\r\n\r\n**Expected behavior**\r\n\r\nSyncing should error and tell me how to solve it - e.g. highlight that I should be doing `Prepare Project` instead of syncing  broken assets.\r\n\r\n\r\n\r\n[cuID:[OP-3912](https://app.clickup.com/t/2u0j1be)]",
        "url": "https://github.com/ynput/OpenPype/issues/3797"
    },
    {
        "number": 3800,
        "title": "Publish: Allow to disable printing logs to host",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to disable Pyblish (and potentially even OpenPype Logger logs during publishing) printing its logs into the Host DCC (e.g. Maya) as a setting when running the Pyblish UI.\r\n\r\n**Describe the solution you'd like**\r\n\r\nBe able to set e.g. a `OPENPYPE_PRINT_PYBLISH_LOGS=0` or an equivalent setting to disable the printing to `stderr`. The logs should still get collected and handled by the UI. I'd only like to have it **not** propagate its logs into the host DCC.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI've tried disabling the propagating of the Pyblish loggers like this:\r\n```python\r\nimport logging\r\n\r\nlog = logging.getLogger(\"pyblish\")\r\nlog.propagate = False\r\n```\r\n\r\nBut that also avoids the Pyblish Pype UI to actually capture the logs. Note that the original Pyblish QML does work with propagate disabled - there the logs still get handled by the UI regardless.\r\n\r\n**Additional context**\r\n\r\nPrinting in the Maya script editor has always been relatively slow - and during publishing there's relatively quite a high amount of logging/printing being done. I'd like to try and avoid the clutter in the Script Editor and at the same time likely optimize the publishing steps too.\r\n\r\nEspecially with the new publisher UI coming up the logs are much easier to debug per instance in the UI - better than the printed logs into the host DCC would allow for debugging.\r\n\r\n[First mentioned on OpenPype discord here](https://discord.com/channels/517362899170230292/563751989075378201/1016985924392992828)\r\n\r\n---\r\n\r\nOf course would also love to know if this is a bad idea to begin with. :)\n\n[cuID:[OP-3914](https://app.clickup.com/t/2u0r29k)]",
        "url": "https://github.com/ynput/OpenPype/issues/3800"
    },
    {
        "number": 3801,
        "title": "Tray publisher: adding FileItem flags",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAt the moment we are able to show a context menu with actions available in file inputs. To be able to mark some representation as renewable or thumbnail, we should drop it to the second drop area. \r\n\r\n**Describe the solution you'd like**\r\nIt would be cool if we could right button on any file item and select `use for Review` or `use of thumbnail`. Some sort of icon on the file item would appear to indicate it was marked. Similarly, if it is already marked the context menu action would change to `clear Review` or `clear Thumbnail`.\r\n\r\n**Describe alternatives you've considered**\r\nWe could introduce buttons on the File item which would let us make it visually. Also the possibility mark multiple items would be allowed depending on selected family.\r\n\r\n**Additional context**\r\n![image](https://user-images.githubusercontent.com/40640033/188833626-8db8191a-7305-4625-8859-92e6cbbf0321.png)\r\n\n\n[cuID:[OP-3916](https://app.clickup.com/t/2u0r8c4)]",
        "url": "https://github.com/ynput/OpenPype/issues/3801"
    },
    {
        "number": 3802,
        "title": "Publisher: add file browser",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAt the moment the only way to add files to traypublisher is by dropping them to dedicated are. \r\n\r\n**Describe the solution you'd like**\r\nDropping area could have a button with `Add files`. The browser would offer two modes `Collapsed sequences` and uncollapsed. \r\n\r\n**Additional context**\r\n![image](https://user-images.githubusercontent.com/40640033/188848188-7708d035-861b-4248-9a66-3e418675b5f8.png)\r\n\r\n\r\n[cuID:[OP-3917](https://app.clickup.com/t/2ubynxx)]",
        "url": "https://github.com/ynput/OpenPype/issues/3802"
    },
    {
        "number": 3803,
        "title": "Ftrack: Integrate components runs slow ffprobe over all files",
        "body": " **Describe the bug**\r\n\r\nWhen ftrack module is enabled it appears that all files to be published go through a subprocess `ffprobe` to query video metadata from the file. However, it will also try to do this for workfiles, alembic files, usd files, etcetera - even though we're sure upfront those files are not video files.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Enable Ftrack\r\n2. Publish a pointcache\r\n3. Note how ffprobe triggers during **Integrate Ftrack Component**\r\n\r\n**Expected behavior**\r\n\r\nThe slow `ffprobe` lookup should only happen to files we potentially suspect to be video files and should thus skip files for which we're pretty sure the aren't video files.\r\n\r\nThis would speed up publishing a lot.\r\n\n\n[cuID:[OP-3918](https://app.clickup.com/t/2ubyxpy)]",
        "url": "https://github.com/ynput/OpenPype/issues/3803"
    },
    {
        "number": 3818,
        "title": "Settings: Propagate project settings to multiple other projects quickly",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nThe Studio Settings UI is relatively slow to update and switch projects which if you want to update some settings on many projects is a very tedious process. It happens quite frequently that we've decided to tweak some settings which are applicable to multiple projects.\r\n\r\nHaving to go one by one (with so much waiting inbetween!) is really tedious and frustrating. So less of:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/189238822-5ec70b06-7294-4cd1-9d0a-b71c8a8e5554.png)\r\n\r\n**Describe the solution you'd like**\r\n\r\nFirst off, a faster Settings UI would go a long way already but that's likely non-trivial. (Any easy fixes?)\r\n\r\nBut I think a right click -> \"Copy values to...\" menu entry which allows quickly transferring settings to many other projects would be very nice. Or loading from an external extracted file of the settings to many projects could also be fine.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nDoing it one by one and pulling my hair out.\r\n\r\n**Additional context**\r\n\r\n[Mentioned on OpenPype discord](https://discord.com/channels/517362899170230292/517382145552154634/1017563942995894272)\r\n\r\n\r\n[cuID:[OP-3946](https://app.clickup.com/t/2uhrc71)]",
        "url": "https://github.com/ynput/OpenPype/issues/3818"
    },
    {
        "number": 3824,
        "title": "Cosmetics: Refactor \"frameStartFtrack\" to be less ftrack-specific",
        "body": " **Describe the issue**\r\n\r\nMaya's collect review collects the start frame and end frame into `frameStartFtrack` and `frameEndFtrack` and the `ExtractPlayblast` uses the same. Even though that logic can also be used without ftrack. As such the naming convention is confusing.\r\n\r\nSomething similar happens in Standalone Publisher where it collects to `frameStartFtrack` as well for Editorial Resources.\r\n\r\nI'm not entirely sure why it's not using the regular `frameStart` and `frameEnd` but I assume that might have to do with the \"attachTo\" functionality of reviews in Maya to preserve the review's start/frame separate from the start and end frame of what it is attaching to.\r\n\r\nWe might want to refactor it to sound more generic and potentially accompany it with a comment in the code as to why we're not using the regular `frameStart` and `frameEnd` that other instances use.\n\n[cuID:[OP-3954](https://app.clickup.com/t/2uhvquh)]",
        "url": "https://github.com/ynput/OpenPype/issues/3824"
    },
    {
        "number": 3827,
        "title": "Traypublisher: plate publish",
        "body": " **Describe the bug**\r\nIf shot selected in context is having frame range 1001-1100 and image sequence is dropped with 900-2000; published version data in loader are showing framerange inherited from original shot frame range instead of the source clip. So loader is displaying 1001-1100 but data on disk are written as 900-2000. This is causing issues in Nuke clip loader. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to Tray publisher\r\n2. Define context of project and shot hierarchy\r\n3. Set family to Plate\r\n4. drop any image frame range which you are sure is different from the shot frame range\r\n5. publish\r\n6. open Nuke workfile and Loader at the context of published shot\r\n7. Notice the frame range is wrong\r\n\r\n**Expected behavior**\r\nFramerange should be inherited from source image sequence\r\n\n\n[cuID:[OP-3949](https://app.clickup.com/t/2uhwc8g)]",
        "url": "https://github.com/ynput/OpenPype/issues/3827"
    },
    {
        "number": 3830,
        "title": "Cinema4D Host Integration",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nCurrently Cinema4D is not a supported host with OpenPype.\r\n\r\n**Describe the solution you'd like**\r\nWork towards full support of C4D.\r\n\r\n**Describe alternatives you've considered**\r\nConvincing the studio to switch to Maya :|  .\r\n\r\n**Additional context**\r\nI have started work on putting together a host integration. PR coming soon.\r\n\r\n![image](https://user-images.githubusercontent.com/29129252/189768866-b34785fb-f18d-473f-a2e3-4b3c2bceffae.png)\r\n![image](https://user-images.githubusercontent.com/29129252/189769151-da87d0aa-f6f3-411a-936f-b6e5b1380cf6.png)\r\n![image](https://user-images.githubusercontent.com/29129252/189769187-fe3ef9ed-edee-480f-ac24-9a3934f32b2f.png)\r\n![image](https://user-images.githubusercontent.com/29129252/189769345-e44c65f3-482e-442c-b83b-f3366820ab4c.png)\r\n![image](https://user-images.githubusercontent.com/29129252/189769385-a8bf2ba4-1cf2-4243-8999-c0bbfc619347.png)\r\n\r\n\n\n[cuID:[OP-3962](https://app.clickup.com/t/2v2vzm7)]",
        "url": "https://github.com/ynput/OpenPype/issues/3830"
    },
    {
        "number": 3835,
        "title": "Ftrack: Don't set FTRACK_SERVER environment variable",
        "body": " ## Short Description\r\nDon't set `FTRACK_SERVER` environment variable on openpype process start and don't be dependent on it in code.\r\n\r\n## Description\r\nAt all places where we're dependent on environment variable `FTRACK_SERVER` should be passed ftrack url to session arguments received from ftrack module instead of using the env variable (probably except farm).\r\n\r\n## Additional context\r\nRelated to [PR](https://github.com/pypeclub/OpenPype/pull/3834) which changed how ftrack url is received. It requires access to `requests` module and connection to server which is called on openpype process start.\r\n\n\n[cuID:[OP-3964](https://app.clickup.com/t/2v2y59v)]",
        "url": "https://github.com/ynput/OpenPype/issues/3835"
    },
    {
        "number": 3842,
        "title": "Repack-version: exclude .pyc and __pycache__",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAny time client requires some patch done in their studio production version it needs to be cleared of all python cached files. It is annoying to do it manually if this can be added to the __repack-version__ function.\r\n\r\n**Describe the solution you'd like**\r\nAny time repack-version is used, it would exclude `.pyc` files and also `__pycache__` folders. This can happen just before it calculates `checksums` (that is what @antirotor told me ;).\r\n\n\n[cuID:[OP-3967](https://app.clickup.com/t/2v8hxdm)]",
        "url": "https://github.com/ynput/OpenPype/issues/3842"
    },
    {
        "number": 3844,
        "title": "Burnin: Extract burnin fails with brackets [] in settings template",
        "body": " **Describe the bug**\r\n\r\nThe Extract Burnin fails when the user adds a `[` or `]` into the template.\r\nFor example like this:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/190125057-3e105031-81c4-46d3-ba35-69752bddd11b.png)\r\n```\r\n{current_frame} [{frame_start}-{frame_end}]\r\n```\r\n\r\nIn this setting:\r\n```\r\nproject_settings/global/publish/ExtractBurnin/profiles/0/burnins/burnin/BOTTOM_RIGHT\r\n```\r\n_But would apply to all of the burnin areas I assume._ \r\n\r\n**To Reproduce**\r\n\r\n1. Apply `[` or `]` as described in OpenPype settings for the project\r\n2. Publish a review from Maya with burnins\r\n3. Burnin will error.\r\n\r\n**Expected behavior**\r\n\r\nSpecial characters should get escaped accordingly\r\n\r\n**Additional context**\r\n\r\nWe might need to consider other special characters to and escape them accordingly.\r\n\r\n[Mentioned on OpenPype discord here](https://discord.com/channels/517362899170230292/517382145552154634/1019528969860689950)\r\n\r\n\r\n[cuID:[OP-3968](https://app.clickup.com/t/2v8jc46)]",
        "url": "https://github.com/ynput/OpenPype/issues/3844"
    },
    {
        "number": 3857,
        "title": "Loader: Add plug-in which shows once per version instead of per representation",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nThe \"Set Frame Range\" actions allow you to match scene frame range to those of the published version. Now, like any loader, it matches against representations and families.\r\n\r\nI currently link those to the families that I know have time values, like `review`, `pointcache`, `vdbcache`, etc. with `representations = [\"*']` - however if a publish has more than a single representation it will show multiple times.\r\n\r\nHere's a screenshot of the problem:\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/190370236-fc918da2-19d5-438d-95a2-c9c6b0fb1152.png)\r\n\r\nI'd prefer this to just show as:\r\n\r\n- Set Frame Range\r\n- Set Frame Range (with handles)\r\n- Copy Files\r\n- Copy Filepaths\r\n\r\n_Instead of being per representation_\r\n\r\n**Describe the solution you'd like**\r\n\r\nBe able to create a Loader that will show at most once in the list, unrelated to the representation, so like `SubsetLoader` but then a `VersionLoader`?\r\n\r\n**Describe alternatives you've considered**\r\n\r\nEven better if it could implement a `is_compatible` check on the plug-in itself to check against the version to see if it has time data and if so, only then show. But for now linking it to families you know have time values would be fine.\r\n\r\nAlso, there already exists a **SubsetLoader** which shows once and will run against the subset. But I'd like to run against the actual version that is shown in the loader (which as far as I know the SubsetLoader doesn't do).\r\n\n\n[cuID:[OP-4005](https://app.clickup.com/t/2v8t7nt)]",
        "url": "https://github.com/ynput/OpenPype/issues/3857"
    },
    {
        "number": 3861,
        "title": "Extract otio file plugin must have specific filters",
        "body": " ## Describtion\r\nBug is related to hot fix PR https://github.com/pypeclub/OpenPype/pull/3856 . At this moment is plugin `openpype/plugins/publish/extract_otio_file.py` processed on all instances with `workfile` family in `hiero`, `resolve` and `traypublisher`, which cause issues in traypublisher where workfile is related to otio only for editorial publishing.\r\n\r\n## Suggested solution\r\nThe family filter should be changed from `workfile` to something very specific like `otio.timeline`. All instances that should be processed by this plugin should have the family in `instace.data[\"families\"]`.\n\n[cuID:[OP-4053](https://app.clickup.com/t/2v8u1zk)]",
        "url": "https://github.com/ynput/OpenPype/issues/3861"
    },
    {
        "number": 3866,
        "title": "Publisher: Show logs with warning and higher level",
        "body": " ## Description\r\nAt this moment Publisher has no way how to show warnings in the UI which in some cases can be important.\n\n[cuID:[OP-4059](https://app.clickup.com/t/2vecte9)]",
        "url": "https://github.com/ynput/OpenPype/issues/3866"
    },
    {
        "number": 3868,
        "title": "Deadline: only explicit submission parameters are propagated",
        "body": " **Describe the bug**\r\n\r\nAs Deadline changed the behavior of automated submissions and only explicit submission attributes are included and visible in job properties. \r\nIt is extremely useful to have these parameters available to fine-tune jobs on the farm.\r\n\r\nExample of Nuke job submitted via OpenPype\r\n![image](https://user-images.githubusercontent.com/352795/190632692-0a652775-9b90-4ea0-a8af-deea8c3fa987.png)\r\n\r\nExample of Nuke job submitted via Deadline:\r\n![image](https://user-images.githubusercontent.com/352795/190632767-47b47047-9bc4-4db9-a46c-cb19e06c9be1.png)\r\n\r\n\r\n\r\nMost probably we need to provide just empty parameters during publish, which will be filled with some default values by Deadline.\r\n\r\nAgain it is easy to compare OpenPype vs. Deadline parameters:\r\n\r\nOpenPype\r\n![image](https://user-images.githubusercontent.com/352795/190634382-b22c9bf4-ef47-422f-9eba-a1694b3d6436.png)\r\n\r\nDeadline\r\n![image](https://user-images.githubusercontent.com/352795/190634066-d890a11b-53de-427c-a72c-9f76e51aa7f0.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\nThis is applicable to any host to Deadline submission, not only Nuke . . .\r\n\n\n[cuID:[OP-4079](https://app.clickup.com/t/2veec0e)]",
        "url": "https://github.com/ynput/OpenPype/issues/3868"
    },
    {
        "number": 3876,
        "title": "Unreal: Render creator expects fixed asset structure",
        "body": " ## Bug\r\n\r\nRender creator in Unreal expects that assets sits on third level of hierarchy:\r\n\r\nhttps://github.com/pypeclub/OpenPype/blob/d8d53d5587c9e17eccb29d8b66b1bccf1374b0c2/openpype/hosts/unreal/plugins/create/create_render.py#L24-L29\r\n\r\nBut that might not be the case. For example asset structure like\r\n\r\n`<Project>/Assets/Environments/Street` will have it (in Unreals Context Browser) here `/Content/OpenPype/Assets/Environments/Street`\r\n\r\nBecause of this, creator will fail as it cannot find level sequencer on this depth.\r\n\r\n### Possible solutions:\r\n\r\nMaybe we could scan all assets, find all level sequencers and try to match them to levels with specific asset name/paths.\n\n[cuID:[OP-4082](https://app.clickup.com/t/2vefrn6)]",
        "url": "https://github.com/ynput/OpenPype/issues/3876"
    },
    {
        "number": 3883,
        "title": "Traypublisher: app launcher",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nAt the moment the only way to work with traypublisher is by launching it from tray, set project, set context, set family. We could user Launcher for most of those tasks. \r\n\r\n**Describe the solution you'd like**\r\nThe user would open launcher and set it in the context on task. App launcher `TrayPublisher` would be offered. Once user click on it it will open a submenu with family selection (similarly as app version selection). Once the user confirms the family selection, traypublisher launched with already selected context and family. \r\n\n\n[cuID:[OP-4109](https://app.clickup.com/t/2vm69h3)]",
        "url": "https://github.com/ynput/OpenPype/issues/3883"
    },
    {
        "number": 3890,
        "title": "Maya: ValidateRenderSettings can fail on float values",
        "body": " **Running version**\r\n3.12.2\r\n\r\n**Describe the bug**\r\nWhen validating Vray Render Attibutes that have a float value, the validation can fail because of precision errors.\r\n\r\nExample error message:\r\n`Invalid value 2.200000047683716 set on vraySettings.cmap_gamma. Expecting 2.2`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Configure project_settings/maya/publish/ValidateRenderSettings/vray_render_attributes with VRaySettingsNode.map_gamma and a value of 2.2.\r\n2. Create a render scene in Maya.\r\n3. Create a render family...\r\n4. ...and try to run validation.\r\n\r\n**Expected behavior**\r\nScene should validate.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Host: Maya 2022\r\n - Plugin: V-Ray 5.20.02\n\n[cuID:[OP-4133](https://app.clickup.com/t/2vzkkgm)]",
        "url": "https://github.com/ynput/OpenPype/issues/3890"
    },
    {
        "number": 3898,
        "title": "Tile Assembly Job has wrong Pool",
        "body": " **Running version**\r\n3.12.2\r\n\r\n**Describe the bug**\r\nTile assembly jobs in Deadline don't get the assigned to the pool configured in Maya or in `project_settings/deadline/publish/ProcessSubmittedJobOnFarm`. They always end up in _none_. \r\n\r\n**To Reproduce**\r\n1. Submit a tile rendering to Deadline from Maya.\r\n2. Check the assigned pools of the tile assembly job\r\n\r\n**Expected behavior**\r\nThe tile assembly job should get assigned to the pool configured in Maya or in `project_settings/deadline/publish/ProcessSubmittedJobOnFarm`. Or there could be an extra setting to configure the tile assembly pool.\r\n\r\n**Screenshots**\r\n![deadlinemonitor_ftT6zdroko](https://user-images.githubusercontent.com/1325124/191912158-3bf8661f-9acd-44cd-a0d6-b9fb61014264.png)\r\n![deadlinelauncher_n5LBqywzt0](https://user-images.githubusercontent.com/1325124/191912177-e2feeda6-e60b-4f0b-9be2-ed933c4cd0ad.png)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Host: Maya, Deadline\n\n[cuID:[OP-4140](https://app.clickup.com/t/2w5bxfd)]",
        "url": "https://github.com/ynput/OpenPype/issues/3898"
    },
    {
        "number": 3922,
        "title": "TVPaint: an instance is created on the timeline when we click on an OP button",
        "body": " **Running version**\r\n3.14.2\r\n\r\n**Describe the bug**\r\nInside TVPaint, when the OP menu is open and we click on Workfiles or Publish or whatever, an instance is automatically created on the timeline.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open the OP menu in TVPaint\r\n2. Click on Workfiles (or any other button)\r\n3. An instance is created on the timeline at the current frame\r\n\r\n**Expected behavior**\r\nDon't create any instance when we click on an OP button\r\n\r\n**Screenshots**\r\nHere is the timeline before I click on any OP button:\r\n![image](https://user-images.githubusercontent.com/51854004/192532298-5aea88ce-5815-4b4f-b2ec-5c5ddfd17a83.png)\r\n\r\nHere is the timeline after I clicked on Create (or any other OP button):\r\n![image](https://user-images.githubusercontent.com/51854004/192532456-bf669c4f-662e-411d-9540-e1c3c8c73617.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 10\r\n - Host: TVPaint\r\n\r\n\r\n[cuID:[OP-4155](https://app.clickup.com/t/2wpbba3)]",
        "url": "https://github.com/ynput/OpenPype/issues/3922"
    },
    {
        "number": 3966,
        "title": "Implement profiles for ValidateVersion",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nValidateVersion currently runs only on hardcoded set of hosts (which implement workfile version number synch). It might be beneficial to run this plugin all the time and enable/disable it with profiles (host + family + subset etc).\r\n\r\n**Describe the solution you'd like**\r\n- Update `ValidateVersion` to be able to run in all hosts.\r\n- Provide filtering profiles (host, family?, task?, subset?)\r\n\r\n**Describe alternatives you've considered**\r\nAccording to Kuba naive solution https://github.com/pypeclub/OpenPype/pull/3960 is not correct, as someone might have overrides on the applicable Settings which will result in defaults not engaging or some plugins might not work for particular hosts and control that just by Settings is dangerous. (Probably not case of ValidateVersion.)\r\n\r\nCurrent implementation of `ValidateVersion` cannot also be run for all host safely (probably - possible None issue when `instance.data.get(\"version\")` is empty).\r\n\r\n\n\n[cuID:[OP-4220](https://app.clickup.com/t/2ynarrt)]",
        "url": "https://github.com/ynput/OpenPype/issues/3966"
    },
    {
        "number": 3967,
        "title": "Rework CollectAnatomyInstanceData.follow_workfile_version to separate plugin",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nBoolean configuration of `follow_workfile_version` directly in CollectAnatomyInstanceData is quite dangerous and would break some existing workflows.\r\n\r\n**Describe the solution you'd like**\r\nIt might make a sense to yank this out into separate plugin, profile filtering profiles to it, run this all the time (probably after `CollectAnatomyInstanceData` or at least after version number is collected from workfile ).\r\n\r\nThis way we could get functionality of \"synchronization of workfile version\" (eg. everything published from workfile has same version number >> locating all items is easier) everywhere (currently only in maya, nuke, PS, AE, houdini, blender)\r\n\r\nAdditional discussion here https://github.com/pypeclub/OpenPype/pull/3854\r\n\n\n[cuID:[OP-4221](https://app.clickup.com/t/2ynatk8)]",
        "url": "https://github.com/ynput/OpenPype/issues/3967"
    },
    {
        "number": 3969,
        "title": "Settings: confusing message",
        "body": " ## Problem\r\n\r\nWhen running Settings with the same version but slightly different content (for example during development), settings shows this confusing message:\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/195300867-75913fc9-5872-475b-be21-f0893b2810bb.png)\r\n\r\nNote that in this case version is not older, it's just different.\n\n[cuID:[OP-4222](https://app.clickup.com/t/2yndxxe)]",
        "url": "https://github.com/ynput/OpenPype/issues/3969"
    },
    {
        "number": 3984,
        "title": "Maya: extract review with handles wrong frame start",
        "body": " **Running version**\r\n3.14.4-nightly.3 (code)\r\n\r\n**Describe the bug**\r\n\r\nwhen using `Skip handle frames` in Extract review\r\n\r\n![image](https://user-images.githubusercontent.com/352795/195799533-7e31d5b4-a159-4c75-8c09-a4fdce61da39.png)\r\n\r\n\r\nfor a shot with handles\r\n\r\n![image](https://user-images.githubusercontent.com/352795/195801524-fc95fa51-eb25-4b86-a7fb-039a56afadc5.png)\r\n\r\n\r\nthe resulting playblast is shifted in time by amount of Handle Start\r\n\r\n![image](https://user-images.githubusercontent.com/352795/195801119-97469be7-34a9-410c-a56d-23dbf2a3b68a.png)\r\n\r\n\r\n**Expected behavior**\r\n\r\nplayblast should match the expected FrameStart\r\n\r\n\r\nspecial care should be taken in the case when you set the extract review to produce 2 playblasts at once, one with handles and one without\r\n\r\n\r\n[cuID:[OP-4237](https://app.clickup.com/t/2z0rtb9)]",
        "url": "https://github.com/ynput/OpenPype/issues/3984"
    },
    {
        "number": 3991,
        "title": "Maya Instanced geometry support in ```model``` subset / Validator",
        "body": " When trying to publish ```model``` family I get validation errors because of non-unique IDs of the geometries which shares its ```ShapeNode``` due to instance nature of them using Maya ```DuplicateSpecial``` function with geometry type se to ```Instance```\r\n\r\n![image](https://user-images.githubusercontent.com/112623825/196110651-4a034fdb-31e8-4b70-b8b2-91ec5d393c2d.png)\r\n\r\nInstancing in maya being crucial function and should be supported at least on a model level (look should be applied normally just multiple times I guess because of the same ```shapeNode``` and object ID...\r\n\r\n\r\n\n\n[cuID:[OP-4240](https://app.clickup.com/t/2z6gmq2)]",
        "url": "https://github.com/ynput/OpenPype/issues/3991"
    },
    {
        "number": 3997,
        "title": "Reference limit",
        "body": " there is a (probably) unintentional limit of 99 counts in UI of Reference abc and ma options in Loader\r\n\r\n![image](https://user-images.githubusercontent.com/352795/196227720-e287404b-1bc1-48de-8973-0f33ac7d30af.png)\r\n\r\n\n\n[cuID:[OP-4249](https://app.clickup.com/t/2zc6gkc)]",
        "url": "https://github.com/ynput/OpenPype/issues/3997"
    },
    {
        "number": 4013,
        "title": "Tray Publisher: Show last available version",
        "body": " ## Feature\r\n\r\nOld standalone publisher showed last published version on selected context:\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/196960296-eadd96cd-bafe-4008-9e23-30bd706efa58.png)\r\n\r\nThis is feature missing in Tray Publisher\n\n[cuID:[OP-6736](https://app.clickup.com/t/861najw89)]",
        "url": "https://github.com/ynput/OpenPype/issues/4013"
    },
    {
        "number": 4024,
        "title": "Publisher: Auto-create plugins are not reloaded on reset",
        "body": " ## Bug\r\n\r\nWhen Publisher reloads, code for auto-creator plugins is not refreshed/reloaded.\r\n\n\n[cuID:[OP-4293](https://app.clickup.com/t/30egjhu)]",
        "url": "https://github.com/ynput/OpenPype/issues/4024"
    },
    {
        "number": 4028,
        "title": "Extract Review can create empty video",
        "body": " ## Describe the bug\r\nIt seems that we can force ffmpeg to create empty video file without any streams. It happenede when a single file was extracted from maya and exclude handles was enabled. The theory is that ffmpeg created a movie file without any frames thus an empty container was created.\r\n\r\n## To Reproduce\r\n1.  Add `Skip handle frames` tag in `project_settings/global/publish/ExtractReview/profiles/0/outputs/h264/tags`\r\n\r\n![image](https://user-images.githubusercontent.com/352795/197730870-283d1f5f-99e5-402e-b095-28f712958e34.png)\r\n\r\n2. set review instance to produce 1 frame output\r\n\r\n![image](https://user-images.githubusercontent.com/352795/197731565-40baaaf0-78a3-4b4b-8d81-e8de741c3718.png)\r\n\r\n \r\n\r\n\r\n## Expected behavior\r\nAn error should be raised during extract review.\r\n\r\n\r\n[cuID:[OP-4300](https://app.clickup.com/t/30emnnr)]",
        "url": "https://github.com/ynput/OpenPype/issues/4028"
    },
    {
        "number": 4035,
        "title": "Houdini: Switching context doesn't update variables",
        "body": " ## Bug\r\n\r\nWhen switching context in Houdini, sometimes `$HIP`/`$JOB` are not updated.\n\n[cuID:[OP-4326](https://app.clickup.com/t/30u2296)]",
        "url": "https://github.com/ynput/OpenPype/issues/4035"
    },
    {
        "number": 4036,
        "title": "Publisher: Plugin actions not logging or showing result",
        "body": " **Running version**\r\n3.14.6-nightly.1\r\n\r\n**Describe the bug**\r\nWhen the **Repair** button pushed at a failed validator on new publisher is used, nothing is signalizing information that it had fixed it and I need to reload to get visible results.\r\n\r\nPlugin actions do not show result nor log anything - but they should.\r\n\r\n\r\n[cuID:[OP-4328](https://app.clickup.com/t/30u328h)]",
        "url": "https://github.com/ynput/OpenPype/issues/4036"
    },
    {
        "number": 4069,
        "title": "Maya: gives error when collecting review without ```review_width``` parameter (created in obsolete OP)",
        "body": " Running latest develop of OP, collector stops on this error. Should just give user warning and continue with default resolution...same as when using width x height param set to 0.\r\n\r\n![image](https://user-images.githubusercontent.com/112623825/199935314-4ec675d5-fb77-44e0-a47a-211ca19366c0.png)\r\n\n\n[cuID:[OP-4374](https://app.clickup.com/t/31w8tk0)]",
        "url": "https://github.com/ynput/OpenPype/issues/4069"
    },
    {
        "number": 4072,
        "title": "ExtractReview and cryptomattes",
        "body": " ## Bug\r\n\r\nExtractReview is trying to process cryptomatte exrs. Stripping metadata from them can take a long time but this plugin shouldn't be dealing with cryptomattes at all.\n\n[cuID:[OP-4379](https://app.clickup.com/t/3221e31)]",
        "url": "https://github.com/ynput/OpenPype/issues/4072"
    },
    {
        "number": 4084,
        "title": "Resolve: Switching versions in timeline fails in Resolve 18",
        "body": " **Running version**\r\n3.14.7-nightly.1\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Use Use Asset Loader to load latest version of more than one shot in the timeline\r\n2. Use Manager (Scene Inventory) to switch version to older in two or more shots\r\n3. Note that versions are correctly loaded in media pool, but only the first shot in the timeline is changed\r\n4. Also note that Scene inventory shows wrong versions (still latest) after reopening\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: WIn10\r\n - Host: Resolve 18\r\n\r\n\r\n[cuID:[OP-4393](https://app.clickup.com/t/32djr36)]",
        "url": "https://github.com/ynput/OpenPype/issues/4084"
    },
    {
        "number": 4091,
        "title": "ExtractThumbnailFromSource should allow to set resolution",
        "body": " **Is your feature request related to a problem? Please describe.**\r\n`ExtractThumbnailFromSource` allows to create thumbnail from explicitly set value in `instance.data[\"thumbnailSource\"]`.\r\n\r\nCurrently it uses OCIO (or ffmpeg as a fallback) with protection from too large resolution (bigger than 21000x21000 - because of ffmpeg).\r\n\r\n**Describe the solution you'd like**\r\nPlugin should allow set thumbnail resolution by use of Profiles, eg. it should be possible to set resolution differently by DCC.\r\nIt should also be able to set resolution by pixels, or by percentage (maybe also flag to keep ratio?).\r\n\r\n\r\n**Additional context**\r\nWe should probably standardize all DCCs to use ONLY this plugin to create thumbnails.\r\nAll DCCs should during extraction know from which file they want to create thumbnail. (It might not be always first file - because of handles etc.)\r\nBut thats should be different issue.\r\n\n\n[cuID:[OP-4395](https://app.clickup.com/t/32k7u7b)]",
        "url": "https://github.com/ynput/OpenPype/issues/4091"
    },
    {
        "number": 4103,
        "title": "Maya: Render creator doesn't work with Deadline module turned off",
        "body": " ## Bug\r\n\r\nIf Deadline module is disabled, render instance creator will crash on missing project settings.\r\n\r\nThis issue is caused by return statement here:\r\n\r\nhttps://github.com/pypeclub/OpenPype/blob/b2e0cd846333cb455c69f0a5d61e51f4dfdf7a7f/openpype/hosts/maya/plugins/create/create_render.py#L76-L80\r\n\r\nif Deadline is disabled, constructor will quit without initializing `_project_settings`. Connected to it is that availability of Deadline should not be determined by the settings, but from the modules manager.\n\n[cuID:[OP-4422](https://app.clickup.com/t/334dthu)]",
        "url": "https://github.com/ynput/OpenPype/issues/4103"
    },
    {
        "number": 4105,
        "title": "ExtractReview: Extend image/video extensions",
        "body": " ## Description\r\nWe should probably reuse `IMAGE_EXTENSIONS` and `VIDEO_EXTENSIONS` from transcoding lib in extract review for supported extensions.\n\n[cuID:[OP-4466](https://app.clickup.com/t/33a7ewy)]",
        "url": "https://github.com/ynput/OpenPype/issues/4105"
    },
    {
        "number": 4107,
        "title": "Nuke: deep image exr loading",
        "body": " **Is your feature request related to a problem? Please describe.**\r\nDeep image ex can occasionally be used in productions and we do not support loading them yet.\r\n\r\n**Describe the solution you'd like**\r\nenhancing actual LoadClip plugin\r\nfind some way how to identify exr in representation as deep images - OIIO can read metadata and flag it during publishing into version and save it into representation.data. So during loading this flag will tell the plugin to chose different Read node.\r\nif deep image representation is identified then use DeepRead node.\r\nrest is the same as normal Read node.\n\n[cuID:[OP-4468](https://app.clickup.com/t/33a7ey2)]",
        "url": "https://github.com/ynput/OpenPype/issues/4107"
    },
    {
        "number": 4173,
        "title": "Review: publishing sequence into single frame asset crash",
        "body": "**Running version**\r\n3.14.8-nightly.2\r\n\r\n**Describe the bug**\r\nPublishing sequence from **Tray Publisher** into asset that has start and end frame the same - single frame - will fail (when publishing with disabled frame range validator) with following message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"E:\\projects\\openpype\\3x\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"<string>\", line 80, in process\r\n  File \"<string>\", line 285, in main_process\r\n  File \"<string>\", line 351, in _render_output_definitions\r\n  File \"<string>\", line 847, in fill_sequence_gaps\r\nIndexError: list index out of range\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open Tray Publisher\r\n2. Select asset with frame range for exame start frame 1001, end frame 1001\r\n3. Select `render` family\r\n4. Put sequence of frames into Tray Publisher\r\n5. Disable Validate Frame Range\r\n6. Publish - publishing will crash in Extract review with the error message\r\n\r\n**Expected behavior**\r\nEven if the asset is set to single frame, it should allow publishing sequence if validator is disabled\r\n\r\n> **Note**\r\n> This probably influence every publish, not only from Tray Publisher\n\n\n[cuID:[OP-4563](https://app.clickup.com/t/37q37eu)]",
        "url": "https://github.com/ynput/OpenPype/issues/4173"
    },
    {
        "number": 4187,
        "title": "Project Setting for Provider batch limit",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently `Provider's` batch limit is hardcoded, and in some cases (like local drive) it can handle much more simurtaneous requests than the set limit.\r\n\r\n**Describe the solution you'd like**\r\nA project setting to define a custom batch limit for each provider.\r\n\r\n**Describe alternatives you've considered**\r\nForking OP to set the value I like.\r\n\n\n\n[cuID:[OP-4568](https://app.clickup.com/t/37q9633)]",
        "url": "https://github.com/ynput/OpenPype/issues/4187"
    },
    {
        "number": 4205,
        "title": "Substance Painter & Substance Designer integration",
        "body": "Hello !\r\n\r\n## Need\r\n\r\nDo you planned to integrate Substance Painter & Substance Designer into OpenPype ?\r\n\r\n## Ressources\r\n\r\nhttps://www.adobe.com/fr/products/substance3d-painter.html\r\n\r\nhttps://substance3d.adobe.com/documentation/spdoc/scripts-and-plugins-197427392.html\n\n\n[cuID:[OP-4612](https://app.clickup.com/t/382ke3d)]",
        "url": "https://github.com/ynput/OpenPype/issues/4205"
    },
    {
        "number": 4216,
        "title": "Workfile tool to show all versions",
        "body": "Workfile tool should be able to show all versions already registered in DB, regardless of DCC it is launched from.\r\n\r\nCurrently, it only shows workfiles with native extensions. Nonnative files could be greyed out and nonselectable (if possible)\r\n\r\n![image](https://user-images.githubusercontent.com/352795/207103976-0674e641-263d-4cb7-9cf0-ac25bf3b4910.png)\r\n\r\n\r\nThis situation leads to confusion when artists are saving workfiles from different DCCs under one task.\r\n\r\n\r\n\r\n\r\n[cuID:[OP-4618](https://app.clickup.com/t/382tcg7)]",
        "url": "https://github.com/ynput/OpenPype/issues/4216"
    },
    {
        "number": 4219,
        "title": "nuke - validate knobs is checking disabled nodes",
        "body": "**Running version**\r\n[ex. 3.14.9-nightly.3]\r\n\r\n**Describe the bug**\r\nPublish plugin validate_knobs.py is validating disabled nodes\r\n\r\n**Expected behavior**\r\nIf any publishing instance node is disabled or publish bool is false then the node should be ignored.\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. windows]\r\n - Host: [e.g. Maya, Nuke, Houdini]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\n\n\n[cuID:[OP-4624](https://app.clickup.com/t/3889nj5)]",
        "url": "https://github.com/ynput/OpenPype/issues/4219"
    },
    {
        "number": 4229,
        "title": "Maya: extend frame workflow refactor",
        "body": "## Problem\r\n\r\nThere are few plugins dealing just with the case of **extend frame** feature - namely `collect_render_layer_aovs.py` / `validate_renderlayer_aovs.py`. Role of those are to collect subset names (they are generated from render layer and AOV name) and check if they have published version in db (to be used for frame extensions).\r\n\r\nThe biggest problem with it is that collector doesn't really reflect how those subsets are generated. So for proper function, this must be unified with `collect_render`, possibly with `submit_publish_job` from Deadline module.\r\n\r\n\r\n\r\n[cuID:[OP-4638](https://app.clickup.com/t/388eg63)]",
        "url": "https://github.com/ynput/OpenPype/issues/4229"
    },
    {
        "number": 4233,
        "title": "Traypublisher: publishing version instance attribute",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nWe need to be able to define specific version on a subset. So we could lock it to only v001 for example. \r\n\r\n**Describe the solution you'd like**\r\nAdding Instance attribute with future version (version above last found) used for publishing. If a user adds manually a version (1) it will override the existing version.\r\n\r\n**Describe alternatives you've considered**\r\nSince it is only `simple editorial` request, we could add this to subset attributes as it used to be in Standalone publisher. But we would still need to at least show to the user what version it will be published into, so again ideally in instance attributes.\r\n\n\n\n[cuID:[OP-4646](https://app.clickup.com/t/861m3n941)]",
        "url": "https://github.com/ynput/OpenPype/issues/4233"
    },
    {
        "number": 4244,
        "title": "Maya: Context switch on task change triggers even when redundant",
        "body": "**Running version**\r\n3.14.10-nightly.1\r\n\r\n**Describe the bug**\r\n\r\nWhen opening or saving to another asset using Workfiles in Maya the context change will also try to update the local scene content to update where it's publishing to and also update the publishing frame ranges (code is [here](https://github.com/pypeclub/OpenPype/blob/453da2f7d54c1d8cb903d1b656e8a73418dc4899/openpype/hosts/maya/api/pipeline.py#L651-L664)). \r\n\r\nHowever, this also triggers when opening a scene in another asset. Technically it runs BEFORE opening the scene and just after the TASK change towards that context so it doesn't break anything. But there shouldn't be the need to try and remap if the changes aren't used anyway. Even more it's confusing behavior for the user with the popup that it's trying to alter something too, even when loading a scene.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Open a maya scene A\r\n2. Open a maya scene B in another asset\r\n3. The pipeline will have remapped the containers in scene A together with showing the artist a modal pop-up (holding the user back) and then open scene B. The remapping and pop-up thus becoming totally irrelevant.\r\n\r\n**Expected behavior**\r\n\r\nIt should do nothing of remapping or complicated logic on the current scene when doing a scene load/open when the changes would be lost anyway. Or at least if it would do something, it shouldn't be presented to the user.\r\n\r\nOnce that's resolved I'd even like to say that if changing the local scene in a way that it's presented to the user what has changed, e.g. the frame range changes etc. I can imagine cases where the user wouldn't want the frame range changed at all but only have the publish destination (asset context) changed for the instances.\r\n\r\nCan we think of a UX behavior that feels less interupting and more transparent to the user?\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Host: Maya\r\n\r\n\r\n\r\n[cuID:[OP-4667](https://app.clickup.com/t/861m3zxz0)]",
        "url": "https://github.com/ynput/OpenPype/issues/4244"
    },
    {
        "number": 4281,
        "title": "Maya: OpenPype GUI is extended beyond maya win boundary  (spans across multiple screens)",
        "body": "When creating ```render``` subset without deadlinewebservice running OP gives error message and OP GUI is abnormally stretched out out of maya app window (positioned more like to dual screen desktop size - center/size)\r\n\r\n![image](https://user-images.githubusercontent.com/112623825/210776285-ebad74ee-14c1-4be4-9072-df7ffd21ed0d.png)\r\n\n\n\n[cuID:[OP-4703](https://app.clickup.com/t/861m65h2r)]",
        "url": "https://github.com/ynput/OpenPype/issues/4281"
    },
    {
        "number": 4285,
        "title": "Maya: OP Menu Redesign Proposal - Better usability/ User experience ",
        "body": "As been working with OpenPype for some time it bothers me inconsistencies in GUI and terminology...should be addressed imho.\r\n\r\nHere is an example of different terminology accross OP entities:\r\n![UI_Maya_Proposal_01a](https://user-images.githubusercontent.com/112623825/211011885-1bd9faca-a51e-45c5-9cb1-1f302108a703.jpg)\r\n\r\nI also propose make a redesign in the menu itself for better usability.\r\n\r\n1) Most important/frequent actions at the top of the menu\r\n2) Logical grouping of those actions according to user interaction\r\n3) Hiearchical listing of menu items into sub groups (sub menus) lessening overall clutter to minimum - better readibility.\r\n\r\nFirst draft here:\r\n\r\n![UI_Maya_Proposal_01b](https://user-images.githubusercontent.com/112623825/211012353-da600d65-7f05-4f74-95c5-294dbfc7b648.jpg)\r\n\r\n\r\n\n\n\n[cuID:[OP-4708](https://app.clickup.com/t/861m6au1w)]",
        "url": "https://github.com/ynput/OpenPype/issues/4285"
    },
    {
        "number": 4287,
        "title": "Maya: Template builder issue",
        "body": "**Running version**\r\n3.14.10-nightly.6 (code)\r\n\r\n**Describe the bug**\r\nThere is an issue with building a scene using Template builder.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Setup simple template\r\n![image](https://user-images.githubusercontent.com/352795/211031486-78c5d6ea-c3e0-4c03-850f-224bfbf510e1.png)\r\n\r\n\r\n2. Set the correct path to the template in the settings under `project_settings/maya/templated_workfile_build`\r\n![image](https://user-images.githubusercontent.com/352795/211031618-44eb261f-bbdc-4967-a9b7-d58b11d605b7.png)\r\n\r\n5. Build the file from the template (under correct context from the settings)\r\n![image](https://user-images.githubusercontent.com/352795/211031878-876cb3de-b1b7-4400-bd3b-da363453b5c1.png)\r\n\r\n7. See error\r\n\r\n```\r\n# # *** WRN: >>> { <openpype.hosts.maya.api.workfile_template_builder.MayaTemplateBuilder object at 0x00000222E9AFE9B0> }: [ Failed to process placeholder |All_assets_grp|All_model_assets with plugin MayaPlaceholderLoadPlugin ] \r\n# ==============================\r\n# No object matches name: |All_assets_grp|All_model_assets\r\n# ==============================\r\n# Traceback (most recent call last):\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\workfile\\workfile_template_builder.py\", line 585, in populate_scene_placeholders\r\n#     placeholder_plugin.populate_placeholder(placeholder)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\api\\workfile_template_builder.py\", line 208, in populate_placeholder\r\n#     self.populate_load_placeholder(placeholder)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\workfile\\workfile_template_builder.py\", line 1462, in populate_load_placeholder\r\n#     self.load_succeed(placeholder, container)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\api\\workfile_template_builder.py\", line 243, in load_succeed\r\n#     self._parent_in_hierarchy(placeholder, container)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\api\\workfile_template_builder.py\", line 277, in _parent_in_hierarchy\r\n#     worldSpace=True\r\nValueError: No object matches name: |All_assets_grp|All_model_assets\r\n```\r\n\r\n\r\n\n\n\n[cuID:[OP-4709](https://app.clickup.com/t/861m6c251)]",
        "url": "https://github.com/ynput/OpenPype/issues/4287"
    },
    {
        "number": 4290,
        "title": "Maya: Template File Builder creates more entities than expected",
        "body": "**Running version**\r\n3.14.10-nightly6\r\n\r\n**Describe the bug**\r\nWhen triggering ```Build workfile from template``` it causes duplicate assets present in the scene.\r\n\r\nhere is a screencap of my ```template file```\r\n\r\n![image](https://user-images.githubusercontent.com/112623825/211067793-d2c29f0e-028e-48d6-8a16-7cb8b2b28b43.png)\r\n\r\nand here is a screen after triggering the build action:\r\n\r\n![image](https://user-images.githubusercontent.com/112623825/211067950-36779445-44f5-4177-aa41-ccb29a09bf61.png)\r\n\r\ngives me this log\r\n\r\n```# openpype.lib.profiles_filtering : Looking for matching profile for: task_types: \"Lighting\" | task_names: \"lighting\"\r\n# openpype.lib.profiles_filtering : Profile selected: {'task_types': ['Lighting'], 'task_names': [], 'path': 'd:/PROJECTS/templates/lighting/template_v001.ma', 'placeholder_keep': True}\r\n# >>> [ Found template at: 'd:\\PROJECTS\\templates\\lighting\\template_v001.ma' ] \r\n# File read in  0.018 seconds.\r\n# # >>> [ Loading pointcacheMain from sh003 with loader ReferenceLoader\r\nLoader arguments used :  ] \r\n# openpype.pipeline.load.utils : Running 'ReferenceLoader' on 'sh003'\r\n# SubsetLoader : {}\r\n# File read in  0.057 seconds.\r\n# # >>> [ Loading layoutMain from sh003 with loader ReferenceLoader\r\nLoader arguments used :  ] \r\n# openpype.pipeline.load.utils : Running 'ReferenceLoader' on 'sh003'\r\n# SubsetLoader : {}\r\n# Read 8 files in  0.14 seconds.\r\n# Warning: SubsetLoader : More than one reference node found in container, using highest reference node: sh003_layoutMain_01_RN (in: ['sh003_layoutMain_01_:room_setdressMain_01_:chair_modelMain_01_RN', 'sh003_layoutMain_01_:room_setdressMain_01_:interior_modelMain_01_RN', 'sh003_layoutMain_01_:room_setdressMain_01_RN', 'sh003_layoutMain_01_RN', 'sh003_layoutMain_01_:room_setdressMain_01_:table_modelMain_01_RN', 'sh003_layoutMain_01_:room_setdressMain_01_:couch_modelMain_01_RN', 'sh003_layoutMain_01_:room_setdressMain_01_:chair_modelMain_02_RN', 'sh003_layoutMain_01_:chair_modelMain_01_RN'])\r\n# Warning: Cannot parent components or objects in the underworld.\r\n# # *** WRN: >>> { <openpype.hosts.maya.api.workfile_template_builder.MayaTemplateBuilder object at 0x00000260B8CD6DC0> }: [ Failed to process placeholder |layout|Context_layout_asset with plugin MayaPlaceholderLoadPlugin ] \r\n# ==============================\r\n# Not enough objects or values.\r\n# \r\n# ==============================\r\n# Traceback (most recent call last):\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\workfile\\workfile_template_builder.py\", line 585, in populate_scene_placeholders\r\n#     placeholder_plugin.populate_placeholder(placeholder)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\api\\workfile_template_builder.py\", line 208, in populate_placeholder\r\n#     self.populate_load_placeholder(placeholder)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\workfile\\workfile_template_builder.py\", line 1462, in populate_load_placeholder\r\n#     self.load_succeed(placeholder, container)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\api\\workfile_template_builder.py\", line 243, in load_succeed\r\n#     self._parent_in_hierarchy(placeholder, container)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\api\\workfile_template_builder.py\", line 280, in _parent_in_hierarchy\r\n#     cmds.reorder(node, front=True)\r\n# RuntimeError: Not enough objects or values.\r\n\r\n# # >>> [ Loading cameraMain from sh003 with loader ReferenceLoader\r\nLoader arguments used :  ] \r\n# openpype.pipeline.load.utils : Running 'ReferenceLoader' on 'sh003'\r\n# SubsetLoader : {}\r\n# File read in  0.02 seconds.\r\n# # >>> [ Loading pointcacheMain from sh003 with loader ReferenceLoader\r\nLoader arguments used :  ] \r\n# openpype.pipeline.load.utils : Running 'ReferenceLoader' on 'sh003'\r\n# SubsetLoader : {}\r\n# File read in  0.057 seconds.\r\n# # >>> [ Loading cameraMain from sh003 with loader ReferenceLoader\r\nLoader arguments used :  ] \r\n# openpype.pipeline.load.utils : Running 'ReferenceLoader' on 'sh003'\r\n# SubsetLoader : {}\r\n# File read in  0.02 seconds.```\r\n\n\n\n[cuID:[OP-4711](https://app.clickup.com/t/861m6cxca)]",
        "url": "https://github.com/ynput/OpenPype/issues/4290"
    },
    {
        "number": 4299,
        "title": "OCIO config environment variables distribution",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nAt the moment we are having working colorspace distribution with OCIO support, but we are still missing a part where EP, SEQ, SHOT environment variables occasionally used by production are set before a host application is started. \r\n\r\n**Describe the solution you'd like**\r\nPre-lauch hooks woflow should be used which would distill mentioned environment variables from the hierarchy of context and set them, so any OCIO config which is using such env vars will be able to use it. Idea here is to fill those variables if the any of parent above shot is sequence or episode `assetType`. \r\n\r\n**Additional context**\r\nrelated PR to https://github.com/ynput/OpenPype/pull/4195\r\n\r\n\r\n\r\n\r\n[cuID:[OP-4724](https://app.clickup.com/t/861m7010g)]",
        "url": "https://github.com/ynput/OpenPype/issues/4299"
    },
    {
        "number": 4302,
        "title": "Publisher: Add a plug-in details tab",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThe old publisher was able to show the plug-in's path, families etc in the Publishing UI. The new publisher does not allow to do that.\r\n\r\n**Describe the solution you'd like**\r\n\r\nLikely the best location is on the **Details Page** as an extra tab next to \"Logs\" and \"Crashed Plugins\".\r\n\r\nThat particular tab could then show for the \"Active\" selected plug-in in the details page:\r\n\r\nRequired:\r\n\r\n- The documentation of the Plug-in (docstring)\r\n- The plug-in source path\r\n\r\nNice-to-have:\r\n\r\n- Whether it's a context plug-in or instance plug-in\r\n- On which instances or context it will run\r\n- Show the `families` - extra nice if it could even highlight the families applicable per instance that it runs over (or has run over?)\r\n- If the plug-in was processed to maybe show the time spent / time taken for that particular plug-in\r\n- Extra bonus if it could even show the python attributes defined on the class so that potentially one could debug what attributes might be set through the form of Project Settings.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nCry in a corner - then pick up where I left it and search which plug-in it actually was on disk.\r\n\r\n**Additional context**\r\n\r\nThe same \"Tab\" in Pyblish (old UI):\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/211612488-2c60915f-9d43-4c40-a87b-2a08da3b53c0.png)\r\n\r\n\r\n\r\n\r\n[cuID:[OP-4731](https://app.clickup.com/t/861m71n91)]",
        "url": "https://github.com/ynput/OpenPype/issues/4302"
    },
    {
        "number": 4304,
        "title": "Blender Annoying Popup breaks UI",
        "body": "**Running version**\r\n[3.14.9]\r\nWindows\r\nBlender 3.3\r\n\r\n**Describe the bug**\r\nWhen runnning Blender, loading an asset in fresh blend throw up a small popup which is hidden by the Loader and blocked in the view. The whole UI then appears to be locked and you cant click much around, only way is to press ESC to escape the window.\r\nI could not even read what the error is until i hover the taskbar on windows\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. open fresh task blend file\r\n2. load an alembic\r\n3. popup with the error will appear\r\n\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: win10\r\n - Host: Blender 3.3\r\n - \r\n<img width=\"565\" alt=\"Screenshot 2023-01-11 at 04 44 34\" src=\"https://user-images.githubusercontent.com/2397041/211713461-00309c7b-03f5-4f22-a2a4-d3530d2eafda.png\">\r\n\r\n\n\n\n[cuID:[OP-4732](https://app.clickup.com/t/861m7332g)]",
        "url": "https://github.com/ynput/OpenPype/issues/4304"
    },
    {
        "number": 4305,
        "title": "Ftrack module creates double folder structure",
        "body": "**Running version**\r\n3.14.9\r\n\r\n**Describe the bug**\r\nWhen Ftrack module is enabled, on autosync, a double folder structure is created.\r\nReviving this topic since this is a deal breaker.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open ftrack\r\n2. Create a new project\r\n3. set autsync\r\n4. go local disk and check the folder stroucture\r\n5. everything is nested again/doubled  in the project folder\r\n\r\n**Expected behavior**\r\none folder structure to rule them all!\r\n\r\n**Screenshots**\r\n<img width=\"1005\" alt=\"Screenshot 2023-01-06 at 11 40 20\" src=\"https://user-images.githubusercontent.com/2397041/211713971-75573983-72dd-4b99-9130-8a133b4194a2.png\">\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: OP windows, event server linux\r\n - Host: ftrack module\r\n\r\n\n\n\n[cuID:[OP-4733](https://app.clickup.com/t/861m7333z)]",
        "url": "https://github.com/ynput/OpenPype/issues/4305"
    },
    {
        "number": 4316,
        "title": "Publisher: In create mode hide selection of Subsets",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen on the Create Page you still see the active selection in Subsets to publish on the right\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/212379611-31f443e5-8a30-46e8-b4e4-31b3db7cdb4e.png)\r\n\r\nHowever, that makes it somewhat feel like that right hand side has something to do with the values I'm seeing to the left of it. But they aren't. I almost think that right hand side subsets to publish should be deactivated completely and just be visual reference of what you already have.\r\n\r\n(The same goes for the + button on the right hand side underneath those Subset to Publish - it doesn't do anything in the Create page)\r\n\r\n---\r\n\r\nAlso, selecting no asset/task on the left hand side still allows you to create an instance - which seems to be a bit confusing too.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nThe create page to me still confuses me most of the time. So anything that tries to avoid clutter and confusion on the page will help.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nIt might be even worth deciding to NOT show the subset to publish at all. It's nice seeing what's already there currently but I feel like in the current state it's more confusing and clutter than what it adds to the end user.\r\n\r\n\n\n\n[cuID:[OP-4745](https://app.clickup.com/t/861m7rdgd)]",
        "url": "https://github.com/ynput/OpenPype/issues/4316"
    },
    {
        "number": 4338,
        "title": "Publisher: Report add a \"Show detailed log\" button",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThe new publisher makes it harder to get to the logs of a specific plug-in due to the force towards the Reports page.\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/213043063-9d447a5a-0aca-43d0-aa22-1568cf420304.png)\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nAt best it should not force you from Details to Report page, but it did make me think of something else.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n![right_sidebar](https://user-images.githubusercontent.com/2439881/213042770-0b46c12f-c36d-4ad3-997e-29c848145ac5.png)\r\n\r\n\r\n\r\nWhat if the right sidebar on the Report page also shows a \"Show detailed log\" (if there are any logs for that plug-in) button for the report you're looking at.\r\nWhen clicking that button it would then go to \"Details\" and highlight the relevant Instances + Plugin so that it only shows THOSE logs directly.\r\n\r\n**Additional context**\r\n\r\nAlso mentioned on discord [here](https://discord.com/channels/517362899170230292/517382145552154634/1065061292093755415)\r\n\n\n\n[cuID:[OP-4762](https://app.clickup.com/t/861m8a0w6)]",
        "url": "https://github.com/ynput/OpenPype/issues/4338"
    },
    {
        "number": 4348,
        "title": "Global: colorspace `parse_colorspace_from_filepath` simplification",
        "body": "Would this function make more sense when simplified/rewritten as just finding the first relevant color space from the list of color spaces of the config? It'd make it more versatile in use instead of it internally always needing to call `get_ocio_config_colorspaces`.\r\n\r\nIt feels to me that parsing from filenames like this might often be frequently done close after each other - e.g. parsing multiple files. Quering the color space files rules will be relatively slow since it requires accessing the OCIO config file each time.\r\n\r\n```python\r\ncolorspaces = get_ocio_config_colorspaces(config_path)\r\nfor filepath in filepaths:\r\n    colorspace = parse_colorspace_from_filepath(filepath, colorspaces=colorspaces)\r\n```\r\n\r\nThis also looks to me like a much more friendly API to the user with much less arguments to pass. Plus it'd be much faster and a simpler function code body.\r\n\r\nAs a general recommendation I'd try to see if there are other areas where functions could be simplified like this. Needing to pass project name, host, project settings to all functions where they end up just parsing an OCIO config path I'd say should be rewritten to just take the config path.\r\n\r\n_Originally posted by @BigRoy in https://github.com/ynput/OpenPype/pull/4195#discussion_r1070448372_\r\n            \r\n\r\n\r\n[cuID:[OP-4770](https://app.clickup.com/t/861m8ge8z)]",
        "url": "https://github.com/ynput/OpenPype/issues/4348"
    },
    {
        "number": 4361,
        "title": "Implement a format representation sequence path function for Loaders",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nMany loader plug-ins involved quite some code on finding the right file or file pattern for a sequence. They are trying to construct patterns like:\r\n\r\n```\r\n/path/to/publish/v001/filename.####.exr\r\n/path/to/publish/v001/filename.$F4.exr\r\n/path/to/publish/v001/filename.%04d.exr\r\n/path/to/publish/v001/filename.<f>.exr\r\n/path/to/publish/v001/filename.<udim>.exr\r\n/path/to/publish/v001/filename.<udim>.<f>.exr\r\n```\r\n\r\nThese currently all appear to be implemented over and over again, and also appear to parse this data from the filename itself even though most of these frames or udims or alike is information that was available at the time of publish.\r\n\r\nSome examples\r\n- [Replacing part of the filename in the Nuke image loader](https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/nuke/plugins/load/load_image.py#L191-L196) - this would already fail if the subset was called imageMain20 and we're loading frame 20, it would also replace the `20` of the subset name to \r\n- [Houdini image loader, listing files in the publish folder and going from there](https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/houdini/plugins/load/load_image.py#L121-L127)\r\n- [Houdini bgeo loader loading a sequence and always expecting the `dot` in front of the frame number even though I believe that's customizable to be another frame separator in OpenPype](https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/houdini/plugins/load/load_bgeo.py#L65-L83) and [something similar for Houdini's VDB Loader](https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/houdini/plugins/load/load_vdb.py#L61-L79)\r\n- [Fusion image sequence loader listing folder's contents](https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/fusion/plugins/load/load_sequence.py#L252-L255)\r\n- [Maya ass loader listing publish contents using `os.listdir` and then `clique.assemble`](https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/maya/plugins/load/load_ass.py#L255-L259)\r\n- [Maya VDB loader to V-Ray trying to parse path from listing folder](https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/maya/plugins/load/load_vdb_to_vray.py#L170-L203)\r\n- [Maya Yeti Cache finding fur sequences](https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/maya/plugins/load/load_yeti_cache.py#L233-L274)\r\n\r\nA lot of these implementations have many points of failures. E.g. most of the `os.listdir` usages don't even check whether the result is a file and has the right extension - it might just pick up any other file in that folder instead. But the essence of what they are trying to do is mostly the same, and its detecting and formatting the following:\r\n\r\n- Do the files exist?\r\n- Are they a sequence of files or a single file?\r\n- What kind of tokens are in the filename?\r\n- And then last format the path so the token is the way we need for our loader, e.g. changing frame in `####` or `<f>` or `$F4` etc.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI'd like a single recommended (and documented) approach on how a loader should retrieve the files of the publish and preferably even expose `get_representation_sequence` or `format_representation_path` or something along those lines that would make this loading logic of sequences in a certain way easily manageable for the developer implementing a Loader plugin.\r\n\r\nThe tricky bit is if the function itself formats the path like e.g. `/path/to/publish/v001/filename.%04d.exr` that would make it non-trivial for the loader plugin developer to detect whether the files exist on disk or not. So we might need to consider also returning the full paths easily.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThe alternative is to pick one of the different implementations found in the codebase and use one, but they don't seem foolproof and generally result in many lines of code extra to maintain in a loader.\r\n\r\n**Additional context**\r\n\r\nThere is an existing `get_representation_path` function which I believe returns the first filepath of the representation. \r\n\r\n\r\n[cuID:[OP-4791](https://app.clickup.com/t/863fx45j8)]",
        "url": "https://github.com/ynput/OpenPype/issues/4361"
    },
    {
        "number": 4378,
        "title": "Publisher: Support dynamic/cached attribute definitions",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to expose the `primaryPool` and `secondaryPool` to the user in the New Publisher.\r\nI thought of adding this to [Collect Deadline Pools](https://github.com/ynput/OpenPype/blob/e9794d0367f1d14013f7005354735d5f3c4ce886/openpype/modules/deadline/plugins/publish/collect_pools.py):\r\n\r\n```python\r\n    @classmethod\r\n    def get_attribute_defs(cls):\r\n\r\n        manager = ModulesManager()\r\n        deadline_module = manager.modules_by_name[\"deadline\"]\r\n        pools = deadline_module.get_deadline_pools(deadline_url)\r\n\r\n        pools_enum = {key: key for key in pools}\r\n\r\n        from openpype.lib import EnumDef\r\n        return [\r\n            EnumDef(\"primaryPool\",\r\n                    label=\"Primary Pool\",\r\n                    default=cls.primary_pool,\r\n                    items=pools_enum),\r\n            EnumDef(\"secondaryPool\",\r\n                    label=\"Secondary Pool\",\r\n                    default=cls.secondary_pool,\r\n                    items=pools_enum),\r\n        ]\r\n```\r\n\r\nHowever the studio and user could customize the Deadline Webservice URL and the deadline pools would be a dynamic result.\r\n\r\nFor example this logic is used in maya:\r\n```python\r\ntry:\r\n    default_servers = deadline_settings[\"deadline_urls\"]\r\n    project_servers = (\r\n        self._project_settings[\"deadline\"][\"deadline_servers\"]\r\n    )\r\n    self.deadline_servers = {\r\n        k: default_servers[k]\r\n        for k in project_servers\r\n        if k in default_servers\r\n    }\r\n\r\n    if not self.deadline_servers:\r\n        self.deadline_servers = default_servers\r\n\r\nexcept AttributeError:\r\n    # Handle situation were we had only one url for deadline.\r\n    # get default deadline webservice url from deadline module\r\n    self.deadline_servers = self.deadline_module.deadline_urls\r\n```\r\n[Source](https://github.com/ynput/OpenPype/blob/a3e795aa37d99452728e67e7bb2cea0b27f514e9/openpype/hosts/maya/plugins/create/create_vrayscene.py#L53-L70)\r\n\r\n**Describe the solution you'd like**\r\n\r\n- Be able to delay the query of e.g. `deadline_module.get_deadline_pools(deadline_url)` to when it'd be needed - e.g. so that it updates the Pools list when clicking on the Enum for the first time.\r\n- Be able to \"update\" the available pool list e.g. another attribute definition would be changed, like the Deadline URL\r\n\r\nHere's some pseudocode:\r\n```python\r\n    @classmethod\r\n    def get_attribute_defs(cls):\r\n\r\n        from openpype.lib import EnumDef\r\n        from functools import partial\r\n        \r\n        url_def = EnumDef(\"url\",\r\n                         label=\"Webservice URL\",\r\n                         items=project_deadline_urls)\r\n        \r\n        def get_pools(_url_def):\r\n            \"\"\"Return pool list based on value of url EnumDef\"\"\"\r\n            url = _url_def.value\r\n            manager = ModulesManager()\r\n            deadline_module = manager.modules_by_name[\"deadline\"]\r\n            pools = deadline_module.get_deadline_pools(url)\r\n            return {key: key for key in pools}\r\n        \r\n        fn_get_pools = partial(get_pools, url_def)\r\n\r\n        primary_pool_def = EnumDef(\"primaryPool\",\r\n                                   label=\"Primary Pool\",\r\n                                   default=cls.primary_pool,\r\n                                   itemgetter=fn_get_pools)\r\n        secondary_pool_def = EnumDef(\"secondaryPool\",\r\n                                     label=\"Secondary Pool\",\r\n                                     default=cls.secondary_pool,\r\n                                     itemgetter=fn_get_pools)\r\n\r\n        url_def.valueChanged.connect(primary_pool_def.updateItems)\r\n        url_def.valueChanged.connect(secondary_pool_def.updateItems)\r\n\r\n        return [\r\n            url_def,\r\n            primary_pool_def,\r\n            secondary_pool_def\r\n        ]\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nNot sure what other approaches there are for the new publisher to expose this.\r\n\r\n**Additional context**\r\n\r\n[Also mentioned on discord](https://discord.com/channels/517362899170230292/517382145552154634/1068118194784587776)\n\n\n[cuID:[OP-4827](https://app.clickup.com/t/863fyc3rn)]",
        "url": "https://github.com/ynput/OpenPype/issues/4378"
    },
    {
        "number": 4385,
        "title": "Publisher: Visualize failed Creator plug-ins and show Creator plug-ins in Details tab",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently there is no way to debug what a Creator plug-in ended up doing inside the new Publisher UI except for whether an instance was generated or not.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI'd like to be able to Creator plug-ins that failed to load (similar to how Pyblish plug-ins failing to load are visualized).\r\n\r\nAdditionally it would be great to read a log specific to a Creator and as such I'd love for them to show under the list of Plug-ins too. \r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/214968906-bf0191fc-c39c-4139-8855-8b3dd810af2b.png)\r\n\r\nMiddle column: above \"Collect\" it could show \"Create\"\r\nRight column: Crashed Plug-ins would also show the crashed creator plug-ins.\r\n\r\n\r\n[cuID:[OP-4836](https://app.clickup.com/t/861m9qhc9)]",
        "url": "https://github.com/ynput/OpenPype/issues/4385"
    },
    {
        "number": 4410,
        "title": "Ftrack: Manual sync breaks OP project if sync is done prior to prepare project",
        "body": "**Running version**\r\n\r\n3.14.3\r\n\r\n**Describe the bug**\r\n\r\n**Note: This happens with auto-sync _disabled_.**\r\n\r\nWhenever creating a new Ftrack project and having some assets/shots generated when clicking **Actions > OpenPype Admin > OpenPype Admin - Sync to Avalon (Local)** it syncs the project with fps, frame start, frame end, etc. values set to a None value.\r\n\r\nI feel like this only really happens if we Create a new Ftrack project and Sync to Avalon before triggering the **Actions > Prepare Project**\r\n\r\nBecause on creating a new project - the project looks like this:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/216054682-e908f971-fdde-4d6d-a6cd-d70140b39311.png)\r\n\r\nAfter Prepare project it looks like this:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/216058798-6f6639de-5f60-4586-9aa6-d4d306b11016.png)\r\n\r\nWhich is what I'd need.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Create a new ftrack project\r\n2. Do not trigger **Actions > Prepare Project**\r\n3. Trigger **Actions > OpenPype Admin > OpenPype Admin - Sync to Avalon (Local)**\r\n\r\nThe project is now in a broken state in OpenPype since it has `fps = None`, `frameStart = None`, etc.\r\n\r\n**Expected behavior**\r\n\r\nI feel like we should DISALLOW the project to be synced without Prepare Project having triggered or when having these project values set to None. It should show a pop-up on what to do OR even better should automatically show the \"Prepare Project\" pop-up.\r\n\r\n**Screenshots**\r\n\r\nThese are our ftrack defined custom attributes:\r\n\r\n![ftrack_custom_attributes](https://user-images.githubusercontent.com/2439881/216053714-d5435edd-c8f3-462c-b050-4fcd05a8278f.png)\r\n\r\nI feel like some of these aren't needed, are maybe old? and maybe the issue is that some don't have defaults to begin with?\r\n\r\n**Additional context**\r\n\r\nCame up on discord few times:\r\n- [here by Xavier Piveteau-Guyomarc'h \u2014 12/06/2022 5:00 PM](https://discord.com/channels/517362899170230292/563751989075378201/1049717030124789810) \r\n- [here by me \u2014 09/06/2022 3:15 PM](https://discord.com/channels/517362899170230292/563751989075378201/1016698036983955586)\r\n- [here by me - just now](https://discord.com/channels/517362899170230292/517382145552154634/1070289812982079570) \r\n\r\n### Workaround\r\n\r\nThe active workaround to 'fix' it is to run **Actions > Prepare Project** and then **Actions > OpenPype Admin > OpenPype Admin - Sync to Avalon (Local)** again.\r\n\r\nHowever I still feel the sync should still not work, or at least warn the user, if the attributes haven't been \"prepared\" correctly.\r\n\r\n\r\n[cuID:[OP-4870](https://app.clickup.com/t/861makeyu)]",
        "url": "https://github.com/ynput/OpenPype/issues/4410"
    },
    {
        "number": 4427,
        "title": "Maya: Xgen Incremental Save",
        "body": "**Goal**\r\nWhen a workfile is incrementally saved, the Xgen side car files should be versioning up as well.\r\n\r\n**Motivation**\r\nCurrently when versioning up the workfile, Xgen side car files are untouched. This means that `v001` of the workfile could be using the same files as `v002`. Although we publish to an immutable state, have the work area muddled with cross version side car files, can quickly get out of hand.\r\n\r\n**Implementation**\r\nWhen saving a new version of the Maya scene, all Xgen files should be versioned up as well. Along with the `.xgen` and `.xgd`, which usually resides next to the workfile, we also have a directory of `.ptx` and `.xuv` files.\r\nThe `.xgen` and `.xgd` files can inherit the workfile name, but for the `.ptx` and `.xuv` we should have a subdirectory with the workfile name, so the folder hierarchy would look like this:\r\n```\r\n- [task folder]\r\n    - xgen\r\n        - [workfile name]\r\n            - collections\r\n```\n\n\n[cuID:[OP-4882](https://app.clickup.com/t/863g04311)]",
        "url": "https://github.com/ynput/OpenPype/issues/4427"
    },
    {
        "number": 4430,
        "title": "Maya: Xgen publish attribute maps",
        "body": "**Running version**\r\n3.15.1-nightly.2\r\n\r\n**Describe the bug**\r\nWhen publishing  Xgen, the attribute maps are left in the work area and referenced from there.\r\n\r\n**To Reproduce**\r\n1. Create Xgen with attribute map in Maya.\r\n2. Publish and inspect `.xgen` file for attribute maps pointing to the work area.\r\n\r\n**Expected behavior**\r\nWhen publishing, the attribute maps should get published to the immutable publish directory and the attribute path changed.\n\n\n[cuID:[OP-4884](https://app.clickup.com/t/863g04d5f)]",
        "url": "https://github.com/ynput/OpenPype/issues/4430"
    },
    {
        "number": 4431,
        "title": "Maya: Xgen support rendering from published scene.",
        "body": "**Goal**\r\nCurrently Xgen only supports rendering from the live work area due to implementation limitations.\r\n\r\n**Motivation**\r\nPublishing a render should be immutable, so the Maya scene with Xgen should be published and rendered from the publish area.\n\n\n[cuID:[OP-4885](https://app.clickup.com/t/863g04dg7)]",
        "url": "https://github.com/ynput/OpenPype/issues/4431"
    },
    {
        "number": 4442,
        "title": "Documentation: Add environment variables section",
        "body": "I would actually revert this docs change and move the special environment variables documentation into a page of its own. So that in Admin section for Configuration there's an \"Environment Variables\" page. This particular area of the docs could then just link to that page.\r\n\r\nWhy separate it? Because I'd actually argue that most of these environment variables mentioned here aren't supposed to be set in the global **environment** under system settings. But instead a particular machine could have a `OPENPYPE_LOG_LEVEL` env locally, or even have a \"Environments\" override in \"Local Settings\". There are many places where these are more likely to be used.\r\n\r\nI'd just make a page dedicated for environment variables that are there to customize OP behavior. I'd also add `OPENPYPE_MONGO`, `OPENPYPE_USERNAME`, `OPENPYPE_LOCAL_ID`. Maybe even categorize some under **advanced** on that page.\r\n\r\nSame goes for documenting `OPENPYPE_FFMPEG_PATHS` and `OPENPYPE_FFMPEG_PATHS`.\r\n\r\n_Originally posted by @BigRoy in https://github.com/ynput/OpenPype/pull/4398#discussion_r1093467040_\r\n            \n\n\n[cuID:[OP-4927](https://app.clickup.com/t/861mbphea)]",
        "url": "https://github.com/ynput/OpenPype/issues/4442"
    },
    {
        "number": 4469,
        "title": "Broken cleaning of temporary files after publishing",
        "body": "**Running version**\r\n3.15.1\r\n\r\n**Describe the bug**\r\nNot all temporary data are cleared after publishing.\r\n\r\n**To Reproduce**\r\nDuring testing of transcoding plugin https://github.com/ynput/OpenPype/pull/4291 I have noticed that temporary staging folder was remaining in `C://Temp` folder with ExctractReview mp4. All data created in Trancoding were removed as they were tagged as `delete`. \r\n\r\n**Expected behavior**\r\nExctractReview should also flag staging dir and all files in it as explicit cleanup can clear all after publishing, but this seems to be broken. \r\n\n\n\n[cuID:[OP-4953](https://app.clickup.com/t/861mcfdb6)]",
        "url": "https://github.com/ynput/OpenPype/issues/4469"
    },
    {
        "number": 4479,
        "title": "Project Manager: fps input",
        "body": "**Running version**\r\n3.15.1-nightly.4\r\n\r\n**Describe the bug**\r\nYou cannot input fps in **OpenPype Project Manager** with more thatn 2 decimal precision. Also, the input for fps doesn't accept other decimal separator than the one set in system's locale.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to Project Manage\r\n2. Click on asset\r\n3. Try to set fps to `23.976023976023978`, try to input with `,` as decimal separator instead.\r\n\r\n**Expected behavior**\r\nYou should be able to input any arbitrary value in fps field. It should accept number with either `.` or `,` as decimal separators.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/33513211/219399639-9a73c512-dc4b-4033-943e-9d2b1a589ab6.png)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 10\r\n - Host: N/A\r\n\n\n\n[cuID:[OP-4971](https://app.clickup.com/t/861mcmvyw)]",
        "url": "https://github.com/ynput/OpenPype/issues/4479"
    },
    {
        "number": 4490,
        "title": "injecting environments to shell",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhile testing it would be great to have a possibility to spawn shell/command line with Ayon/OP environments set \r\n\r\nFor example, when testing something in Maya from command line I need to have all tools/plugins from the settings set to load Arnold/Vray/Redshift/USD from my central software repo \r\n\r\n**Describe the solution you'd like**\r\n\r\nIdeally, the same way we have Python Console, we could have Shell/Cmd/Powershell Console with all environments set\r\n\r\nor\r\n\r\nhaving an option to run the ayon/op console with option to set envs (similar way we extract them to json)\r\n\r\n\r\n\r\n\r\n\r\n[cuID:[OP-4985](https://app.clickup.com/t/861md6d5x)]",
        "url": "https://github.com/ynput/OpenPype/issues/4490"
    },
    {
        "number": 4504,
        "title": "Global: colorspace workflow support Display and View inputs",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nA the moment we only support `colorspace` input from DCC, but we will need to support to make it more universal because [Transcoding](https://github.com/ynput/OpenPype/pull/4291) can be targeted with Colorspace or Display & View preference.\r\n\r\n**Describe the solution you'd like**\r\nWe need to be able to store `display` and `view` keys in `colorspaceData` on instance's representation. Also need to consider to enhance  File Rules settings data model with Display and View. \r\n\r\n\r\n\r\n[cuID:[OP-4995](https://app.clickup.com/t/861mdexcr)]",
        "url": "https://github.com/ynput/OpenPype/issues/4504"
    },
    {
        "number": 4517,
        "title": "Ftrack: Automatically create subfolders when create/update AssetBuild",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nThe supervisors in our studio want to be able to sort assets by asset type, especially in the OP launcher. When having like 20 or more assets, it is really confusing not to be able to sort them into subfolders. We could simply create the subfolders manually in ftrack, but then there's a risk that there's no consistency across projects (typo, uppercase or not, s in the end of a word or not...).\r\n\r\n**Describe the solution you'd like**\r\nThe solution we wish to develop, is to create automatically a subfolder with the name of the asset type (if it doesn't already exists) and put the asset into this subfolder automatically. So there's no human intervention, therefore less risk of typo or else.\r\n\r\n**Describe alternatives you've considered**\r\nAn other idea we had, is to create a virtual hierarchy in the launcher based on the type of the asset. Create fake subfolders in the launcher based on the type of the AssetBuild from ftrack which will have no repercussions on the pipeline, it will just be visual.\r\n\r\n**Additional context**\r\n![image](https://user-images.githubusercontent.com/51854004/220928821-d83e64f2-a454-43e7-b8e9-84cc9f74ea74.png)\r\n>Screenshot from ftrack\r\n\r\n1 - This is the asset type of the AssetBuild (here \"Prop\")\r\n2 - This is the subfolder we want to create automatically named after the asset type.\r\n\n\n\n[cuID:[OP-5002](https://app.clickup.com/t/861mdm4ma)]",
        "url": "https://github.com/ynput/OpenPype/issues/4517"
    },
    {
        "number": 4560,
        "title": "Deadline: submit job refactor colorspace data workflow ",
        "body": "** Is your feature request related to a problem? Please describe. **\r\n_Originally posted by @BigRoy in https://github.com/ynput/OpenPype/pull/4552#discussion_r1122819358_\r\n\r\n## Issue with root replacement for config tempate         \r\nWhat if the root is `/mnt/P` and the path had `/mnt/P/projects/mnt/P/files`? This should only replace the actual exact beginning? What if the root was just `/projects` or `/share` - no idea what someone comes up with on unix.\r\n \r\nAlso, what's ensuring the path dividers `/` or `\\` are the same - and path case sensitivity on some platforms?\r\n\r\nI feel like we might need a dedicated safer method here?\r\n\r\nShould this instead be using [`anatomy.find_root_template_from_path`](find_root_template_from_path)? \r\n\r\n```python\r\nanatomy = context.data[\"anatomy\"]\r\nresult, template = anatomy.find_root_template_from_path(config)\r\n```\r\n\r\nWhat's the reason it should only ever allow replacement of the work root?\r\n\r\n---\r\n\r\nAlso, another question - why are we formatting the additional data here like this instead of the way the colorspace config data actually gets applied too?\r\n\r\n`colorspaceTemplate` only exists in this code - why not directly acquire the data in the way we're [setting them](https://github.com/ynput/OpenPype/blob/f037074747d040caf12b9af565650a8ae6d32bf3/openpype/modules/deadline/plugins/publish/submit_publish_job.py#L559-L567)?\r\n\r\n## Issue with colorspace workflow in job submitter itself\r\nSince the sollution was developed at the moment when colorspace data setter abstraction were not finalized to all requirements needed for [Maya ACES worlfow](https://github.com/ynput/OpenPype/pull/4340), the worklfow should be improved. \r\n\r\nActual code is collecting data into  `additional_data` as required keys in instance.data and then those data are used as required keys in representation data assebly function. At the time of this issue was created, https://github.com/ynput/OpenPype/pull/4556 was in the review and it is introducing colorspace workfow as mixin parent class so we can enhance the submitter plugin with it and use its functionality for the purpose of representation infusion with colorspace data. \r\n\r\nAnother point is if we should be storing Display and View at instance data or rather in context data. I believe it should be instance level so we avoid an issues at editorial publishing. But config data should be stored at context data for sure. \r\n\r\n\r\n[cuID:[OP-5159](https://app.clickup.com/t/861mej32c)]",
        "url": "https://github.com/ynput/OpenPype/issues/4560"
    },
    {
        "number": 4562,
        "title": "Settings: higher version not shown ",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThere is no visual feedback in Settings if the version used for saving the settings is higher than the one used for opening the settings.\r\n\r\nWe only show the version if it is equal or lower, but not if it is higher. \r\n\r\nIt is actually much more important to see the higher versions as it is a reason why they are not used and we should have visual information about it.\r\n\r\n\r\nNo information at all\r\n<img width=\"261\" alt=\"image\" src=\"https://user-images.githubusercontent.com/352795/222495284-23851843-7958-4783-80ce-2e0423a0b518.png\">\r\n\r\n\r\n<img width=\"261\" alt=\"image\" src=\"https://user-images.githubusercontent.com/352795/222495434-0aecbf9b-1705-4d62-8f99-a2be32b33e1a.png\">\r\n\r\nif the version is equal all lower we have all info and warning\r\n<img width=\"276\" alt=\"image\" src=\"https://user-images.githubusercontent.com/352795/222497862-8ec0fa70-c968-42c2-b0e2-44b7b07af772.png\">\r\n\r\n\n\n\n[cuID:[OP-5164](https://app.clickup.com/t/861mekzvx)]",
        "url": "https://github.com/ynput/OpenPype/issues/4562"
    },
    {
        "number": 4564,
        "title": "Kitsu integration stores unnecessary and irrelevant data in OPs DB",
        "body": "**Running version**\r\n3.15.2-nightly.3\r\n\r\n**Describe the bug**\r\nKitsu integration stores unnecessary and irrelevant data in OPs database.\r\nIt currently stores ~150+ lines of data while it should only need 1, the zou ID.\r\n\r\n**To Reproduce**\r\nSync data with Kitsu. Check any asset in OP's database and you'll see a lot of extra data not needed for OP operation.\r\n\r\n**Expected behavior**\r\nThe syncing and creation of OP data should only save the zou ID.\r\nCurrently the ID is saved under doc[\"data\"][\"zou\"][\"id\"] but maybe it would be better to save it as doc[\"data\"][\"zou_id\"] as no other information should live inside of the zou dict.\r\n\r\n`update_op_with_zou.py` should save only the zou ID of any asset to OPs database.\r\n`sync_service.py` should work with only the zou ID. Currently it's using and saving a lot of other data to OPs database.\r\nIf doc[\"data\"][\"zou\"][\"id\"] is changed to doc[\"data\"][\"zou_id\"], `update_zou_with_op.py` needs to be updated to work with the new location for the zou ID\n\n\n[cuID:[OP-5166](https://app.clickup.com/t/861memfvc)]",
        "url": "https://github.com/ynput/OpenPype/issues/4564"
    },
    {
        "number": 4567,
        "title": "Creator: double click at instance switch to publish tab",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nAt the moment after a instance had been created user is pushed to either click at arrow showing at right frame or click to **publish** tab. It feels nonintuitive sometimes and someone would want to double click at instance to show instance properties in **publish** tab.\r\n\r\n**Describe the solution you'd like**\r\nAdd action at created instances so user can double click and it will show him instance attributes at **publish** tab. \r\n\r\n**Additional context**\r\n![image](https://user-images.githubusercontent.com/40640033/222694147-5288a320-b0af-4855-be93-6aac51d28998.png)\n\n\n[cuID:[OP-5180](https://app.clickup.com/t/863g6ezr3)]",
        "url": "https://github.com/ynput/OpenPype/issues/4567"
    },
    {
        "number": 4581,
        "title": "Fusion: Load and extract with managed colorspaces",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nSince Color Management with imageio settings has now gotten some decent attention in OpenPype it's time to fully support the logic in Fusion too and consider how color spaces get loaded and extracted in a way that it can be relied on in production.\r\n\r\nThe issue is with automating it 100% is that it takes the flexibility out of production. Additionally Fusion doesn't require colorspace metadata or even conversions to be done at all. You can drop down an OCIO node but nothing really ensures you are doing the right thing.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI kind of asked this on discord:\r\n> I was just wondering for the case where we'd want to try and make sure we store what colorspace the output file is with our publishes - like what would be a technical correct way to do so in Fusion.\r\n\r\nOne of the answers was:\r\n> It's the beauty and the curse of Fusion. 100% control of the colors yourself\r\n> There is no automated way to know what color space an image is using. It's up to the user to take care of that.\r\n> Most of the time you can check the metadata and it will tell you but it's not always there and it's not OCIO names\r\n> What might be the best solution would be a custom macro (like nuke does with its custom gizmo) that contains a saver node + an OCIO node.\r\n> That way we can list all the available OCIO color spaces that the user can pick from to tell OP what IDT the saver is getting\r\n\r\nAnyway, we can also use the Nuke implementation as a reference and consider what we've learned there in production with OpenPype too.\r\n\r\nBut a start would be implementing [what's described here on Discord](https://discord.com/channels/517362899170230292/1081627194700345434/1082233783241154602) but then using the new Mixin class from this PR https://github.com/ynput/OpenPype/pull/4556 - specifically:\r\n\r\n\r\n1. Modify the render_local.py extractor to work with Extract OIIO Transcode mixin logic\r\n2. Add the required colorspace after representation creation:\r\n```python\r\n        self.set_representation_colorspace(\r\n            repre,\r\n            instance.context,\r\n        )\r\n```\r\n\r\n3. Set project setting defaults or specific ones needed for your production. Defaults might be a bit too much, especially this example.\r\n\r\n---\r\n\r\n_**Example**_\r\n\r\nPurely as an example these settings came up by @EmberLightVFX [on discord](https://discord.com/channels/517362899170230292/1081627194700345434/1082233783241154602):\r\nIn the settings, under `project_settings/global/imageio/file_rules/rules`:\r\n- Regex pattern: `.*`\r\n- Colorspace name: `ACES - ACEScg`\r\n- File extension: `exr`\r\n\r\nUnder `project_settings/global/publish/ExtractOIIOTranscode/profiles/0/outputs/sequence/`:\r\n- Colorspace: `Output - sRGB`\r\n\r\n---\r\n\r\n**Additional context**\r\n\r\n- Came up on Discord [here](https://discord.com/channels/517362899170230292/1081627194700345434/1082292764030537818)\r\n- Likely might need to use the new \r\n\r\n\r\n[cuID:[OP-5203](https://app.clickup.com/t/8677k9r8e)]",
        "url": "https://github.com/ynput/OpenPype/issues/4581"
    },
    {
        "number": 4593,
        "title": "Scene Inventory: Cherry Picking hierarchy error for new style hosts",
        "body": "**Running version**\r\n3.15.2-nightly.4\r\n\r\n**Describe the bug**\r\n\r\n[This particular line of code](https://github.com/ynput/OpenPype/blob/develop/openpype/tools/sceneinventory/model.py#L211) for the Scene Inventory / Manager will fail for most hosts and especially new style hosts since `host.pipeline` isn't a thing on it. \ud83d\ude42\r\n\r\nYou'll hit this error if you \"Cherry Pick\" in the loader. (I've personally never used that, but maybe others do?) \r\n\r\nThe only host having a [`update_hierarchy` function implemented is Blender](https://github.com/ynput/OpenPype/blob/79e6de15b56ac9c3b2c60a1278b09958df1d67e3/openpype/hosts/blender/api/pipeline.py#L379-L406\r\n). It's the only update_hierarchy function in the codebase \ud83d\ude42\r\n\r\n- Is cherry-picking still ever a thing?\r\n- Are hierarchies like that in the scene inventory a thing? And where is it used in OP?\r\n\r\nDoesn't seem like it's getting much use? It originates from Avalon, see the [Avalon Hierarchy View PR](https://github.com/getavalon/core/pull/353).\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to a new style host, e.g. houdini, nuke, after effects\r\n2. Go to Scene Inventory\r\n3. Right click on the child item, a specific container, and then click Cherry Pick.\r\n4. Refreshing will then report an error\r\n\r\nExample error:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"S:\\openpype\\OpenPype\\openpype\\tools\\sceneinventory\\window.py\", line 156, in refresh\r\n    self._model.refresh(**kwargs)\r\n  File \"S:\\openpype\\OpenPype\\openpype\\tools\\sceneinventory\\model.py\", line 211, in refresh\r\n    if not hasattr(host.pipeline, \"update_hierarchy\"):\r\nAttributeError: 'FusionHost' object has no attribute 'pipeline'\r\n```\r\n\r\n**Expected behavior**\r\n\r\nNo errors.\r\n\r\n**Additional context**\r\n\r\nHierarchy views and cherry picking originate from Avalon, see [this Avalon Hierarchy View PR](https://github.com/getavalon/core/pull/353)\r\n[Bug reported on Discord](https://discord.com/channels/517362899170230292/517382145552154634/1083106063819218945)\r\n\r\n[cuID:[OP-5212](https://app.clickup.com/t/861mfkkqd)]",
        "url": "https://github.com/ynput/OpenPype/issues/4593"
    },
    {
        "number": 4598,
        "title": "Staging versions aren't handled as expected by default.",
        "body": "**Running version**\r\n3.15.0\r\n\r\n**Describe the bug**\r\nWhen deploying staging versions as described in the documentation (therefore having `+staging` at the end of their version number), and while having both `production version` and `staging version` set to `Latest` in the studio settings, Openpype does not properly distinguishes staging and production versions, which can result in staging version being loaded when the `--use-staging` argument is NOT used, with no indication that a staging version is in use. No orange splash screen, no orange tray menu, no warning (except by checking version number which users don't systematically do).\r\n\r\nI'm aware it is possible to make staging versions work by manually setting `Staging version` and `Production version`, but the documentation does not mention it as a necessary step.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Have `Staging version` and `Production version` set to Latest\r\n2. Release a staging version with a version number higher than the current production version\r\n3. Run OpenPype without the `--use-staging` argument\r\n4. Staging version is loaded, splash screen and tray menu are green.\r\n\r\n**Expected behavior**\r\n`Latest` setting should make the difference between staging versions and production versions, or at least the documentation should mention that version settings should be manually set when working with staging versions.\r\nIf a staging version is loaded, splash screen and tray menu should be orange even `--use-staging` argument has not been used.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 11\r\n - Host: Irrelevant to this issue.\r\n\n\n\n[cuID:[OP-5214](https://app.clickup.com/t/861mfzvb8)]",
        "url": "https://github.com/ynput/OpenPype/issues/4598"
    },
    {
        "number": 4608,
        "title": "Global: OpenPype fails to launch if environment has value with { } tokens",
        "body": "**Running version**\r\n\r\n3.15.2-nightly.6\r\n_but the issue has been present for a long time_\r\n\r\n**Describe the bug**\r\n\r\nLaunching OpenPype with an environment variable in your local environment containing a value with `{ }` tokens will fail to launch OpenPype.\r\n\r\nThe error (from an older version):\r\n```python\r\n~ ./openpype_gui \r\n>>> run disk mapping command ...\r\n>>> Logging to server is turned ON\r\n*** Cannot get OpenPype path from database.\r\n>>> Finding latest version with [ 3.14.6 ]\r\n  - booting version: 3.14.6\r\n>>> Injecting OpenPype version to running environment  ...\r\n>>> Validating version [ /mnt/apps/software/openpype/openpype-3.14.6 ]\r\n--- version is valid\r\n>>> loading environments ...\r\n  - for Avalon ...\r\n  - global OpenPype ...\r\nTraceback (most recent call last):\r\n  File \"/mnt/apps/software/openpype/openpype-3.14.6/dependencies/acre/lib.py\", line 48, in partial_format\r\n    f = formatter.vformat(s, (), mapping)\r\n  File \"/root/.pyenv/versions/3.7.12/lib/python3.7/string.py\", line 190, in vformat\r\n  File \"/root/.pyenv/versions/3.7.12/lib/python3.7/string.py\", line 200, in _vformat\r\nValueError: unexpected '{' in field name\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/openpype/.venv/lib/python3.7/site-packages/cx_Freeze/initscripts/__startup__.py\", line 113, in run\r\n  File \"/opt/openpype/.venv/lib/python3.7/site-packages/cx_Freeze/initscripts/Console.py\", line 15, in run\r\n  File \"start.py\", line 1214, in <module>\r\n  File \"start.py\", line 1122, in boot\r\n  File \"start.py\", line 290, in set_openpype_global_environments\r\n  File \"/mnt/apps/software/openpype/openpype-3.14.6/dependencies/acre/core.py\", line 76, in compute\r\n    env[key] = lib.partial_format(env[key], data=data)\r\n  File \"/mnt/apps/software/openpype/openpype-3.14.6/dependencies/acre/lib.py\", line 55, in partial_format\r\n    f = re.sub(m, m.format(**data), f)\r\nValueError: Sign not allowed in string format specifier\r\n```\r\n\r\n##### Linux\r\n\r\nThis is something which can quite trivially happen on Linux due to storing BASH functions in the environment being explained in this [OP discord thread](https://discord.com/channels/517362899170230292/1042791013548314635).\r\n\r\nE.g. a function could be exported like:\r\n```bash\r\nfunction restartworker { /opt/Thinkbox/Deadline10/bin/deadlinecommand RemoteControl `hostname -i` LaunchSlave `hostname -s`;}\r\nexport -f restartworker\r\n```\r\n\r\nResulting in environment variable value of:\r\n```bash\r\nBASH_FUNC_restartworker%%=() {  /opt/Thinkbox/Deadline10/bin/deadlinecommand RemoteControl `hostname -i` LaunchSlave `hostname -s`;}\r\n```\r\n\r\nA workaround for this Linux issue could be clearing the environment of bash functions as you launch OpenPype:\r\n```bash\r\nfor func in `declare -x -F | sed 's/declare -fx//'`;do unset -f $func;done && ./openpype_gui\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set an environment variable like `myvar = hello {world}` or export a bash function in Linux like above.\r\n2. Try and launch OpenPype and DCCs.\r\n\r\n**Expected behavior**\r\n\r\nIt should be able to launch fine.\r\n\r\nThe local environment value should be ignored and not re-formatted. We should expect the value is written in a way that it was intended to be and if possible be left untouched.\r\n\r\n**Additional context**\r\n\r\n- [1st Report on Discord Thread by @Minkiu](https://discord.com/channels/517362899170230292/1042791013548314635)\r\n    - [Also mentioned here](https://discord.com/channels/517362899170230292/890894521817260052/1084575730819661924)\r\n- [2nd Report on Discord Thread](https://discord.com/channels/517362899170230292/1081349077989605457)\n\n\n[cuID:[OP-5218](https://app.clickup.com/t/85zrrd366)]",
        "url": "https://github.com/ynput/OpenPype/issues/4608"
    },
    {
        "number": 4620,
        "title": "Missing Local Settings documentation.",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nMissing `Local Settings` documentation here `admin_settings_local`.\n\n\n[cuID:[OP-5228](https://app.clickup.com/t/85zrrmu4r)]",
        "url": "https://github.com/ynput/OpenPype/issues/4620"
    },
    {
        "number": 4628,
        "title": "Hiero: broken vertical rename in clip creator",
        "body": "**Running version**\r\n3.15.2\r\n\r\n**Describe the bug**\r\nHiero's feature for vertical created instances is broken. Look to screenshots for more information. Tag data are also wrong since only pointed main track should have set `heroTrack` to **true** and other tracks should have `heroTrack` to **false**. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. create multiple layers and name each with unique name - this will be inherited as variant (subset_name: familyVariant)\r\n2. add video materials in vertical stacking - each column is target shot\r\n3. make sure main (first bottom) layer clip is the longest video\r\n4. each clips above should somehow fit under the main clip from bottom\r\n5. select all videos and open OpenPype / Create / Clip instance\r\n6. in dialogue define name and make sure  vertical is enabled with selected main layer.\r\n\r\n**Expected behavior**\r\nEach column should share the same name (be aware of false track name issue once shot tempate is having `{track}` token). \r\nEach clip Tag data should respect the hieroTrack bool to be set regarding the define main track.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/40640033/225271663-aa601e7f-92a0-4bf8-a4d5-6995a1ee5013.png)\r\nWrong vertical rename\r\n\r\n![image](https://user-images.githubusercontent.com/40640033/225271757-46629291-db15-4479-9ba9-1e94cb6b6a35.png)\r\nCorrect vertical rename - notice the names in columns are the same\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. windows]\r\n - Host: [e.g. Maya, Nuke, Houdini]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\n\n\n[cuID:[OP-5235](https://app.clickup.com/t/85zrruph0)]",
        "url": "https://github.com/ynput/OpenPype/issues/4628"
    },
    {
        "number": 4630,
        "title": "Configurable cap limits on logs collection",
        "body": "## Problem\r\n\r\nCurrent parameters for log collection are hard-coded here:\r\n\r\nhttps://github.com/ynput/OpenPype/blob/0cb3585d91e63352dff24a861c0a19fc3a96425b/openpype/lib/log.py#L466-L472\r\n\r\nBut it should be configurable in the Settings as default options we have there are rather limited.\r\n\n\n\n[cuID:[OP-5240](https://app.clickup.com/t/861mgu5rr)]",
        "url": "https://github.com/ynput/OpenPype/issues/4630"
    },
    {
        "number": 4632,
        "title": "Maya: Render Settings Validation Loop",
        "body": "**Describe the bug**\r\nWhen repairing a failed render instance, the user can get into a validation loop cause the repair is not fixing the issue.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Setup render instance in Maya with Arnold without renderpasses.\r\n2. Ensure file name prefix is; `<Scene>/<RenderLayer>/<RenderLayer>_<RenderPass>`\r\n3. Publish/Validate to get `Render Settings` to fail, and use the repair action.\r\n4. Refresh and try step 3 again.\r\n\r\n**Expected behavior**\r\nIf a repair action is available on a validator, it should repair what is expects to be wrong.\r\n\r\n**Additional context**\r\nIssue is that validator checks whether the render is `multipart` but the repair action does not.\r\n\n\n\n[cuID:[OP-5241](https://app.clickup.com/t/861mgu955)]",
        "url": "https://github.com/ynput/OpenPype/issues/4632"
    },
    {
        "number": 4636,
        "title": "Standalone: Unchecking \"Next Available Version\" has no effect",
        "body": "**Running version**\r\n3.14.7\r\n\r\n**Describe the bug**\r\nWhile using the Standalone Publisher, unchecking \"Next Available Version\" and putting in a custom version number has no effect on the actual published version.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Launch Standalone Publisher.\r\n2. Select Job, Asset, Task and drag in any files to publish.\r\n3. While \"Next Available Version\" is checked, note down the displayed version number.\r\n4. Uncheck \"Next Available Version\", put in a much greater number in version box.\r\n5. Hit publish.\r\n6. Pyblish window will show it's attempting to publish as the original \"Next Available Version\", not the much greater number you put in.\r\n7. Published files will have the original version number, instead of the much greater number you put in.\r\n\r\n**Expected behavior**\r\nUnchecking \"Next Available Version\" and putting in your custom version in Standalone Publisher should publish files as your custom version.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/25937912/225446068-a7c59301-809d-4581-a239-4ed546064299.png)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Host: Standalone Publisher\r\n\r\n**Additional context**\r\nDid some digging.\r\nin [widget_components](../blob/3.14.7/openpype/tools/standalonepublish/widgets/widget_components.py) up to `cli_publish`, the UI is reporting the correct custom version number. It dumps it in a json file, then after publishing, it read the json file to report back it has published your custom version. Regardless of what pyblish actually published. The json file is passed on as an env var called `SAPUBLISH_INPATH`.\r\n\r\nBut in pyblish, [collect_anatomy_instance_data](../blob/3.14.7/openpype/plugins/publish/collect_anatomy_instance_data.py) doesn't actually read the json file. It collects the instance data on its own, resulting in just publishing in \"Next Available Version\"\r\n\r\nI updated [collect_anatomy_instance_data](../blob/3.14.7/openpype/plugins/publish/collect_anatomy_instance_data.py) from line 220 to this. \r\n\r\n```python\r\n                latest_version = instance.data[\"latestVersion\"]\r\n                if latest_version is not None:\r\n                    version_number += int(latest_version)\r\n\r\n            # check for Standalone publisher custom version\r\n            try:\r\n                sa_publish = os.environ['SAPUBLISH_INPATH']\r\n                sa_json = json.load(open(sa_publish))\r\n                if sa_json['version']:\r\n                    version_number = sa_json['version']\r\n            except KeyError:\r\n                pass\r\n\r\n            anatomy_updates = {\r\n                \"asset\": instance.data[\"asset\"],\r\n                \"family\": instance.data[\"family\"],\r\n                \"subset\": instance.data[\"subset\"],\r\n                \"version\": version_number\r\n            }\r\n```\r\n\r\nPyblish then attempt to detect the `SAPUBLISH_INPATH`, then read the version number in it, which has the intented custom version number from Standalone Publisher.\n\n\n[cuID:[OP-5247](https://app.clickup.com/t/861mgvkp7)]",
        "url": "https://github.com/ynput/OpenPype/issues/4636"
    },
    {
        "number": 4641,
        "title": "Implement Rez for Ayon",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nAyon and even OpenPype had to handle dependencies, versions of packages and distributing vendored binaries. With Ayon resolving versions and its dependencies becomes more dynamic due to being able to mix and match addons which in itself can require specific versions of other addons.\r\n\r\nAs a part of this some of the work for Ayon has been involving resolving these dependencies and building an environment for launching a specific version of Ayon, etc. and has with OpenPype (v3) involved managing environments for Applications and Tools when launching even specific assets in a project.\r\n\r\nThis addon (package) management and dependency resolving with version ranges is exactly what [Rez](https://github.com/AcademySoftwareFoundation/rez) is built to solve and I feel like before we set of implementing complex resolving algorithms for the addons and their 'dependencies' we should maybe avoid time spent there and instead spent time on relying on Rez as much as we can.\r\n\r\nBy adopting Rez we can also get other benefits like:\r\n- Setting up a central repository of package versions (e.g. ffmpeg, ocio, otio, python packages) without requiring each build of Ayon to embed all those dependencies.\r\n- It can support local caching of having the dependencies on a network share but copy certian packages (or all) locally to improve runtime performance. This would then also automatically become possible for things like \"tools\" where e.g. redshift could be loaded through ayon configuration and its resolving could use that Redshift locally to improve the startup running time for the renderer.\r\n- Since Rez is built to resolve dependencies like this we can use its feature set to also help debug dependency problems, etc. without again having to re-write and manage our own.\r\n- It can even help the \"version resolving\" we are using for OpenPype itself currently by turning OpenPype ZIP packages into rez packages, etc. (e.g. at deployment time or alike) to avoid maintaining our own version resolving logic and be able to rely on Rez's mechanisms which have a much stronger backbone in production already.\r\n\r\n**Describe the solution you'd like**\r\n\r\nHave Ayon use `rez` to resolve the environment to launch an application in would be one first step.\r\n\r\nI'd say the final goal would be to be able to run even Ayon itself through rez so from there you could e.g. pick a particular Ayon version to start with too - but that doesn't have to be a first priority I'd say. Being able to pick Ayon version through `rez` would open up e.g. Deadline resolving to a specific ayon version to also just move through `rez` to get the right package.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nWe've had Applications and Tools in OPv3 but with separating all addons for Ayon and them versioning independently with dependencies (requirements) to other addons will start complicating the version resolving logic that needs to be written.\r\n\r\nI'd say we are getting to a point where Rez might be best way forward into development time and what we gain from it in the end.\r\n\r\n**Additional context**\r\n\r\n### Rez feature requests have come up before\r\n\r\nEven before Ayon having Rez support has come up as a request multiple times by multiple users on Discord:\r\n- @instinct-vfx [mentioned it recently with regards to Ayon and automatic downloads of addons](https://discord.com/channels/517362899170230292/890894521817260052/1085821403665805405)\r\n- [A Rez thread on Ynput community discord](https://discord.com/channels/517362899170230292/954098029135282307) showing interest from @davidlatwe @Tilix4 @Minkiu with some developers mentioning they had working prototypes with OpenPype like @Anti-Distinctlyminty\r\n- [Some implementation discussion here](https://discord.com/channels/517362899170230292/954098029135282307/1073159241751347201) and [here](https://discord.com/channels/517362899170230292/563751989075378201/1012723921113587732)\r\n- [There have also been requests to keep it separate with some answers by @mkolar at the time about OP philosophy](https://discord.com/channels/517362899170230292/913725331389710337)\r\n- [And last but not least some questions about Rez package versus JSON configs from back in 2020](https://discord.com/channels/517362899170230292/517382145552154634/770726352169074719)\r\n\r\n### Rez is supported by Academy Software Foundation\r\n\r\nRez has ASWF support and used by a variety of bigger studios in the animation industry.\r\n\r\n\r\n[cuID:[OP-5252](https://app.clickup.com/t/85zrrzwwg)]",
        "url": "https://github.com/ynput/OpenPype/issues/4641"
    },
    {
        "number": 4642,
        "title": "Make customizing workfile template during project usable with existing workfiles",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nFor a long running project we noticed that the workfile template that we're using generates insanely long filenames in some cases and as such we want to change the template. However, doing so would break workfiles tool for any assets that had been worked on because original files had a different template and thus wouldn't be detected as existing versioning using the new template.\r\n\r\nAs such, when saving a new version the tool would think it needs to create a version 1.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI was thinking that whenever changing the template or whenever generating the first workfile on an asset (or even task) that it could store the asset's workfile template so that by then it's locked for that asset. It'd be similar to how a publish stores it template with the representation, etc.\r\n\r\nOR:\r\n\r\nAnother approach could be that instead of storing it on the Asset is to register workfiles in the database and to store the templates there with the registered workfiles, and then when detecting existing workfiles in the Workfiles tool to query against files on disk but also those in database. This could make it so that the template changes midway for an asset however - but still version detection is as expected.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nAlternatives:\r\n\r\n- Don't change the workfile template. :)\r\n- Change the workfile template and update all existing workfiles using a python script to adhere to the new template. (Hacky, but not impossible)\r\n\r\n**Additional context**\r\n\r\nThis could be a feature request of which we could say: \"Don't change the template after production started.\" Which in a way I guess is also a decent way of looking at it. Do it right, right away. :) The complexity in logic/code that might come from having a different workfile template per asset should be worth whatever this would solve and maybe it isn't.\n\n\n[cuID:[OP-5261](https://app.clickup.com/t/861mh03a2)]",
        "url": "https://github.com/ynput/OpenPype/issues/4642"
    },
    {
        "number": 4659,
        "title": "Publisher: events from host",
        "body": "## Feature\r\n\r\nIt would be nice to have support for events coming from host, triggering specific actions in Publisher. For example:\r\n\r\nMaya render setup could notify Publisher about changes. When new render layer is created, method on Creator in publisher could be triggered to add new instance (or modify attributes) and so on. It would help with situations where opened publisher doesn't reflect current state of the scene until it is refreshed and there is no way to notify artist to do so.\r\n\n\n\n[cuID:[OP-5286](https://app.clickup.com/t/85zrtdgcn)]",
        "url": "https://github.com/ynput/OpenPype/issues/4659"
    },
    {
        "number": 4661,
        "title": "Review: Output as separate images for 'sequence of stills' instead of video",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen generating a reviewable output, like e.g. reviews from renders or reviews from playblasting in Maya it appears to be impossible to treat the output as a sequence of stills. (Or we couldn't find the setting/feature at least).\r\n\r\nSo basically a reviewable could output any of:\r\n- A video file\r\n- An image (a still)\r\n- A sequence of images (multiple stills)\r\n\r\n**Use case**\r\n\r\nWe sometimes produce multiple poses or stills in a single Maya scene to be able to quickly set up and render say 20 poses for a character. However, with the current review system the generated previews will always be a video file uploaded to e.g. Ftrack, etc.\r\n\r\nSimilarly a single frame reviewable would become a pretty insanely quickly looping video attachment on Ftrack. \r\n\r\n**Describe the solution you'd like**\r\n\r\nIt's hard to figure out exactly what would be the perfect solution. Becuase technically reviewing a video file and going frame by frame to e.g. draw notes over the poses would work fine (and maybe even better than reviewing 20 stills in some applications). \r\n\r\nHowever, it tends to become a slightly different story if those reviewables also need to pass the client's eyes since they are expecting to see stills and not a video file of 20 frames.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nAn alternative would be to set up separate instances where each instance is set to a single frame so they are considered to be just the image. Or to ignore that it's a video file and maybe share extracts of that for deliveries (or find the image output of e.g. a playblast and share that instead from disk)\r\n\n\n\n[cuID:[OP-5293](https://app.clickup.com/t/861mhk7p3)]",
        "url": "https://github.com/ynput/OpenPype/issues/4661"
    },
    {
        "number": 4679,
        "title": "Photoshop: Refactor Collect Review to new publisher as Creator",
        "body": "**Running version**\r\n\r\n3.15.3-nightly.3\r\n\r\n**Describe the bug**\r\n\r\nThe review instance for Photoshop still needs to be converted to use the Creator system of the new publisher. Currently the Instance gets generated _during_ publish and not during the new publisher's creator stage. As such, the review instance can't be toggled on/off in the publisher UI.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to photoshop, starting publishing something.\r\n2. It'll now always create a review instance during publish (if it's enabled in project settings)\r\n3. The instance does not show before publishing and can't be enabled/disabled\r\n\r\n**Expected behavior**\r\n\r\nAllow enabling/disabling the instance.\r\n\r\nIf we want to have the instance always exist it should likely be generated similar to Workfile creator.\r\n\n\n\n[cuID:[OP-5347](https://app.clickup.com/t/861mj3g57)]",
        "url": "https://github.com/ynput/OpenPype/issues/4679"
    },
    {
        "number": 4681,
        "title": "Standardize possibility to disable single profile.",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nWe provide [Profile filters](https://openpype.io/docs/project_settings/settings_project_global#profile-filters) in Settings to decide on behavior depending on combination of some filtering criteria (host, family, tasks etc).\r\n\r\nThe profile might be carrying information \"do/do not do something for this combination (eg. \"do not send to Ftrack for this family but send for all the others in Nuke >> you would have 2 profiles, general just with host == \"Nuke\" and \"Send to Ftrack\" , secondary (host==Nuke, task==animation and \"Send to Ftrack\" to False). (see https://openpype.io/docs/module_ftrack#collect-ftrack-family)\r\n\r\nIt might also carry information \"ignore this profile for now (because of debugging, temporarily, whatever) and use parent profile if applicable\"\r\n\r\nMaybe with 'active' toggle https://user-images.githubusercontent.com/40640033/225697715-d8e56cd8-d5c4-4d48-af3c-410e28b75fdf.png\r\n\r\n'Active' toggle would mark profile to be ignored, eg. would never be selected even if filtering condition matches the most for it.\r\n\r\n**Describe the solution you'd like**\r\nWe should probably standardize both use cases or figure better design.\r\n\n\n\n[cuID:[OP-5348](https://app.clickup.com/t/861mj3hq3)]",
        "url": "https://github.com/ynput/OpenPype/issues/4681"
    },
    {
        "number": 4689,
        "title": "Publisher: Capture changes in creation phase",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nCapture changes happene in creation phase of Publisher.\r\n\r\n**Describe the solution you'd like**\r\nSince this PR https://github.com/ynput/OpenPype/pull/4676 there is a Save button which saves changes, but without capturing changes we don't have any idea to know if there were any changes. The biggest issue is on closing the window when we should ideally ask if user want to save the changes he made -> that is not automatically triggered which is not ideal. Also we could disable Save button if there are not any changes.\r\n\n\n\n[cuID:[OP-5355](https://app.clickup.com/t/863gac7ux)]",
        "url": "https://github.com/ynput/OpenPype/issues/4689"
    },
    {
        "number": 4690,
        "title": "Publisher: Avoid confirm button of context change",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nAvoid requirement of Confirming change of context on instances. When context is changed on instance it is required to confirm the changes -> that does not save the changes yet. Context changes are variant, asset or task change. All of the context changes can change subset name which may also cause that subset name cannot be created. For example if task is unset but subset name tempalte reuqires task it tells user on confirm that the change cannot be made because it would cause invalid instance.\r\n\r\n**Describe the solution you'd like**\r\nThe subset name update must not happen on save of changes because save of changes can also automatically happen on triggering of publish which is too late. Realtime subset name update on each change would slowdown the work with UI massivelly. Trigger update subset name as deffered callback on any of context value change may be \"strange\" for user that it can change instance as invalid after he did it and changed selection, he may also meanwhile click on publish/save which has to be captured and probably give user option to resolve the issue.\r\n\r\n### Possible solution\r\nOn change of any context value, disable publish buttons and disable change of selection, until subset names for selection are recaculated. Value change of context values is deffered by ~500ms so it is not blocking UI a lot. When subset name is recalculated, selection is enabled again and publish buttons are enabled (if there are enabled only valid instances).\n\n\n[cuID:[OP-5356](https://app.clickup.com/t/863gacc4r)]",
        "url": "https://github.com/ynput/OpenPype/issues/4690"
    },
    {
        "number": 4696,
        "title": "Maya: Move capture.py to host directory.",
        "body": "**Describe the solution you'd like**\r\nSince `capture.py` is imports `maya.cmds` there is no reason to make it available to other hosts.\n\n\n[cuID:[OP-5358](https://app.clickup.com/t/861mj7xxq)]",
        "url": "https://github.com/ynput/OpenPype/issues/4696"
    },
    {
        "number": 4703,
        "title": "Maya: Remove deprecated extract ass scene",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nLooks like Extract Ass logic in Maya is not used and maintained but the code is still there. By quick scavanger through the code it would not work anymore. Changes are related to Deadline's Submit Maya where is condition for `\"assscene\"` which is not set anywhere. That triggers `_get_arnold_export_payload` which is importing `export_maya_ass_job` script in `openpype/scripts/export_maya_ass_job.py`. The script would not work with current openpype logic.\r\n\r\n**Describe the solution you'd like**\r\nRemove the condition from submit plugin and all related code (script file).\n\n\n[cuID:[OP-5363](https://app.clickup.com/t/863gamu2e)]",
        "url": "https://github.com/ynput/OpenPype/issues/4703"
    },
    {
        "number": 4706,
        "title": "Maya: Set Context fails for new scene for V-Ray renderer",
        "body": "**Running version**\r\n\r\n3.15.2\r\n\r\n**Describe the bug**\r\n\r\nWhen trying to set the resolution in Maya using V-Ray renderer but there's no VRaySettings node (yet?) then an error will occur in the code. This will for example happen on \"new scene\" when using V-Ray as renderer.\r\n\r\n```\r\nfile -f -new;\r\n# openpype.hosts.maya : Running callback on new..\r\n# openpype.hosts.maya.api.lib : Setting scene FPS to: 'film'\r\n# Error: openpype.hosts.maya.api.lib : Can't set VRay resolution because there is no node named: `vraySettings` # \r\n# openpype.hosts.maya.api.lib : Setting scene resolution to: 1920 x 1080\r\n# Warning: EventCallback : Failed to execute event callback < EventCallback - on_new > C:\\Users\\Dillon\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.2\\openpype\\hosts\\maya\\api\\pipeline.py\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Dillon\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.2\\openpype\\lib\\events.py\", line 195, in process_event\r\n    callback()\r\n  File \"C:\\Users\\Dillon\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.2\\openpype\\hosts\\maya\\api\\pipeline.py\", line 630, in on_new\r\n    lib.set_context_settings()\r\n  File \"C:\\Users\\Dillon\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.2\\openpype\\hosts\\maya\\api\\lib.py\", line 2184, in set_context_settings\r\n    reset_scene_resolution()\r\n  File \"C:\\Users\\Dillon\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.2\\openpype\\hosts\\maya\\api\\lib.py\", line 2152, in reset_scene_resolution\r\n    set_scene_resolution(width, height, pixelAspect)\r\n  File \"C:\\Users\\Dillon\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.2\\openpype\\hosts\\maya\\api\\lib.py\", line 2062, in set_scene_resolution\r\n    \"{}.{}\".format(control_node, aspect_ratio_attr), deviceAspectRatio)\r\nRuntimeError: setAttr: No object matches name: defaultResolution.aspectRatio\r\n```\r\n\r\nIt's because [it continues here](https://github.com/ynput/OpenPype/blob/a74e62a482ae0e8a1ef081cc3a85d3aa1a173258/openpype/hosts/maya/api/lib.py#L2052-L2054) but then using the wrong attribute name (that's only valid for the v-ray node).\r\n\r\n> It's because `VRaySettings` node does not exist yet, but it still continues trying to set the resolution but then with the wrong attribute on the `defaultResolution`.\r\n> Because it had already overridden the `aspect_ratio_attr` for V-Ray but that's not the valid attribute for the default resolution node.\r\n\r\nWe should likely best case scenario force the VRaySettings node creation so that if V-Ray is the renderer but it did not exist yet that we'd create it.\r\n\r\n[Issue originally reported by Dillon Sinden (Lucan) on Discord](https://discord.com/channels/517362899170230292/1088411966135083030/1088807144020787312)\r\n\r\n**To Reproduce**\r\n\r\n1. Use V-Ray as renderer \r\n    - (It might be that you need to set it as the \"preferred renderer\" in preferences so that the new scene initializes with it directly.)\r\n2. Create new file\r\n\r\n**Expected behavior**\r\n\r\nNo error, resolution should still be correct for V-Ray renderer.\r\n\r\n\r\n[cuID:[OP-5367](https://app.clickup.com/t/861mjda5b)]",
        "url": "https://github.com/ynput/OpenPype/issues/4706"
    },
    {
        "number": 4712,
        "title": "Maya: Xgen groom and lookdev separated.",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nSeparate Xgen groom and lookdev.\r\n\r\n**Describe the solution you'd like**\r\nAt the moment Xgen groom and lookdev needs to happen in the same workfile and published at the same time. This is not necessarily a workflow for all studios, where some would like to separate the grooming and lookdev.\r\n\r\n**Implementation**\r\nSuggestion would be to add support for publishing referenced/loaded Xgen. The workflow would be as follows:\r\n\r\n1. Groom publishes Xgen.\r\n2. Lookdev loads Xgen and add shader.\r\n3. Lookdev publishes the loaded Xgen as a new subset.\r\n\r\nIts important to validate that the lookdev Xgen publish is unique from the groom Xgen, else a cyclical publishing loop occurs, where lookdevs Xgen is loading in the same Xgen its publishing. \n\n\n[cuID:[OP-5371](https://app.clickup.com/t/863gaymmb)]",
        "url": "https://github.com/ynput/OpenPype/issues/4712"
    },
    {
        "number": 4713,
        "title": "Parse texture colorspace and naming on Look Publish",
        "body": "# Parsing texture colorspace and naming on Look Publish\r\n\r\nWe have to transform the texture colorspace to the rendering space on publishing along with the tx file conversion.\r\nWhen assigning a look in production, all tx files should be set to Raw colorspace and color should be fine. \r\n\r\nInstead of using the source texture file names, it would be helpful for archiving if we could have a consistent naming convention for the published tx textures. This could be something like... `{assetname}_tex_{texture_channel}_{version}_{udim}.tx`\r\n\r\n\r\n## **Describe the solution you'd like**\r\nPublished Texture naming could be comprised of the context asset name, the parsed channel and udim from the source name. \r\nIt could also make some color transform deductions based on the source channel name (which would be parsed into a consistent studio convention).\r\n\r\n\r\n## **Describe alternatives you've considered**\r\nIn the past, we have used a cmd script to parse textures before we started shading, this had it's workflow challenges, but I think there is something to be looked into here. We've used a lookup dictionary to detect and set a consistet channel schema and also make some assumptions about the types of channel ie. whether it was scalar data or color information. This automated the colorspace assignment process upon loading the texture into maya. \r\n\r\nThere's an extensive list here, https://github.com/aydinyanik/clarisse_survival_kit/blob/c32f48b0f2a6e1e5611109a19e9dbae03b4c563a/clarisse_survival_kit/settings.py#L8-L24\r\n\r\n### However, here's my dictionary:\r\n```python\r\n# tex_library.py \r\n# Libraries of different parameters for texture processing\r\n# Last Updated: 2019_10_30\r\n\r\nKNOWNCHANNELS = {\r\n\t\t\t\t# Shading\r\n\t\t\t\t('BC', 'basecol', 'basecolour', 'BaseColor', 'base'):\t'basecolor',\r\n\t\t\t\t('C','dif', 'diff', 'col', 'TEX', 'color'):\t'diffuse',\r\n\t\t\t\t('A') : 'albedo',\r\n\t\t\t\t('RFL', 'reflection') : 'reflect',\r\n\t\t\t\t('S', 'specular') : 'spec',\r\n\t\t\t\t('M', 'metallic'):\t'metal',\r\n\t\t\t\t('R', 'roughness', 'rgh'):\t'rough',\r\n\t\t\t\t('G', 'glossiness') : 'gloss', \r\n\t\t\t\t('I', 'ior') : 'ior',\r\n\t\t\t\t('RFR', 'refraction') : 'refract',\r\n\t\t\t\t('B') : 'bump',\r\n\t\t\t\t('N', 'normal', 'norm', 'nrm', 'nor'): 'tnorm',\r\n\t\t\t\t('D', 'displacement', 'displace') : 'disp',\r\n\t\t\t\t('T', 'transparancy', 'trans', 'transp') : 'transp',\r\n\t\t\t\t('VD', 'vector_disp', 'vdm' ,'vector_displace', 'vector_displacement') : 'vdisp',\r\n\t\t\t\t('H') : 'height',\r\n\t\t\t\t('SSS', 'subsurface') : 'ssscol',\r\n\t\t\t\t('SSW', 'subsurface_weight') : 'sssweight',\r\n\t\t\t\t('OP') : 'opacity',\r\n\t\t\t\t('EM', 'emissive', 'emit', 'emission') : 'selfillum',\r\n\t\t\t\t('ANIW', 'anisotropy_weight') : 'anisot',\r\n\t\t\t\t('ANIR', 'anisotropy_rotaion') : 'anisang',\r\n\t\t\t\t# Utilities\r\n\t\t\t\t('WN', 'world_space_normals') : 'wsnorm',\r\n\t\t\t\t('P', 'position'): 'pos',\r\n\t\t\t\t('CA', 'cav') : 'cavity',\r\n\t\t\t\t('CU', 'curvature') : 'curve',\r\n\t\t\t\t('AO', 'ambient_occlusion', 'occ', 'oc') : 'ao',\r\n\t\t\t\t('THK', 'thickness') : 'thick',\r\n\t\t\t\t('RGB', 'alpha', 'matte', 'mask') : 'rgb_matte',\r\n\t\t\t\t('ID') :'id'\r\n\t\t\t\t}\r\n\r\nKNOWNCOLORSPACES = {\r\n\t\t\t\t('srgb'): 'srgb_texture',\r\n\t\t\t\t('outs'): 'out_srgb',\r\n\t\t\t\t('outr'): 'out_rec709',\r\n\t\t\t\t('lin', 'linear'): 'lin_srgb',\r\n\t\t\t\t('raw'): 'raw',\r\n\t\t\t\t('acescg', 'cg'): 'acescg',\r\n\t\t\t\t('acescc', 'cc'): 'acescc'\r\n\t\t\t\t}\r\n\r\nKNOWNSRGBCHANNELS = ('basecolor', 'diffuse', 'albedo', 'reflect', 'refract', 'ssscol', 'selfillum', 'transp')\r\n\r\nKNOWNEXTENSIONS = (\"tiff\", \"tif\", \"TIFF\",\r\n\t\t\t\t\t\"exr\", \"EXR\",\r\n\t\t\t\t\t\"png\", \"PNG\",\r\n\t\t\t\t\t\"bmp\", \"BMP\",\r\n\t\t\t\t\t\"jpg\", \"JPG\", \"jpeg\",\r\n\t\t\t\t\t)\r\n```\r\n\r\n### This was the implementation at the time through cmd with OCIO and maketx:\r\n```python\r\n# eg\r\n# maketx -v -u --oiio --checknan --filter lanczos3 P:\\Production\\01_projects\\rnd\\python_image\\pirate_hat_tex_v02.tif -o P:\\Production\\01_projects\\rnd\\python_image\\pirate_hat_tex_v02_maketx.tif\r\nimport os\r\nimport subprocess\r\nimport argparse\r\n\r\n# in same directory\r\nfrom tex_library import *\r\n\r\nPARMS = r\"-v -u -d half --tile 64 64 --separate --checknan --constant-color-detect --monochrome-detect\"\r\nCOLORCONFIG = os.environ[\"OCIO\"]\r\n\r\nSOURCEDIR = os.getcwd()\r\n\r\nparser = argparse.ArgumentParser(description='Tiled EXR Texture Converter [srgb_texture -> acescg]')\r\nparser.add_argument('-o', '--out_dir', type=str, metavar='', required=False, help='The optional output directory (has to exist)')\r\nparser.add_argument('-lin', '--linear_mode', required=False, action='store_true', help='linear_srgb conversion mode [lin_srgb -> acescg]')\r\nparser.add_argument('-srgb', '--out_srgb', required=False, action='store_true', help='legacy_srgb conversion mode [out_srgb -> acescg]')\r\nparser.add_argument('-r', '--raw', required=False, action='store_true', help='no color transforms [raw -> raw]')\r\n\r\ngroup = parser.add_mutually_exclusive_group()\r\n# group.add_argument()\r\ngroup.add_argument('-a', '--asset_name', type=str, help='asset name for texture name')\r\ngroup.add_argument('-hdri', '--hdri_mode', action='store_true', help='HDRi conversion mode [lin_srgb -> acescg]')\r\nargs = parser.parse_args()\r\n\r\n\r\n\r\n\r\n\r\ndef getFiles(inPath):\r\n\t# get versions\r\n\tfor r, d, f in os.walk(inPath):\r\n\t\t# print (r)\r\n\t\t# print (f)\r\n\t\t# print (f)\r\n\t\tbreak\r\n\r\n\treturn f\r\n\r\n\r\ndef channelParse(channel_name):\r\n\tif channel_name != \"\":\r\n\t\tfor i, i_val in enumerate(KNOWNCHANNELS):\r\n\t\t\tfor lib, pipe_chan_name in KNOWNCHANNELS.items():\r\n\t\t\t\tif i_val == lib:\r\n\t\t\t\t\tfor x in KNOWNCHANNELS:\r\n\t\t\t\t\t\tif channel_name in x:\r\n\t\t\t\t\t\t\tif channel_name in i_val:\r\n\t\t\t\t\t\t\t\t# print(\"channel name was {}, converted to {}\".format(channel_name, pipe_chan_name))\r\n\t\t\t\t\t\t\t\treturn pipe_chan_name\r\n\t\t\t\t\tif channel_name == pipe_chan_name:\r\n\t\t\t\t\t\t# print(\"channel_name is already {}\".format(pipe_chan_name))\t\t\t\t\t\r\n\t\t\t\t\t\treturn pipe_chan_name\r\n\r\n\r\n# def colorspaceParse(colorspace_name):\r\n# \t\tif colorspace_name != \"\":\r\n# \t\t\tfor i, i_val in enumerate(KNOWNCOLORSPACES):\r\n# \t\t\t\tfor lib, pipe_color_name in KNOWNCOLORSPACES.items():\r\n# \t\t\t\t\tif i_val == lib:\r\n# \t\t\t\t\t\tfor x in KNOWNCOLORSPACES:\r\n# \t\t\t\t\t\t\tif colorspace_name in x:\r\n# \t\t\t\t\t\t\t\tif colorspace_name in i_val:\r\n# \t\t\t\t\t\t\t\t\tprint(\"colorspace_name name was {}, converted to {}\".format(colorspace_name, pipe_color_name))\r\n# \t\t\t\t\t\t\t\t\treturn pipe_color_name\r\n# \t\t\t\t\t\tif colorspace_name == pipe_color_name:\r\n# \t\t\t\t\t\t\tprint(\"colorspace_name is already {}\".format(pipe_color_name))\t\t\t\t\t\r\n# \t\t\t\t\t\t\treturn pipe_color_name\r\n\r\n\r\ndef srgbParse(channel_name):\r\n\t\tif channel_name != \"\":\r\n\t\t\tif channelParse(channel_name) in KNOWNSRGBCHANNELS:\r\n\t\t\t\t# do srgb_texture - acescg conversion\r\n\t\t\t\tsrgb_texture = True\r\n\t\t\telse:\r\n\t\t\t\tsrgb_texture = False\r\n\r\n\t\t\t# print(\"convert to acescg from srgb_texture? : \", srgb_texture)\r\n\r\n\t\t\treturn srgb_texture\r\n\r\n\r\ndef getUDIM(fileName):\r\n\t# file = fileName.replace(\".\",\"_\")                      #deal with extention\r\n\tfile = fileName.replace(\" \",\"_\")                        #remove spaces\r\n\r\n\t# split file extension from file and store to variables\r\n\tfn, ext = os.path.splitext(file)\r\n\r\n\tfileSplit = fn.split(\"_\") # list of tokens\r\n\t# print(fileSplit)\r\n\r\n\r\n\t#get existing UDIM from file name\r\n\tfor uDim in fileSplit:\r\n\t\tif str.isdigit(uDim) == True:                       \r\n\t\t\tif len(uDim) == 4:\r\n\t\t\t\tif int(uDim) >= 1001:\r\n\t\t\t\t\t# print (\"UDIM detected : \" + uDim)\r\n\t\t\t\t\t# fileRepo['dictUDIM'] = uDim\r\n\t\r\n\t\t\t\t\treturn uDim\r\n\r\ndef getChannel(fileName):\r\n\tfile = fileName.replace(\" \",\"_\").lower()                       #remove spaces\r\n\r\n\t# split file extension from file and store to variables\r\n\tfn, ext = os.path.splitext(file)\r\n\t# fn, ud = os.path.splitext(fn)\r\n\r\n\r\n\tfileSplit = fn.split(\"_\") # list of tokens\r\n\t# print(fileSplit)\r\n\r\n\t#get existing channel from file name\r\n\tfor channel_name in fileSplit:\r\n\t\tif channel_name != \"\":\r\n\t\t\tfor i, i_val in enumerate(KNOWNCHANNELS):\r\n\t\t\t\tfor lib, pipe_chan_name in KNOWNCHANNELS.items():\r\n\t\t\t\t\tif i_val == lib:\r\n\t\t\t\t\t\tfor x in KNOWNCHANNELS:\r\n\t\t\t\t\t\t\tif channel_name in x:\r\n\t\t\t\t\t\t\t\tif channel_name in i_val:\r\n\t\t\t\t\t\t\t\t\t# print(\"channel name was {}, converted to {}\".format(channel_name, pipe_chan_name))\r\n\t\t\t\t\t\t\t\t\t# print (\"channel detected : \" + pipe_chan_name)\r\n\t\t\t\t\t\t\t\t\treturn pipe_chan_name\r\n\t\t\t\t\t\tif channel_name == pipe_chan_name:\r\n\t\t\t\t\t\t\t# print(\"channel_name is already {}\".format(pipe_chan_name))\r\n\t\t\t\t\t\t\t# print (\"channel detected : \" + pipe_chan_name)\r\n\t\t\t\t\t\t\treturn pipe_chan_name\r\n\r\n\r\n\r\n\r\ndef process(inPath, asset_name=\"\", hdri=False, lin=False, out_srgb=False, raw=False, out=None):\r\n\tfor tex in getFiles(inPath):\r\n\t\tprint(\"*\"*50)\r\n\r\n\t\tfn, ext = os.path.splitext(tex)\t# split file extension from file and store to variables\r\n\t\tprint(\"processing \" + fn+ext)\r\n\t\tif \"hdri\" in fn:\r\n\t\t\thdri = True\r\n\r\n\t\tif hdri == False:\r\n\t\t\tif asset_name != \"\":\r\n\t\t\t\ttry:\r\n\t\t\t\t\t# NB: raw data channels are left alone\r\n\t\t\t\t\tif srgbParse(getChannel(tex)) == True:\r\n\t\t\t\t\t\t# default mode\r\n\t\t\t\t\t\tin_color=\"srgb_texture\"\r\n\t\t\t\t\t\tout_color=\"acescg\"\r\n\r\n\t\t\t\t\t\tif lin == True: \t\t\t\t\t# For lin_srgb color maps\r\n\t\t\t\t\t\t\tin_color = \"lin_srgb\"\r\n\t\t\t\t\t\tif out_srgb == True:\t\t\t\t# For legacy srgb maps (display transform)\r\n\t\t\t\t\t\t\tin_color = \"out_srgb\"\r\n\t\t\t\t\t\tif raw == True:\t\t\t\t\t\t# force raw mode (no transforms)\r\n\t\t\t\t\t\t\tin_color = \"raw\"\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tin_color=\"raw\"\r\n\t\t\t\t\t\tout_color=\"raw\"\r\n\t\t\t\texcept:\r\n\t\t\t\t\tprint(\"no channel found, skipping color transform\")\r\n\t\t\telse:\r\n\t\t\t\tprint(\"Please enter asset name with -a [name]\")\r\n\r\n\r\n\r\n\t\t\tif getUDIM(tex) == None:\r\n\t\t\t\tudim = \"1001\"\r\n\t\t\telse:\r\n\t\t\t\tudim = getUDIM(tex)\r\n\r\n\t\t\t\r\n\t\t\ttry:\r\n\t\t\t\t## outFile = os.path.join(inPath, outFileName(asset_name, getChannel(tex), out_color, udim))\r\n\t\t\t\tif out == None:\r\n\t\t\t\t\toutFile = os.path.join(inPath, asset_name +\"_tex_\"+ getChannel(tex) +\"_\"+ out_color +\"_\"+ udim +\".exr\")\r\n\t\t\t\telse:\r\n\t\t\t\t\toutFile = os.path.join(out, asset_name +\"_tex_\"+ getChannel(tex) +\"_\"+ out_color +\"_\"+ udim +\".exr\")\r\n\t\t\t\t# print(outFile)\r\n\t\t\t\tsubprocess.call([\"maketx\", PARMS, os.path.join(inPath,tex), \"--colorconfig\", COLORCONFIG, \"--colorconvert\", in_color, out_color, \"-o\", outFile])\r\n\t\t\texcept:\r\n\t\t\t\tprint(\"no channel found, skipping export\")\r\n\r\n\r\n\t\tif hdri == True:\r\n\t\t\tin_color=\"lin_srgb\"\r\n\t\t\tout_color=\"acescg\"\r\n\r\n\t\t\tif out == None:\r\n\t\t\t\t## outFile = os.path.join(inPath, outFileName(fn, out_color))\r\n\t\t\t\toutFile = os.path.join(inPath, fn.lower() +\"_hdri_\"+ out_color +\".exr\")\r\n\t\t\telse:\r\n\t\t\t\toutFile = os.path.join(out, fn.lower() +\"_hdri_\"+ out_color +\".exr\")\r\n\t\t\t# print(outFile)\r\n\r\n\t\t\tif ext == '.hdr' or ext == '.exr':\r\n\t\t\t\tsubprocess.call([\"maketx\", PARMS, os.path.join(inPath,tex), \"--colorconfig\", COLORCONFIG, \"--colorconvert\", in_color, out_color, \"-o\", outFile])\r\n\t\t\t\thdri = False\r\n\t\t\telse:\r\n\t\t\t\tprint(\"skipping non-hdri \" + fn + ext)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nprocess(SOURCEDIR, asset_name=args.asset_name, \r\n\t\t\t\t\thdri=args.hdri_mode, \r\n\t\t\t\t\tlin=args.linear_mode,\r\n\t\t\t\t\tout_srgb=args.out_srgb,\r\n\t\t\t\t\traw=args.raw,\r\n\t\t\t\t\tout=args.out_dir)\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n# TODO:\r\n# spit texture to shots directory with versioning\r\n# build maya file node texture updater to this path\r\n# build tKinter GUI for texture_publish\r\n\r\n# DONE:\r\n# argparse cmd tool\r\n```\r\n\r\n\n\n\n[cuID:[OP-5373](https://app.clickup.com/t/863gayxbz)]",
        "url": "https://github.com/ynput/OpenPype/issues/4713"
    },
    {
        "number": 4717,
        "title": "Maya: Extract look is not AYON compatible",
        "body": "**Describe the bug**\r\nExtract look is looking for `data.sourceHashes.<key>` on version documents in mongo, using `distinct` (get all versions which contain the file hash). This data structure and query type does not have equivalent in AYON -> We don't have option to have attribute which is dictionary/object + we're not able to \"distinct\" all version which have a key in the dictionary. Function which requires that: https://github.com/ynput/OpenPype/blob/develop/openpype/hosts/maya/plugins/publish/extract_look.py#L33\r\n\r\n**Additional context**\r\nI'm not familiar what are the hashes used for. Are `sourceHashes` used now -> do we need them? If we do, could they be handled in a different way?\r\n\r\n[cuID:[OP-5375](https://app.clickup.com/t/863gb4cef)]",
        "url": "https://github.com/ynput/OpenPype/issues/4717"
    },
    {
        "number": 4721,
        "title": "Add \"Backwards compatibility\" notes to release notes",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI mentioned [in this PR that the settings change likely was a backwards incompatible change](https://github.com/ynput/OpenPype/pull/4631#issuecomment-1470426100). As far as I can see any settings a studio had defined there previously will likely not work for the newer version and thus their values will be removed.\r\n\r\nCurrently that PR made its way into that 3.15.3 version but looking at the release notes it's pretty unclear that that feature might introduce some incompatibilities for existing settings.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would expect as an admin that I could take a glimpse over new releases and be able to quickly see \"Update notes\" or \"Backwards compatibily\" warnings so that I know as a studio or admin where to pay attention too.\r\n\r\nShould we maybe have a tag on PRs like *backwards incompatibility** - maybe one labeled in general and maybe one labeled for settings.\r\n\r\nThen PRs could have a default block for `### Backwards compatibility` or alike and any info in there could make its way into a clearly labeled area in release notes like these: https://github.com/ynput/OpenPype/releases/tag/3.15.3\r\n\r\nPreferably in such a way that an admin or someone updating could just quickly see what he/she might need to keep in mind when updating?\r\n\r\n**Describe alternatives you've considered**\r\n\r\nNever be backwards incompatible or \ud83d\ude49 \ud83d\ude48 \ud83d\ude4a .\r\nOr where being backwards incompatible implement automatic conversions so that it becomes forward compatible.\n\n\n[cuID:[OP-5430](https://app.clickup.com/t/861mjvzm0)]",
        "url": "https://github.com/ynput/OpenPype/issues/4721"
    },
    {
        "number": 4726,
        "title": "Publisher: Hosts filtering does not affect AttrDefs",
        "body": "**Running version**\r\n3.15.3-nightly.4\r\n\r\n**Describe the bug**\r\nHosts filtering on an integration plugin, which is having defined plugin attributes, are showing even hosts are not mentioning a particular host.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nfollowing example is taken form https://github.com/ynput/OpenPype/pull/4715\r\n1. Open settings at `project_settings/deadline/publish/SuspendedPublishingJobOnFarm/hosts` and remove all hosts so the field is empty.\r\n2. Save settings \r\n3. Open Nuke in your testing workfile\r\n4. hit Publish and click to any `render `or `prerender `family instance to see right panel plugin attributes.\r\n5. Notice that **Suspended publish** toggle is still showing.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/40640033/228209755-4e5b8d05-809e-40da-bd7f-6a61b4337cf3.png)\r\n\r\n![image](https://user-images.githubusercontent.com/40640033/228209653-8142171d-41de-4f95-90f2-54f31885024f.png)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. windows]\r\n - Host: [e.g. Maya, Nuke, Houdini]\r\n\r\n\r\n\r\n\r\n[cuID:[OP-5447](https://app.clickup.com/t/863gbexbz)]",
        "url": "https://github.com/ynput/OpenPype/issues/4726"
    },
    {
        "number": 4748,
        "title": "python fails to run with remapped drives ",
        "body": "**Running version**\r\n3.15.4-nightly.1 (code)\r\n\r\n**Describe the bug**\r\nwith disk mapping on `general/disk_mapping/windows`\r\nI'm remapping my local folder to simulate studio environment to drive P:\r\n![image](https://user-images.githubusercontent.com/352795/228771896-e59d1845-edb4-446a-a02a-a190bdc08632.png)\r\n\r\neverything works fine, except for launching blender, where we are probably trying to install missing PySide2\r\n\r\nthe way we call for python is not working with remapped drive, eventhough running the same command from shell works perfectly fine\r\n\r\n![image](https://user-images.githubusercontent.com/352795/228772845-9aa63126-d2a3-415e-a802-f1ef55c3802a.png)\r\n\r\n**Desktop:**\r\n - OS: windows\r\n - Host: Blender 3.5.0\r\n\r\n\r\n\r\n\r\n[cuID:[OP-5487](https://app.clickup.com/t/863gc3556)]",
        "url": "https://github.com/ynput/OpenPype/issues/4748"
    },
    {
        "number": 4750,
        "title": "Maya: Validate Model Name definition source deprecated in AYON",
        "body": "**Problem**\r\nIn **Maya** `Validate Model Name` validator uses name definition sourced either from file or database. There is a bug with that logged as #2596 but it won't work in AYON like this anyway and its use is very limited. We should either deprecate the whole validator or at least change it's behavior so the definitions are taken from the Settings.\r\n\r\nI vote for deprecation/removal.\n\n\n[cuID:[OP-5488](https://app.clickup.com/t/863gc41n4)]",
        "url": "https://github.com/ynput/OpenPype/issues/4750"
    },
    {
        "number": 4760,
        "title": "Workfiles doesn't show Published checkbox in Harmony",
        "body": "**Running version**\r\n[ex. 3.15.3-nightly.1]\r\n\r\n**Describe the bug**\r\nWorkfile dialog thrown by default when opening from Launcher doesn't show Published checkbox even if Workfile dialog triggered explicitly in host itself does.\r\n\r\n**Expected behavior**\r\nBoth dialogs should show Published checkbox (if it enabled in Setting to be able to use Published workfiles)\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n\n\n\n[cuID:[OP-5496](https://app.clickup.com/t/863gcg4ev)]",
        "url": "https://github.com/ynput/OpenPype/issues/4760"
    },
    {
        "number": 4762,
        "title": "Maya: collect_review manipulating instance `active` attribute.",
        "body": "**Running version**\r\n`develop`\r\n\r\n**Describe the bug**\r\nThis [line](https://github.com/ynput/OpenPype/blob/74f73969ad84ecd754c36f298088967b98b54205/openpype/hosts/maya/plugins/publish/collect_review.py#L113) manipulates the instances `active` attribute which is neither needed or good practice.\r\n\r\nDiscovered here; https://github.com/ynput/OpenPype/pull/4720#discussion_r1149351711\r\n\n\n\n[cuID:[OP-5497](https://app.clickup.com/t/861mkmp5h)]",
        "url": "https://github.com/ynput/OpenPype/issues/4762"
    },
    {
        "number": 4769,
        "title": "Maya: Combine Playblast and Thumbnail extractors.",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nA large amount of code of shared between the two extractor which often gets tricky to develop on.\r\n\r\n**Describe the solution you'd like**\r\nEither combine to 1 extractor that outputs playblast images and thumbnail as representations, or refactor shared code to a parent class.\r\n\n\n\n[cuID:[OP-5511](https://app.clickup.com/t/861mm0a6u)]",
        "url": "https://github.com/ynput/OpenPype/issues/4769"
    },
    {
        "number": 4787,
        "title": "Tests: Run local integration tests in staging",
        "body": "**Feature**\r\nWe should be able to run local test suite in staging on studio site. With this feature we would be able to run specific tests directly in studio environment (its default settings).\r\n\r\nWe could have a new menu in Tray that would allow manually run host-specific test suites headless, so it would be really easy to test for example new releases directly in studio environment with all studio specific configuration that might be otherwise missed in syntethic environment.\r\n\n\n\n[cuID:[OP-5550](https://app.clickup.com/t/861mmd0b9)]",
        "url": "https://github.com/ynput/OpenPype/issues/4787"
    },
    {
        "number": 4789,
        "title": "Maya: focalLength should be collected also for render families",
        "body": "**Running version**\r\n[ex. 3.15.3-nightly.2]\r\n\r\n**Describe the bug**\r\n`{focalLenght}` was added into burnin profiles, but currently is only collected in `collect_review.py`. Problem is that `render` family uses burnin profiles too. (At least noticed in Maya when rendering multiple render passes.)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create multiple render passes in Maya\r\n2. Render on Farm\r\n3. It will fail with:.\r\n[focal_length_fail.txt](https://github.com/ynput/OpenPype/files/11160488/focal_length_fail.txt)\r\n\r\n\r\n**Expected behavior**\r\nRender family shouldn't fail\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. windows]\r\n - Host: noticed in Maya, but would probably affect all hosts with 'render' family\r\n\r\n\n\n\n[cuID:[OP-5551](https://app.clickup.com/t/861mmd6ex)]",
        "url": "https://github.com/ynput/OpenPype/issues/4789"
    },
    {
        "number": 4812,
        "title": "enhancement: Maya Pointcache export allow exporting -userAttr instead of -attr",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Please state which of feature you have in mind and describe what are its shortcomings?\n\nThe Maya Alembic exporter allows to export custom attributes as geometric attributes or user attributes. So far OpenPype has always exported all custom attributes using `-attr` and `-attrPrefix` flags which result in geometric attributes and it has no functionality to decide whether attributes should be exported as `-userAttr` or `-userAttrPrefix`.\r\n\r\n**What is the difference?** \r\n\r\nOne is a **'geometric attribute'** and the other is a **'user attribute'**. [It defines where it writes it to in the Alembic file](https://github.com/alembic/alembic/blob/a4b60eadb08500ea8ab7af761ddb3377c5772f30/maya/AbcExport/MayaUtility.h#L235-L241) \r\n\r\n- **attr + attrPrefix** go into **`.geomArbParams`**\r\n- **userAttr + userAttrPrefix** go into **`.userProperties`**\r\n\r\nBut then the question becomes what does that mean for the resulting Alembic file. How does it behave differently and which should you choose when?\r\n\r\nIn [OpenPype we've always used `attr` and `attrPrefix`](https://github.com/ynput/OpenPype/blob/f4d22e6ac671245dab4c4f6831ea6f057ca088c6/openpype/hosts/maya/plugins/publish/extract_pointcache.py#L57-L58) and our studio has done that for years too. _For example the `cbId` attribute for nodes is there too which as I read this now makes more sense in `.userProperties` maybe?_\r\n\r\nIt influences for example [how something comes into Katana](https://github.com/ezequielmastrasso/EZLookdevTools/issues/106#issuecomment-544480777). But still, how do I decide which should go where?\r\n\r\nAnd if we want to be that picky. That'd almost make the `includeUserDefinedAttributes` automatic 'add my custom attributes in the export' more complicated since that can't really decide which attribute should go where, right? @tokejepsen what do you think?\r\n\r\nAnd even more important maybe, how would an artist know what to put where?\r\n\r\n**Some more details on the differences**\r\n\r\nHere's an explanation on the [intended differences](https://groups.google.com/g/alembic-discussion/c/JEu37K4AE2Q/m/9nhCY6KxEcYJ).\r\n\r\n> **`-attr`** stores data under the arbitrary geometry property compound (available via `getArbGeomParams()` on AbcGeom schemas)\r\n> \r\n> The arbitrary geometry property compound is meant to hold data that you want to communicate to other facilities and applications, especially renderers.  Things like per-vertex color, or extra UV sets are kinds of things you might store in here.\r\n> \r\n> **`-userAttr`** places the data under the user property compound (available via `getUserProperties()` on AbcGeom schemas)\r\n> \r\n> The user property compound is meant to hold any extra pipeline specific data to help you customize your workflows.\r\n> There is no expectation that other facilities or applications will preserve this data, although some try to.\r\n\r\n---\r\n\r\n@fabiaserra described a use case of the differences from his previous studio:\r\n\r\n> On any case, it's good to try make the cache exporter interface as thin as possible to the internal API to accommodate for any possible workflows. On my prior studio we exposed most of the Alembic options (as Advanced tabs) because in some cases there was a specific intend to write the attribute as user or compound for specific DCCs or applications expecting it that way\n\n### How would you imagine the enhancement of the feature?\n\nWe could either expose `-userAttr` and `-userAttrPrefix` as attributes on the instances explicitly so if its needed one could just put their attributes there. However, that would mean exposing to the artists something that might be a slightly technical differentation of the attributes, but it will be the simplest implementation and most explicit.\r\n\r\nAnother approach could be that in the project settings we define a list of attributes (or attribute prefixes) that should be `-userAttr` typed. So that if an attribute is in those lists then it'll be passed to `-userAttr` instead of `-attr` in the export command. Less explicit, but potentially more control by the studio admin and less hassle for the artist to manage the differences. Potential benefit to this is that the  `includeUserDefinedAttributes` feature that OpenPype offers to automatically include any custom attribute in the export can use these lists too so that even then it can differentiate between the two.\n\n### Is there any more labels you wish to add?\n\n- [X] I have searched labels and added any\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\nOriginally reported in a comment [here](https://github.com/ynput/OpenPype/pull/4388#discussion_r1158551110) by @fabiaserra \n\n\n[cuID:[OP-5570](https://app.clickup.com/t/863gef4uu)]",
        "url": "https://github.com/ynput/OpenPype/issues/4812"
    },
    {
        "number": 4814,
        "title": "Maya: \"Selected Lights\" for reviews is invalid.",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nReviews have the option to use \"Selected Lights\".\r\n\r\n### Expected Behavior:\r\n\r\nReviews should not have the option to use \"Selected Lights\".\r\n\r\nThis is because there should not be any concept of selection when publishing because it makes publishes not reproducible.\r\n\r\nThere could be an argument for having an option called \"Included Lights\", which would only use the lights within the review objectset, but think that is a feature request if needed by production.\r\n\r\n### Version\r\n\r\n3.15.3\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Create review in Maya and set `Display Lights` to `selected`.\r\n2. Publish.\r\n\r\n### Is there any more labels you wish to add?\r\n\r\n- [X] I have searched labels and added any\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-5571](https://app.clickup.com/t/863gef9bc)]",
        "url": "https://github.com/ynput/OpenPype/issues/4814"
    },
    {
        "number": 4817,
        "title": "Bug: Houdini: New Publisher validations unusable validation reports",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nSince the refactor of Houdini to the new publisher the validations have become pretty unusable since they report the wrong things or just don't report any usable information at all. An artist would not know what to do in any of e.g. the following screenshots:\r\n\r\n![houdini_whichnodeiswrong](https://user-images.githubusercontent.com/2439881/230625448-568f2809-f06e-4c15-b4a5-a25c3ae88183.png)\r\n![houdini_vdbnodeconnected](https://user-images.githubusercontent.com/2439881/230625440-4b013fe9-1ce6-441d-9944-6c0a200b65d5.png)\r\n![houdini_whatpaths](https://user-images.githubusercontent.com/2439881/230625445-c2a2b82b-1a14-45ac-b210-853cc7772bc5.png)\r\n\r\nOr as [reported here](https://github.com/ynput/OpenPype/pull/4388#discussion_r1160630624) the following areas in the code:\r\n\r\n-  [here](https://github.com/ynput/OpenPype/blob/00d03df6efa3f68216a928ba36cc5df7e9f67de5/openpype/hosts/houdini/plugins/publish/validate_workfile_paths.py#L41-L42) an artist will just see _Invalid paths found_ with no details on what to do, what paths they are, where they come from and what's wrong about it. \r\n- [This reports](https://github.com/ynput/OpenPype/blob/e0a2f2370256212f2ea78f282a9dc3eeb156b362/openpype/hosts/houdini/plugins/publish/validate_vdb_output_node.py#L29-L32) something that might not even be true since it totally disregards the logged errors below it.\r\n- ~[This mentions \"output\" even though it's for the input nodes](https://github.com/ynput/OpenPype/blob/26954b9377639b12fdbf3f67e36b0edf86582018/openpype/hosts/houdini/plugins/publish/validate_vdb_input_node.py#L30-L34) and suffers from the same issue as above. It reports something that doesn't explain what happened.~ This was actually a duplicate validator, see #4819 \r\n- [This](https://github.com/ynput/OpenPype/blob/3a935c968c97bd19695ae3888c9904a961397d04/openpype/hosts/houdini/plugins/publish/validate_camera_rop.py#L39-L45), [This](https://github.com/ynput/OpenPype/blob/4fe053b109d892a5b5f3770be693ae72d1c19967/openpype/hosts/houdini/plugins/publish/validate_abc_primitive_to_detail.py#L25-L31) and [This just reports to look at the log output](https://github.com/pypeclub/OpenPype/blob/e0a2f2370256212f2ea78f282a9dc3eeb156b362/openpype/hosts/houdini/plugins/publish/validate_cop_output_node.py#L26-L32) but the new publisher has nothing that redirects an artist to easily look at the log of that instance or node.\r\n\r\nThese are just a few of the plug-ins I have investigated.\r\n\r\n### Expected Behavior:\r\n\r\nThe reports should be clear for the artist. Seeing a report I should be able to understand what went wrong quickly and know what to do next.\r\n\r\n### Version\r\n\r\n3.15.3\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Publish invalid content from Houdini (check the validators to see how you can best make sure they \"invalidate\" your scene)\r\n\r\n### Is there any more labels you wish to add?\r\n\r\n- [X] I have searched labels and added any\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-5572](https://app.clickup.com/t/861mmnrp2)]",
        "url": "https://github.com/ynput/OpenPype/issues/4817"
    },
    {
        "number": 4820,
        "title": "enhancement: Houdini: Unable to duplicate ROP node to duplicate a publish instance",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Please state which of feature you have in mind and describe what are its shortcomings?\n\nIt's currently hard to duplicate an existing publish instance (ROP node) to allow quickly duplicating the behavior and create a new instance natively to houdini. \r\n\r\nThis is due to the node storing the `instance_node` value and the `instance_id` which means that the duplicated instance would not show in the Publisher UI (due to same `instance_id`), once you change the `instance_id` the `instance_node` fails due to the duplicated node not having the same path.\r\n\r\n**Warning:** The `instance_node` value being stored on the node also means it breaks publishing whenever an artist would change the node name but not the attribute.\n\n### How would you imagine the enhancement of the feature?\n\n1. Upon a conflict of `instance_id` it should be able to differentiate the two and maybe generate a new id for one of the two?\r\n2. `instance_node` should **never** be stored on the node since that value is the node's path in the workfile. That should **always** be based on the node's actual path (thus parent + name, `node.path()`).\r\n\n\n### Is there any more labels you wish to add?\n\n- [X] I have searched labels and added any\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5573](https://app.clickup.com/t/861mmp5j1)]",
        "url": "https://github.com/ynput/OpenPype/issues/4820"
    },
    {
        "number": 4823,
        "title": "Loader: Documentation for \"Delete Old Versions\".",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Please state which of feature you have in mind and describe what are its shortcomings?\n\nThe action \"Delete Old Versions\" in the Loader is not documented.\n\n### How would you imagine the enhancement of the feature?\n\nDocument the action \"Delete Old Versions\" in the Loader.\n\n### Is there any more labels you wish to add?\n\n- [X] I have searched labels and added any\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5585](https://app.clickup.com/t/863gevtmg)]",
        "url": "https://github.com/ynput/OpenPype/issues/4823"
    },
    {
        "number": 4824,
        "title": "Documentation: Hero versions",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Please state which of feature you have in mind and describe what are its shortcomings?\r\n\r\nHero versioning isn't documented.\r\n\r\n### How would you imagine the enhancement of the feature?\r\n\r\nDocument:\r\n\r\n- What is a hero version?\r\n- Pros and cons of hero versioning.\r\n- How to enable/disable hero versioning.\r\n\r\nMaybe also mention how the feature might have been called in other pipelines, e.g. 'master version's or 'live version's or whatever is common but different terminology for the feature.\r\n\r\nMaybe also show an example of how to switch between hero version and a specific version in the Loader.\r\n\r\nMaybe describe the difference between a push versus pull pipeline.\r\n\r\n### Is there any more labels you wish to add?\r\n\r\n- [X] I have searched labels and added any\r\n\r\n### Describe alternatives you've considered:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\nIssue [came up on Discord here](https://discord.com/channels/517362899170230292/563751989075378201/1095212355702501447)\r\n\r\n\r\n[cuID:[OP-5587](https://app.clickup.com/t/863gf2yrq)]",
        "url": "https://github.com/ynput/OpenPype/issues/4824"
    },
    {
        "number": 4828,
        "title": "Enhancement: Set a custom family icon for loader (and other tools)",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Please state which of feature you have in mind and describe what are its shortcomings?\r\n\r\nThere seems to be some basic family icon logic for the Loader model implemented but [it seems to always use a hardcoded default icon in the code](https://github.com/ynput/OpenPype/blob/aa6dc207f1cad419fd968dfd85d6d0b1923d55ba/openpype/tools/utils/lib.py#L545). We should be able to customize the colors/icons for families in the loader for better distinction between the families.\r\n\r\nThis feature originally existed in Avalon but seems to have been broken or lost since.\r\n\r\nIt would be much better if the icons here were customizable:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/231179957-002b1b5d-fccc-4580-9640-007bb5bf8854.png)\r\n\r\nSo that they could e.g. have icons like in this design proposal:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/231180178-1c42d9b5-852e-4493-b21e-31be6de7304d.png)\r\n\r\n\r\n### How would you imagine the enhancement of the feature?\r\n\r\nIn the Settings UI I'd expect to be able to configure an icon and color for a particular family.\r\n\r\n---\r\n\r\n[Here's a quick prototype showing the selectable font awesome icons for qtawesome](https://github.com/getavalon/core/issues/214)\r\n\r\n### Is there any more labels you wish to add?\r\n\r\n- [X] I have searched labels and added any\r\n\r\n### Describe alternatives you've considered:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\nI'd actually like the same functionality for setting icons/colors (or even thumbnails?) for assets as well but I feel like that would be a much bigger feature and should be separate of this issue.\r\n\r\n[cuID:[OP-5594](https://app.clickup.com/t/861mn16nn)]",
        "url": "https://github.com/ynput/OpenPype/issues/4828"
    },
    {
        "number": 4833,
        "title": "Houdini: Unmanaged colorspaces in review ROP",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nReview OpenGL ROP node introduced by #3839 is not handling colorspaces correctly in regards to selected output format. If set to for example PNG, gamma correction will stay by default as 1, resulting in dark and incorrect review video.\n\n### How would you imagine the implementation of the feature?\n\nWe should probably define mapping between gamma and file formats if possible, something like:\r\n\r\n```python\r\n{\r\n\t\"png\": 2.2,\r\n    \"exr\": 1.0,\r\n    \"jpg\": 2.2\r\n}\r\n```\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\nThis is probably solved by using \"proper\" color management like OCIO as implemented here #4700, but in case studio isn't using OCIO at all, this might be issue. Maybe validator with repair action should handle this.\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5600](https://app.clickup.com/t/861mn6q1x)]",
        "url": "https://github.com/ynput/OpenPype/issues/4833"
    },
    {
        "number": 4836,
        "title": "Houdini: OCIO support",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nWe need to enhance OCIO support of AYON inside Houdini. With #4700 OCIO is correctly passed to Houdini, but setting OCIO profiles (and other options) on relevant nodes needs to be done manually. Like these options in OpenGL ROP (introduced by #3839):\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/231497164-59721e27-48b9-489f-b41f-36da3a08ee4d.png)\r\n\r\nThis is somehow similar to #4833.\r\n\r\nThere might be other places to set.\r\n\n\n### How would you imagine the implementation of the feature?\n\nIt should be done as it is already done in Nuke, where you can set color spaces like this:\r\n\r\n![image](https://user-images.githubusercontent.com/33513211/231499570-e81aef2f-003a-4b59-b3c4-ed3c7c514912.png)\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5602](https://app.clickup.com/t/861mn7n0c)]",
        "url": "https://github.com/ynput/OpenPype/issues/4836"
    },
    {
        "number": 4847,
        "title": "Feature: Batch Publish Multiple Compositions in After Effects as Shots with Rendered Subsets",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nCurrently, in OpenPype's After Effects integration, users can only publish  a specific shot context composition. This can be time-consuming and inefficient when working on projects with multiple compositions that need to be published as shots. Additionally, there is no automated way to create shot assets with frame-range in the production database or organize published subsets like plate family and audio family under the created shots.\n\n### How would you imagine the implementation of the feature?\n\n1. Extend After Effects integration to support `editorial` creator family. Users should be able to select multiple compositions and after they hit create with `editorial` family selected multiple instances will be created. During the creation process, shot instance, plate instance and optionally even audio instance will be created.\r\n2. During the publishing process, shot folder types containing frame-range and additional metadata will be generated in a predefined hierarchy within the production database. Studio settings will be utilized to determine the specific tasks for each shot.\r\n3. Automatically generate plate family subsets and organize them under the created shots. Add support for optional audio family subsets, allowing users to include audio as part of the publishing process if desired.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n1. Manually publishing each composition under manually created shot folder type: This method is time-consuming and inefficient, especially for projects with many compositions and shots.\r\n2. Custom scripting for batch publishing: This requires additional development resources and may not be compatible with OpenPype's pipeline or future updates.\n\n### Additional context:\n\nImplementing this feature will streamline the publishing process for artists working in After Effects, increasing overall productivity and efficiency. It will also ensure consistency and organization within the production database, making it easier to manage and track assets across multiple shots.\n\n\n[cuID:[OP-5662](https://app.clickup.com/t/861mnhfbe)]",
        "url": "https://github.com/ynput/OpenPype/issues/4847"
    },
    {
        "number": 4850,
        "title": "Bug: Maya Repair Frame Range ",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nThere is a regression of issue with running Repair Action on `Validate Frame Range` with `model` instance nested under `review`\n\n### Expected Behavior:\n\n_No response_\n\n### Version\n\n3.15.4-nightly.3\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n![image](https://user-images.githubusercontent.com/352795/232741124-6c1cc29f-15cb-44d9-bd4f-3e3f20b4b9bf.png)\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n```shell\nplugin is: <class 'D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\validate_frame_range.py.ValidateFrameRange'>\r\nb\"Preparing <class 'openpype.pipeline.publish.publish_plugins.RepairAction'>..\"\r\nb'Action prepared.'\r\n# # ERROR - Traceback (most recent call last):\r\n#   File \"D:\\REPO\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n#     runner(*args)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\publish\\publish_plugins.py\", line 242, in process\r\n#     plugin.repair(instance)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\validate_frame_range.py\", line 138, in repair\r\n# RuntimeError: setAttr: No object matches name: modelMain.frameStart\r\n# \r\n# Traceback (most recent call last):\r\n#   File \"D:\\REPO\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n#     runner(*args)\r\n#   File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\publish\\publish_plugins.py\", line 242, in process\r\n#     plugin.repair(instance)\r\n#   File \"<string>\", line 138, in repair\r\n# RuntimeError: setAttr: No object matches name: modelMain.frameStart\r\n\r\n// Error: pyblish.plugin : Traceback (most recent call last):\r\n  File \"D:\\REPO\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\publish\\publish_plugins.py\", line 242, in process\r\n    plugin.repair(instance)\r\n  File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\validate_frame_range.py\", line 138, in repair\r\nRuntimeError: setAttr: No object matches name: modelMain.frameStart\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\REPO\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\publish\\publish_plugins.py\", line 242, in process\r\n    plugin.repair(instance)\r\n  File \"<string>\", line 138, in repair\r\nRuntimeError: setAttr: No object matches name: modelMain.frameStart\r\n //\n```\n\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5715](https://app.clickup.com/t/863ggy5yy)]",
        "url": "https://github.com/ynput/OpenPype/issues/4850"
    },
    {
        "number": 4857,
        "title": "Enhancement: Frame Range validator for review instance",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nThe logic of frame range validation is somewhat complicated and not very logical. \r\n\r\n![image](https://user-images.githubusercontent.com/352795/232810135-b10cf28c-d12f-41dc-899c-8b4a07b2f2b8.png)\r\n\r\nskipping validation altogether for parent review instance is not production friendly nor useful.\r\n![image](https://user-images.githubusercontent.com/352795/232810592-1243d93f-5fba-43d3-915f-7f3b1918a6d6.png)\r\n\n\n### How would you imagine the implementation of the feature?\n\nwe should have the possibility to parent instances under review and still maintain consistency of the frame range settings across the production\r\n\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5743](https://app.clickup.com/t/861mp16a0)]",
        "url": "https://github.com/ynput/OpenPype/issues/4857"
    },
    {
        "number": 4862,
        "title": "Bug: Enabling/disabling instance in \"minified\" view expands the section",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nIn the new publisher if I have the instance view set like this:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/233048293-bbca568a-abc4-4cbf-b15e-edcfecef9d3f.png)\r\n\r\nThen clicking on the checkbox next to VDB Cache to enable all VDB instances makes it expand the section. So after clicking on the checkbox right hand side it turns into:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/233048518-9000f75a-4508-4976-80bb-2227bf161d32.png)\r\n\r\n\r\n### Expected Behavior:\r\n\r\nI would have expected the section to remain closed and it solely being a checkbox toggle.\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/2439881/233048599-e3747e6f-4c11-4b71-abed-317d675ce961.png)\r\n\r\n\r\nHere is the issue in action:\r\n\r\nhttps://user-images.githubusercontent.com/2439881/233049162-f8235937-328e-4a61-a59a-988463c18c02.mp4\r\n\r\n### Version\r\n\r\n3.15.4-nightly.3\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Turn on the minified view for instances (smaller condensed blocks)\r\n2. Collapse the sections\r\n3. Toggle on/off a section - it now also expands the section.\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-5748](https://app.clickup.com/t/863gh9ndj)]",
        "url": "https://github.com/ynput/OpenPype/issues/4862"
    },
    {
        "number": 4863,
        "title": "Bug: Closing publisher saves the changes instead of discarding them",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\n(Tested in Houdini)\r\n\r\nWhen you open the publisher, change the active state of an existing instance and do NOT publish but just close the publisher. Then you reopen the publisher you see the pop-up \"Save changes\" and it resetting.\r\n\r\nThe changed state in which you had closed the UI is now saved into the scene.\n\n### Expected Behavior:\n\nClosing the new Publisher UI should not automatically persist/save the changes. Best case scenario it should warn me that I'm losing changes and allow me to decide what to do, but it definitely shouldn't save automatically.\n\n### Version\n\n3.15.4-nightly.3\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n(Tested in Houdini)\r\n\r\n1. Open publisher\r\n2. Toggle state of an instance, e.g. turn it off\r\n3. Close publisher\r\n4. Re-open publisher\r\n5. Instance is now unexpectedly still off  \r\n\r\n(the changes made should not have persisted, unless I trigger a save)\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5749](https://app.clickup.com/t/863gh9tad)]",
        "url": "https://github.com/ynput/OpenPype/issues/4863"
    },
    {
        "number": 4876,
        "title": "Bug: Maya Assembly Loading",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nI'm getting the error below when loading the `Assembly`:\r\n```\r\nDuring load error happened on Subset: \"assemblyMain\" Representation: \"json\" Version: 1\r\n\r\nError message: No object matches name: code_review_02_:assemblyMain|code_review_02_:OP_4859_cant_assign_shaders_to_the_ASS_file_modelMain_01:_GRP\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\tools\\loader\\widgets.py\", line 1590, in _load_representations_by_loader\r\n    load_with_repre_context(\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\pipeline\\load\\utils.py\", line 308, in load_with_repre_context\r\n    return loader.load(repre_context, name, namespace, options)\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\hosts\\maya\\plugins\\load\\load_assembly.py\", line 32, in load\r\n    containers = setdress.load_package(\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\hosts\\maya\\api\\setdress.py\", line 151, in load_package\r\n    container = _add(instance=instance,\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\hosts\\maya\\api\\setdress.py\", line 220, in _add\r\n    cmds.parent(loaded_root, parent, relative=True)\r\nValueError: No object matches name: code_review_02_:assemblyMain|code_review_02_:OP_4859_cant_assign_shaders_to_the_ASS_file_modelMain_01:_GRP\r\n```\n\n### Expected Behavior:\n\nNo errors when loading.\n\n### Version\n\n3.15.4-nightly.3\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Load a published `Assembly`.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5760](https://app.clickup.com/t/863ghk5z3)]",
        "url": "https://github.com/ynput/OpenPype/issues/4876"
    },
    {
        "number": 4880,
        "title": "Enhancement: Houdini: Support HDA publishing from non-object level",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nIt seems that HDA publishing only works from `/obj` or at least from object level. Publishing a network in `/obj/geo1` seems to fail for one of our artists and reading the documentation he's not sure why. It doesn't mention anything about only being able to publish object level networks.\r\n\r\nHere are the errors and [documentation](https://openpype.io/docs/artist_hosts_houdini#publishing-houdini-digital-assets-hda):\r\n\r\n![image (5)](https://user-images.githubusercontent.com/2439881/233388704-852accaf-ffac-432d-a107-4de9036472ab.png)\r\n![image (6)](https://user-images.githubusercontent.com/2439881/233388707-4055490e-d359-4206-9cc0-a017ac284c1d.png)\r\n\n\n### How would you imagine the implementation of the feature?\n\nAllow any subnet to be published as HDA maybe, like e.g. from `SOPs` context? Or at least improve the documentation to explain from where you are able to generate an HDA and improve the error message too.\r\n\r\nIt also feels slightly weird maybe that it's failing during Create?\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5762](https://app.clickup.com/t/861mpd5eu)]",
        "url": "https://github.com/ynput/OpenPype/issues/4880"
    },
    {
        "number": 4889,
        "title": "Bug: Houdini USD render publish instance errors on create",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nIt is currently impossible to create a USD Render (Experimental) instance as reported by @moonyuet [here](https://github.com/ynput/OpenPype/pull/4834#discussion_r1173280754).\r\n\r\n![image](https://user-images.githubusercontent.com/64118225/233537760-6314bafc-cdfc-45f4-b665-8f533717a0e9.png)\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"S:\\openpype\\OpenPype\\openpype\\pipeline\\create\\context.py\", line 1996, in _create_with_unified_error\r\n    result = creator.create(*args, **kwargs)\r\n  File \"S:\\openpype\\OpenPype\\openpype\\hosts\\houdini\\plugins\\create\\create_usdrender.py\", line 26, in create\r\n    pre_create_data)  # type: CreatedInstance\r\n  File \"S:\\openpype\\OpenPype\\openpype\\hosts\\houdini\\api\\plugin.py\", line 191, in create\r\n    self)\r\n  File \"S:\\openpype\\OpenPype\\openpype\\pipeline\\create\\context.py\", line 914, in __init__\r\n    data = copy.deepcopy(data or {})\r\n  File \"C:\\PROGRA~1\\SIDEEF~1\\HOUDIN~1.435\\python37\\lib\\copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\PROGRA~1\\SIDEEF~1\\HOUDIN~1.435\\python37\\lib\\copy.py\", line 241, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\PROGRA~1\\SIDEEF~1\\HOUDIN~1.435\\python37\\lib\\copy.py\", line 180, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\PROGRA~1\\SIDEEF~1\\HOUDIN~1.435\\python37\\lib\\copy.py\", line 281, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"C:\\PROGRA~1\\SIDEEF~1\\HOUDIN~1.435\\python37\\lib\\copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\PROGRA~1\\SIDEEF~1\\HOUDIN~1.435\\python37\\lib\\copy.py\", line 241, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\PROGRA~1\\SIDEEF~1\\HOUDIN~1.435\\python37\\lib\\copy.py\", line 169, in deepcopy\r\n    rv = reductor(4)\r\nTypeError: can't pickle SwigPyObject objects\r\n```\r\n\r\nThe issue is with [this line](https://github.com/ynput/OpenPype/blob/71caefe44915f9618e276812408d29ebd4ca5a51/openpype/hosts/houdini/plugins/create/create_usdrender.py#L17):\r\n```python\r\n        instance_data[\"parent\"] = hou.node(\"/stage\")\r\n```\r\n\r\n`hou.Node` instances can't be deep copied and thus can't be added to the instance data for the `create` method.\r\nIt'd need to be set as transient data afterwards if the reference would need to be directly added.\n\n### Expected Behavior:\n\nEither:\r\n\r\n1. Do not try to create the node in `/stage` and remove the logic.\r\n2. Pass the parent where to create in in a different way to the parent class' `create` method.\n\n### Version\n\n3.15.4-nightly.3\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Start Houdini\r\n2. Create USD Render (experimental) in publisher.\r\n3. Now you will have the error.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5765](https://app.clickup.com/t/863ghxnkq)]",
        "url": "https://github.com/ynput/OpenPype/issues/4889"
    },
    {
        "number": 4911,
        "title": "Unreal: Loaded Static meshes from Maya (abc) have wrong alignment with UE world ",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWhen loading the ```asset``` via ```load``` and placing it into the UE ```level``` map, it has wrong rotation on X axis.\r\n\r\n![image](https://user-images.githubusercontent.com/112623825/234894981-79a0b02e-5ef5-4468-9423-29b874fabc99.png)\r\n\r\nWhen user adjusts the ```Rotation X``` to ```-90.0``` Degrees it fixes it and orientation matches the UE world.\r\n\r\n![image](https://user-images.githubusercontent.com/112623825/234895452-78db23c5-9abf-4eee-82f7-5200ee1e321e.png)\r\n\r\n\n\n### Expected Behavior:\n\nDifference between DCC must be resolved so its correctly oriented when loaded to UE.\n\n### Version\n\n3.15.5\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Load static mesh in Alembic (originating from maya dcc)\r\n2. Drag the mesh into level \r\n3. Check mesh rotation visually if correct\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5839](https://app.clickup.com/t/861mqe6bp)]",
        "url": "https://github.com/ynput/OpenPype/issues/4911"
    },
    {
        "number": 4918,
        "title": "Maya: Review Transparency",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nThe `transparency` attribute on the review instance is not exposed to the settings.\n\n### How would you imagine the implementation of the feature?\n\nCould follow the same logic as for [`Display Lights`](https://github.com/ynput/OpenPype/pull/4145)\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5852](https://app.clickup.com/t/861mqn65k)]",
        "url": "https://github.com/ynput/OpenPype/issues/4918"
    },
    {
        "number": 4922,
        "title": "Bug: Integrate Asset deletes files if review gets created in Tray Publisher",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nI have a shot that goes from 1001 to 1166 with 20 frames start handles and 10 frames end handles, so 0981 to 1176.\r\nIf I publish frame 1020 to 1050 without a review everything goes as expected but if I add those frames as review files, all files between 1001-1019 and 1051-1166 gets deleted. It doesn't delete the handles frames.\r\n\r\nHere is a video showing the problem:\r\nhttps://user-images.githubusercontent.com/49758407/235352199-1d230718-bf18-44ac-a85f-7e2310cbe64e.mp4\r\n\r\nI tried to see what might cause the bug but I can't seem to figure it out myself.\r\n\r\n### Expected Behavior:\r\n\r\nNo files should be deleted at all!\r\n\r\n### Version\r\n\r\n3.15.5\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Create a shot with handles (example 1001-1101 with 10 frames handles)\r\n2. Render an image sequence for the whole frame range including handles\r\n3. In the Tray publisher, add some frames from the middle (example 1020-1050) as a render and the same frames as review frames\r\n4. Publish and see files being removed!\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\nHere is my whole log: https://pastebin.com/VKpKZhQZ\r\n\r\n\r\n[cuID:[OP-5853](https://app.clickup.com/t/861mqp4d0)]",
        "url": "https://github.com/ynput/OpenPype/issues/4922"
    },
    {
        "number": 4947,
        "title": "Bug: Ayon - integrating hero version fails (within maya)",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nStandard model publish, integrating a hero version fails with this error message:\r\n\r\n```\r\nInstance: \r\nmodelMain\r\nMessage: \r\nObject of type object is not JSON serializable\r\nLine: \r\n179\r\nTraceback: \r\nTraceback (most recent call last):\r\n  File \"/cache/dev/OpenPype/.venv/lib/python3.9/site-packages/pyblish/plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"/cache/dev/OpenPype/openpype/plugins/publish/integrate_hero_version.py\", line 98, in process\r\n  File \"/cache/dev/OpenPype/openpype/plugins/publish/integrate_hero_version.py\", line 223, in integrate_instance\r\n  File \"/cache/dev/OpenPype/openpype/client/server/operations.py\", line 775, in update_entity\r\n    project_name, entity_type, entity_id, update_data, self\r\n  File \"/cache/dev/OpenPype/openpype/client/server/operations.py\", line 560, in __init__\r\n    project_name, entity_id, update_data, self.con\r\n  File \"/cache/dev/OpenPype/openpype/client/server/conversion_utils.py\", line 1172, in convert_update_hero_version_to_v4\r\n    version = con.get_version_by_id(project_name, version_id)\r\n  File \"/cache/dev/OpenPype/openpype/vendor/python/common/ayon_api/server_api.py\", line 3176, in get_version_by_id\r\n    for version in versions:\r\n  File \"/cache/dev/OpenPype/openpype/vendor/python/common/ayon_api/server_api.py\", line 3128, in get_versions\r\n    for parsed_data in query.continuous_query(self):\r\n  File \"/cache/dev/OpenPype/openpype/vendor/python/common/ayon_api/graphql.py\", line 370, in continuous_query\r\n    response = con.query_graphql(query_str, variables)\r\n  File \"/cache/dev/OpenPype/openpype/vendor/python/common/ayon_api/server_api.py\", line 1250, in query_graphql\r\n    json=data\r\n  File \"/cache/dev/OpenPype/openpype/vendor/python/common/ayon_api/server_api.py\", line 763, in _do_rest_request\r\n    response = function(url, **kwargs)\r\n  File \"/cache/dev/OpenPype/.venv/lib/python3.9/site-packages/requests/sessions.py\", line 635, in post\r\n    return self.request(\"POST\", url, data=data, json=json, **kwargs)\r\n  File \"/cache/dev/OpenPype/.venv/lib/python3.9/site-packages/requests/sessions.py\", line 573, in request\r\n    prep = self.prepare_request(req)\r\n  File \"/cache/dev/OpenPype/.venv/lib/python3.9/site-packages/requests/sessions.py\", line 496, in prepare_request\r\n    hooks=merge_hooks(request.hooks, self.hooks),\r\n  File \"/cache/dev/OpenPype/.venv/lib/python3.9/site-packages/requests/models.py\", line 371, in prepare\r\n    self.prepare_body(data, files, json)\r\n  File \"/cache/dev/OpenPype/.venv/lib/python3.9/site-packages/requests/models.py\", line 511, in prepare_body\r\n    body = complexjson.dumps(json, allow_nan=False)\r\n  File \"/usr/autodesk/maya2022/lib/python3.7/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n  File \"/usr/autodesk/maya2022/lib/python3.7/json/encoder.py\", line 199, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/usr/autodesk/maya2022/lib/python3.7/json/encoder.py\", line 257, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"/usr/autodesk/maya2022/lib/python3.7/json/encoder.py\", line 179, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type object is not JSON serializable\r\n```\r\n\r\nI'm guessing that this is something connected to how OP db handles things vs. how Ayon likes things.\r\n\r\nrunning the 'release/next-minor' branch\n\n### Expected Behavior:\n\n_No response_\n\n### Version\n\n3.15.6-nightly.1\n\n### What platform you are running OpenPype on?\n\nLinux / Centos\n\n### Steps To Reproduce:\n\n1. Run ayon-backend docker, run Openpype with the release/next-minor branch. \r\n2. Launch maya. \r\n3. Publish a model.\r\n4. publish again the same model (aiming for a v002 and a hero version pointing at v002). Hero integration fails.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5880](https://app.clickup.com/t/861mruy19)]",
        "url": "https://github.com/ynput/OpenPype/issues/4947"
    },
    {
        "number": 4949,
        "title": "Bug: Representations right click error - 3.15.6-nightly.1 next-minor",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nRight click on subset produces an error.\n\n### Expected Behavior:\n\nProduce a list of available representations.\n\n### Version\n\n3.15.6-nightly.1\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\nCreated new project on Ayon Server\r\n\r\nIn Editor Tab\r\n- Create folder assets\r\n- Create asset \r\n- Create modeling task\r\n\r\n![image](https://user-images.githubusercontent.com/54645515/236957346-7bec9722-5193-42af-94cf-fa7234319093.png)\r\n\r\nLaunch Maya via Launcher\r\n\r\n- Create sphere - ball_GEO\r\n- Grouped under geo_GRP \r\n- Create modeling publish\r\n- Add geo_GRP to set\r\n- Publish(all checks green, publish is good)\r\n\r\nNew Maya scene\r\n\r\n- Loader\r\n- Navigate to asset\r\n- Right click subset\r\n- No menu - error\r\n\r\n![image](https://user-images.githubusercontent.com/54645515/236957608-d6c1a29d-c980-4f51-af1e-f08659fce826.png)\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n```shell\n# Traceback (most recent call last):\r\n#   File \"E:\\ayon\\OpenPype-release-next-minor\\build\\exe.win-amd64-3.9\\openpype\\tools\\loader\\widgets.py\", line 481, in on_context_menu\r\n#     self._repre_contexts_for_loaders_filter(items)\r\n#   File \"E:\\ayon\\OpenPype-release-next-minor\\build\\exe.win-amd64-3.9\\openpype\\tools\\loader\\widgets.py\", line 350, in _repre_contexts_for_loaders_filter\r\n#     for repre_doc in repre_docs:\r\n#   File \"E:\\ayon\\OpenPype-release-next-minor\\build\\exe.win-amd64-3.9\\openpype\\client\\server\\entities.py\", line 502, in get_representations\r\n#     fields = representation_fields_v3_to_v4(fields, con)\r\n#   File \"E:\\ayon\\OpenPype-release-next-minor\\build\\exe.win-amd64-3.9\\openpype\\client\\server\\conversion_utils.py\", line 603, in representation_fields_v3_to_v4\r\n#     fields |= {\r\n# TypeError: unsupported operand type(s) for |=: 'list' and 'set'\n```\n\n\n### Additional context:\n\nWindows\r\n3.15.6-nightly.1 \r\nBanch: release/next-minor\r\nMaya 2023.2\r\n\n\n\n[cuID:[OP-5881](https://app.clickup.com/t/861mrwpjf)]",
        "url": "https://github.com/ynput/OpenPype/issues/4949"
    },
    {
        "number": 4951,
        "title": "Bug: Ayon - maya - \"Set Frame Range\" fails due to keyerror",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nRunning from the release/next-minor branch\r\n\r\nRun the command from the menu, it fails with the message\r\n# Error: KeyError: file /cache/dev/OpenPype/openpype/hosts/maya/api/lib.py line 2230: 'include_handles' # \r\n\r\nwhich points to that maya settings don't have an `include_handles` setting.\r\n\r\n\n\n### Expected Behavior:\n\nThe framerange would be set to the values in the db.\n\n### Version\n\n3.15.6-nightly.1\n\n### What platform you are running OpenPype on?\n\nLinux / Centos\n\n### Steps To Reproduce:\n\n1. Run the release/next-minor branch,\r\n2. Run maya from a shot\r\n3. select \"Set Frame Range\"\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5885](https://app.clickup.com/t/861mrzy84)]",
        "url": "https://github.com/ynput/OpenPype/issues/4951"
    },
    {
        "number": 4954,
        "title": "Bug: Ayon Maya Review Creation - Profile key Error - 3.15.6-nightly.1 next-minor",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nDoesn't create a Review subset\n\n### Expected Behavior:\n\nCreate a review subset node\n\n### Version\n\n3.15.6-nightly.1\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\nFrom Ayon menu in Maya\r\n\r\n1. Create...\r\n2. Select review\r\n3. Create button\r\n4. Error dialog\r\n\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n```shell\nFailed to create Subset: \"reviewMain\" Family: \"review\" in Asset: \"chr\"\r\n\r\nError: 'profiles'\r\n\r\nTraceback (most recent call last):\r\n  File \"E:\\ayon\\OpenPype-release-next-minor\\build\\exe.win-amd64-3.9\\openpype\\tools\\creator\\window.py\", line 431, in _on_create\r\n    legacy_create(\r\n  File \"E:\\ayon\\OpenPype-release-next-minor\\build\\exe.win-amd64-3.9\\openpype\\pipeline\\create\\legacy_create.py\", line 197, in legacy_create\r\n    plugin = Creator(name, asset, options, data)\r\n  File \"E:\\ayon\\OpenPype-release-next-minor\\build\\exe.win-amd64-3.9\\openpype\\hosts\\maya\\plugins\\create\\create_review.py\", line 44, in __init__\r\n    preset = lib.get_capture_preset(\r\n  File \"E:\\ayon\\OpenPype-release-next-minor\\build\\exe.win-amd64-3.9\\openpype\\hosts\\maya\\api\\lib.py\", line 3931, in get_capture_preset\r\n    if plugin_settings[\"profiles\"]:\r\nKeyError: 'profiles'\n```\n\n\n### Additional context:\n\nrelease-next-minor\r\nMaya 2023.2\r\nWindows 11\n\n\n[cuID:[OP-5887](https://app.clickup.com/t/861mt2d5a)]",
        "url": "https://github.com/ynput/OpenPype/issues/4954"
    },
    {
        "number": 4961,
        "title": "Maya:  Assembly Model Transform validator",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nOn behalf of @LiborBatek :\r\n\r\nWith `Assembly` family there is also `Assembly Model Transforms` validator for any transforms present on the Transform nodes.\r\n\r\nIt doesnt seem much sensible to be forced to freeze all transform on any Assembly part. Imagine several artists collaborating on multiple parts of the Assembly being forced by OP to freeze all transforms when publishing the models. Pretty limiting imho.\r\n\r\nIts also noted in that validator doc paragraph at the top\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/33513211/1bfef0ee-ad54-4ad2-bd98-b54663d7d9ac)\r\n![image](https://github.com/ynput/OpenPype/assets/33513211/2b1a48c5-e6de-435d-ae87-637dfd02b18d)\r\n\n\n### Expected Behavior:\n\nPublishing of `Assembly` should allow non-frozen transforms. This validator should be optional and disabled by default.\n\n### Version\n\n3.15.7-nightly.2\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Create *Assembly* with asset without frozen transforms\r\n2. Publish\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n\ud83d\udde8\ufe0f Discussed and related here: #4859\n\n\n[cuID:[OP-5900](https://app.clickup.com/t/863gq7r1p)]",
        "url": "https://github.com/ynput/OpenPype/issues/4961"
    },
    {
        "number": 4968,
        "title": "Ftrack: Have single place where ftrack family is assigned",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nAssignment of ftrack family is already cleaned up in the codebase a lot, but there are still places where it's hardcoded in extractors and collectors of host integration. It's off and the feeling of it is confusing. Also deadline is adding ftrack family to every instance that is submitted -> that's the worst usecase I think.\n\n### How would you imagine the implementation of the feature?\n\nRemove the family assignement which are not inside ftrack module and figure out if they were necessary or were already handled by settings. If were needed then try to handle them by settings, otherwise add customized ftrack plugins for the specific usecase (I hope this won't happen). Deadline probably should not be acknowledged about the ftrack family at all and should collect ftrack family decide if it's needed or not.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\nPlaces in code:\r\nHoudini - collect review\r\nMaya - collect review\r\nHarmony - collect instances\r\nEditorial - Colect editorial resources\r\n              - Collect OTIO review\r\nDeadline - Submit publish job (`_solve_families` and `families_transfer`)\r\nRoyalRender - Collect sequences from job\r\nGlobal - Collect rendered files\n\n\n[cuID:[OP-5902](https://app.clickup.com/t/861mtg1bv)]",
        "url": "https://github.com/ynput/OpenPype/issues/4968"
    },
    {
        "number": 4979,
        "title": "Bug: remove hardcoded env for Fusion",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nIt seems there is/are some hardcoded env variables for Fusion, making it quite frustrating to setup \r\n\r\n<img width=\"626\" alt=\"image\" src=\"https://github.com/ynput/OpenPype/assets/352795/62c61ac1-e8db-43ce-9f19-2720ff180d13\">\r\n\r\n\n\n### Expected Behavior:\n\nshould be removed, or moved to defaults for Fusion \n\n### Version\n\n3.15.7\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\ntry to set any env variable for python path other than hardcoded `FUSION16_PYTHON36_HOME`\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5940](https://app.clickup.com/t/863grmu78)]",
        "url": "https://github.com/ynput/OpenPype/issues/4979"
    },
    {
        "number": 4982,
        "title": "Enhancement: Prioritize correct pymxs implementation over rt.execute for improved safety and efficiency in 3ds Max",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nConsider refactoring the existing implementation of 3dsmax to replace `rt.execute()` calls with the appropriate pymxs implementation. Although `rt.execute() `allows executing MAXScript code within pymxs, it is less efficient and less safe compared to using pymxs functions directly.` rt.execute()` involves parsing and evaluating MAXScript code, leading to a slight performance overhead. Additionally, and more importantly, it often bypasses crucial built-in safety mechanisms provided by the pymxs API, such as error handling. This can lead to silent fails making debugging more challenging.\r\n\n\n### How would you imagine the implementation of the feature?\n\nRefactoring the code would involve replacing `rt.execute()` calls with there pymxs implementation (where possible).\r\nAn example of this:\r\n\r\nCurrent:\r\n`frange_cmd = f\"animationRange = interval {frame_start} {frame_end}\"`\r\n`rt.execute(frange_cmd)`\r\n\r\nRefactor:\r\n`\r\nrt.animationRange = rt.interval(frame_start, frame_end)\r\n`\r\n\r\nThis new implementation directly assigns the desired animation range to rt.animationRange using the rt.interval() constructor. By doing so, we eliminate the need to construct a MAXScript command string and execute it using rt.execute(). This refactor improves efficiency and eliminates potential safety concerns associated with using rt.execute() for this particular example.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-5945](https://app.clickup.com/t/861mu44pg)]",
        "url": "https://github.com/ynput/OpenPype/issues/4982"
    },
    {
        "number": 5007,
        "title": "Unreal: control review on render instance",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nRender creator should be able to set `review` on render instance and it's default value should be set by Settings as is done in other hosts.\n\n### How would you imagine the implementation of the feature?\n\nCheckbox on render instance should influence if `review` family is added or not. Its default value should be controled by Settings.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6023](https://app.clickup.com/t/861mupkrf)]",
        "url": "https://github.com/ynput/OpenPype/issues/5007"
    },
    {
        "number": 5009,
        "title": "Ayon Tray: Admin > Studio Settings item",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nOpenPype has in Tray `Admin > Studio Settings` item that will open Settings. In AYON, we should keep it with changed functionality so the website with settings is opened in browser.\n\n### How would you imagine the implementation of the feature?\n\nFor backwards compatibility it should be as simple as opening default browser with specific URL.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6024](https://app.clickup.com/t/861mupvd8)]",
        "url": "https://github.com/ynput/OpenPype/issues/5009"
    },
    {
        "number": 5020,
        "title": "Enhancement: multiple versions installed",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues.\r\n\r\n### Please describe the feature you have in mind and explain what the current shortcomings are?\r\n\r\nwindows OP installer is removing records of current versions of OP installed.\r\n\r\n- previous versions need to be removed manually\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/352795/1c5706f1-391f-4ff0-9558-665b9b9d63cd)\r\n\r\n\r\n### How would you imagine the implementation of the feature?\r\n\r\n- the installer should register each version and let the user uninstall specific version\r\n- the installer should ask if you want to remove already installed version\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the enhancement request.\r\n\r\n### Describe alternatives you've considered:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\nOS: Windows \r\n\r\n\r\n[cuID:[OP-6035](https://app.clickup.com/t/863gug4mm)]",
        "url": "https://github.com/ynput/OpenPype/issues/5020"
    },
    {
        "number": 5035,
        "title": "Nuke: Frame Range on Render instances",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nThere is no visual indication of what the frame range is for `render` instances.\r\n\r\nCurrently users can limit the frame range on the write node, but that is not displayed anywhere when publishing.\n\n### How would you imagine the implementation of the feature?\n\nWould be great to have a frame range, which can be edited, as an instance attribute.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6051](https://app.clickup.com/t/861mv5jf8)]",
        "url": "https://github.com/ynput/OpenPype/issues/5035"
    },
    {
        "number": 5043,
        "title": "Nuke: Knobs values management is under Color Management.",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nThe settings for knob values is under `Color Management (ImageIO)` (`project_settings/nuke/imageio/nodes/requiredNodes/0/knobs/1/type`), which makes it hard to find.\n\n### Expected Behavior:\n\nMove the settings for the knob values to `project_settings/nuke/create` or somewhere more logical than `Color Management`.\n\n### Version\n\n3.15.8\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Open settings and look in `project_settings/nuke/imageio/nodes/requiredNodes/0/knobs/1/type`.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6055](https://app.clickup.com/t/863gv4w0m)]",
        "url": "https://github.com/ynput/OpenPype/issues/5043"
    },
    {
        "number": 5056,
        "title": "Relative pipeline path for OCIO config.",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nWould like to see the `template` in the colorspace on representations support relative paths within `OPENPYPE_ROOT`.\r\n\r\nCurrently the templates support relative paths in the project directory, but that creates duplicated configs to manage. Using a relative path to the pipeline would allow for studio wide configs.\n\n### How would you imagine the implementation of the feature?\n\nSimilar to how the `template` makes a relative path from project paths, we could support relative paths within the pipeline directory. Ei. `{root[work]}` > `{OPENPYPE_ROOT}`.\r\n\r\nSince the templates are using anatomy to construct the absolute path, we might need to inject the pipeline root.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6071](https://app.clickup.com/t/863gvp9ac)]",
        "url": "https://github.com/ynput/OpenPype/issues/5056"
    },
    {
        "number": 5057,
        "title": "Nuke: Load Image fails on hero versions",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nWhen hero version is loaded using `Load Image` an error happens\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\JakubTrllo\\Desktop\\Prace\\openpype3_4\\openpype\\tools\\loader\\widgets.py\", line 1595, in _load_representations_by_loader\r\n    options=options\r\n  File \"C:\\Users\\JakubTrllo\\Desktop\\Prace\\openpype3_4\\openpype\\pipeline\\load\\utils.py\", line 313, in load_with_repre_context\r\n    return loader.load(repre_context, name, namespace, options)\r\n  File \"C:\\Users\\JakubTrllo\\Desktop\\Prace\\openpype3_4\\openpype\\hosts\\nuke\\plugins\\load\\load_image.py\", line 153, in load\r\n    data_imprint.update({k: context[\"version\"]['name']})\r\nKeyError: 'name'\r\n```\r\n\r\n### Expected Behavior:\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n3.15.9-nightly.1\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\nPrerequirements: Published `image` as hero version.\r\n1. Open Nuke\r\n2. Open loader\r\n3. Load hero version of the image\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-6077](https://app.clickup.com/t/863gvq64d)]",
        "url": "https://github.com/ynput/OpenPype/issues/5057"
    },
    {
        "number": 5068,
        "title": "Bug: Nuke Source family integrate error",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nI've loaded to two images (each of them was not part of the sequence with different name conventions) into Nuke and then selected them both. After trying to publish I've got an error.\n\n### Expected Behavior:\n\nPublishing without error\n\n### Version\n\n3.15.9-nightly.2\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Import to images\r\n2. Select them\r\n3. Go to OpenPype -> Create...\r\n4. Publish type: Source (read)\r\n5. Use selection: on (green)\r\n6. Press Create >>\r\n7. Publish\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n```shell\nTraceback (most recent call last):\r\n  File \"C:\\Users\\pypeclub\\code\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n    runner(*args)\r\n  File \"C:\\Users\\pypeclub\\code\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 192, in process\r\n    six.reraise(*sys.exc_info())\r\n  File \"C:\\Users\\pypeclub\\code\\OpenPype\\.venv\\lib\\site-packages\\six.py\", line 719, in reraise\r\n    raise value\r\n  File \"C:\\Users\\pypeclub\\code\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 179, in process\r\n    self.register(instance, file_transactions, filtered_repres)\r\n  File \"C:\\Users\\pypeclub\\code\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 275, in register\r\n    instance)\r\n  File \"C:\\Users\\pypeclub\\code\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 628, in prepare_representation\r\n    self._validate_repre_files(files, is_sequence_representation)\r\n  File \"C:\\Users\\pypeclub\\code\\OpenPype\\openpype\\plugins\\publish\\integrate.py\", line 525, in _validate_repre_files\r\n    \", \".join([str(rem) for rem in remainders])\r\nopenpype.pipeline.publish.publish_plugins.KnownPublishError: Files of representation does not contain proper sequence files.\r\nCollected collections: \r\nCollected remainders: 2728052.jpg\n```\n\n\n### Additional context:\n\n![Screenshot 2023-05-31 at 11 19 56](https://github.com/ynput/OpenPype/assets/120187648/7996fc38-7f88-48c5-aeec-b39132d9bc56)\r\n\n\n\n[cuID:[OP-6090](https://app.clickup.com/t/863gw29bz)]",
        "url": "https://github.com/ynput/OpenPype/issues/5068"
    },
    {
        "number": 5088,
        "title": "Enhancement: Access or embed OpenPype's Python Script Editor in hosts",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nI'd like to embed the Python Console Interpreter module's script editor widget into a few hosts that internally have a very shitty scripting console, like Resolve, Fusion, Substance Painter and Cinema4D (something I've been working on in my spare time).\r\n\r\nEach one would need its own settings registry so opening one host doesn't show the scripts stored in the other hosts. I discussed with @iLLiCiTiT something like:\r\n\r\n```python\r\nregistry = PythonInterpreterRegistry(suffix=\"fusion\")\r\nwidget = PythonInterpreterWidget(registry=registry)\r\nwidget.show()\r\n```\r\n\r\nBut he mentioned it's preferred to then create a dedicated controller class for the tool:\r\n\r\n> Rather having some base/default controller which has implemented default behavior. And if you want to change it then inherit from it and change some of the behavior.\r\n> \r\n> ```python\r\n> Class BaseController(object):\r\n>     def init_registry(self):\r\n>         ...\r\n> \r\n> \r\n> class HostController(BaseController):\r\n>     def init_registry(self):\r\n>         ...\r\n> ```\r\n> (as an example)\r\n> the controller should require to have implemented methods like `get_preferences`, `save_preferences(self, width, height, splitter_size, tabs)` and the logic underneath is up to controller\r\n> so technically you can totally ignore registry and store it where you need (in extreme cases to workfile) or to the database\n\n### How would you imagine the implementation of the feature?\n\nPreferably it's like an extra addon that embeds itself into each of the hosts so that its logic is contained and easily enabled/disabled - maybe even an addon for an integration per host (or that might be overkill?)\r\n\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\nLive without a decent script editor in some hosts. I've in the past already hacked just the widget already into the hosts in my own branches during development for easier testing. Like for example in OpenRV which I believe currently also lives in the #4839 PR [here](https://github.com/ynput/OpenPype/pull/4839/files#diff-e438e8de13223c4a9dc765d03ee96302e742f74cd2d97ba98a6509e7609e0a24)\r\n\r\n![openrv_openpype_python_script_editor](https://github.com/ynput/OpenPype/assets/2439881/8aa231b8-d6bb-4839-ba6e-39db56596028)\r\n\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6121](https://app.clickup.com/t/863gwv682)]",
        "url": "https://github.com/ynput/OpenPype/issues/5088"
    },
    {
        "number": 5097,
        "title": "Bug: Maya Review instance - broken Isolate feature",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWhen doing ```Review``` in ```Maya 2023``` in latest ```OP 3.15.9``` it doesnt take ```Isolate On``` even turned on and produces review with other entities present in the scene not isolating just those in the review subset.\r\n\r\n\n\n### Expected Behavior:\n\n```Review``` instance with option ```Isolate On``` should isolate just whats inside the subset so user is capable of producing multiple reviews even when assets occupiing same world position by hiding non active subset items present for other review instances.\n\n### Version\n\n3.15.9\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Create ```Review``` instance\r\n2. turn on ```Isolate```\r\n3. Create some object not present in ```Review``` instance obscuring the content of the review items\r\n4. Publish the ```Review``` and check if only Review content is present and no other objects obscuring them\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\nCould be connected to recently added ```Review``` and ```Profiles``` features in OP Settings. Also should be reviewed the full functionality of those. For ie rendering viewport overrides etc.\n\n\n[cuID:[OP-6141](https://app.clickup.com/t/863gxjrrv)]",
        "url": "https://github.com/ynput/OpenPype/issues/5097"
    },
    {
        "number": 5112,
        "title": "Bug: Ayon - regular user can't get loader context menu",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWith ayon after the subset->product change, running `release/next-minor` branch.\r\n\r\nA user is defined as `User` with e.g. editor role. Right-clicking a product in the loader results en error and no context menu is shown:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"ayon_build_path/openpype/tools/loader/widgets.py\", line 481, in on_context_menu\r\n    self._repre_contexts_for_loaders_filter(items)\r\n  File \"ayon_build_path/openpype/tools/loader/widgets.py\", line 350, in _repre_contexts_for_loaders_filter\r\n    for repre_doc in repre_docs:\r\n  File \"ayon_build_path/openpype/client/server/entities.py\", line 516, in get_representations\r\n    yield convert_v4_representation_to_v3(representation)\r\n  File \"ayon_build_path/openpype/client/server/conversion_utils.py\", line 715, in convert_v4_representation_to_v3\r\n    .replace(\"{folder[name]}\", \"{asset}\")\r\nAttributeError: 'NoneType' object has no attribute 'replace'\r\n```\r\n\r\nHowever, if I make the user a `Manager` then the context menu shows up as expected\n\n### Expected Behavior:\n\n_No response_\n\n### Version\n\n3.15.10-nightly.1\n\n### What platform you are running OpenPype on?\n\nLinux / Centos\n\n### Steps To Reproduce:\n\n1. Make user a regular `User`\r\n2. Try to import a product with the loader\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6156](https://app.clickup.com/t/861mwt7d6)]",
        "url": "https://github.com/ynput/OpenPype/issues/5112"
    },
    {
        "number": 5125,
        "title": "Unreal: OCIO support",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nUnreal is handling OCIO differently - it is not enough to set `OCIO` environment variable. Configs need to be copied over to the project itself and then set on OCIO management asset.\n\n### How would you imagine the implementation of the feature?\n\nPre-launch hook should check wheter OCIO configs set in the settings (#4700) match configs in the project and if not, they needs to be synced, by direct rewriting or versioning them inside.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6159](https://app.clickup.com/t/861mx252q)]",
        "url": "https://github.com/ynput/OpenPype/issues/5125"
    },
    {
        "number": 5126,
        "title": "Bug: Open last workfile does not work with AVALON_SCENEDIR",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nOpenPype inherited the feature from Avalon to specify an `AVALON_SCENEDIR` which acts as the subfolder in which workfiles should be saved in the work directory for a shot. It's basically what [this issue describes](https://github.com/ynput/OpenPype/issues/2567).\r\n\r\nFor example as can be seen [here](https://github.com/ynput/OpenPype/blob/f36b8f49a2202b10e5f17fc4ecb26cfa1ab6e428/openpype/hosts/blender/api/workio.py#L82-L89) the workfiles directory then becomes: `AVALON_WORKDIR/AVALON_SCENEDIR`.\r\n\r\nThe \"open last workfile on launch\" feature does not work with `AVALON_SCENEDIR` subfolder for work files because it does not consider the subfolder at all. Any pointers on how this could best be fixed?\r\n\r\n### Expected Behavior:\r\n\r\nWith `AVALON_SCENEDIR` defined in an application's environment the subfolder should be used to look for existing workfiles.\r\n\r\nAn alternative would be to completely deprecate the `AVALON_SCENEDIR` behavior to begin with and instead implement #2567 in such a way that the same feature can still be used but in a different manner, e.g. by having a scenedir template/profile per application.\r\n\r\n### Version\r\n\r\n3.15.11-nightly.1\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Enable launch last workfile (= enabled by default)\r\n2. Add `\"AVALON_SCENEDIR\": \"scenes\"` to e.g. the houdini or maya environment\r\n3. Save a workfile with the Workfiles tool.\r\n4. Restart the application, it should launch the existing workfile directly but it does not. (because it doesn't check in the subfolder but the work root instead)\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\nIssues with the `AVALON_SCENEDIR` have come up before so I'm linking theses issues as **related**:\r\n- [Differentiate workdir and workfiles directory](https://github.com/ynput/OpenPype/issues/2567)\r\n- [API: Query workfiles for an asset](https://github.com/ynput/OpenPype/issues/3389)\r\n- [Workfiles tool to show all files](https://github.com/ynput/OpenPype/issues/4216#issuecomment-1468059376)\r\n\r\n\r\n[cuID:[OP-6160](https://app.clickup.com/t/863gyuk25)]",
        "url": "https://github.com/ynput/OpenPype/issues/5126"
    },
    {
        "number": 5135,
        "title": "Enhancement: Workfile template builder using publishes instead of direct filepath",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nThe workfile template builder currently uses just some scene files saved in a specific folder for a particular host for which the path is set in the Studio Settings. I would like to propose to refactor this functionality into using published workfile templates instead.\r\n\r\n**Pros**\r\n\r\n- Workfile templates are versioned and tracked\r\n- Workfile templates could then sync automatically via site-sync\r\n- Workfile templates could also easily be \"loaded manually\" to test a specific workfile template.\r\n- Additional studio-specific validators could be deployed upon the generation of workfile templates.\r\n- The 'loaded' workfile template could containerise into the workfile as a 'loaded container' and thus a publish from the workfile can then also report which template was used to build that workfile due to \"input links\"\r\n\r\n**Cons**\r\n\r\n- It'd require a publish instead of just a \"drop a file there\" which might be trickier to use a single template across multiple projects (unless maybe it'd be possible to load from another project like library loader too)\n\n### How would you imagine the implementation of the feature?\n\nIn settings instead of defining a path to the file to load you'd instead pass it the `asset > subset` to load for particular profile.\r\n\r\n---\r\n\r\nNote that the API for the workfile builder should still have an interface through which you could import a particular template `builder.import_template` and also build the current scene `builder.populate_scene_placeholders`. It's only the automatic \"build workfile for current task\" feature which would then find the relevant publish and load it from the filepath. \r\n\r\n_I'd even argue that the current logic is already failing there since you can't just build the current scene in maya using `builder.populate_scene_placeholders` but require the `import_path` to have been triggered so a `PLACEHOLDER_SET` exists. The only workaround for that currently is:_\r\n\r\n```python\r\nfrom openpype.hosts.maya.api.workfile_template_builder import MayaTemplateBuilder, PLACEHOLDER_SET\r\nfrom openpype.pipeline import registered_host\r\n\r\nhost = registered_host()\r\nbuilder = MayaTemplateBuilder(host)\r\nif not cmds.objExists(PLACEHOLDER_SET):\r\n    cmds.sets(name=PLACEHOLDER_SET, empty=True)\r\nbuilder.populate_scene_placeholders(keep_placeholders=False)\r\n```\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\nAn alternative would be to, e.g. for maya, publish a maya scene and have the published path set in the studio settings. However it'd disable some of the cons of not loading an actual representation directly (e.g. site sync, etc).\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6162](https://app.clickup.com/t/861mxk3ug)]",
        "url": "https://github.com/ynput/OpenPype/issues/5135"
    },
    {
        "number": 5138,
        "title": "Bug: OpenTimelineIO shouldn't be part of global environment",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWe are installing OpenTimelineIO to OpenPype environment and then we are passing it to hosts. But there is a chance host will have its own OTIO or its own verison of Python with specific OTIO version. Only order of path resolution will then result either in success or failure when OTIO modules are imported.\r\n\r\nCurrent case:\r\n\r\n**Resolve with Python 3.6**\r\nThere are no existing wheels of OTIO for Python 3.6, so custom build must be done. When OTIO from OpenPype preceed in path variables OTIO for Python 3.6, OpenPype integration in Resolve will crash because of OTIO import.\r\n\r\nTemporary solution:\r\n\r\nAdd to resolve settings `PYTHONPATH` like:\r\n\r\n```\r\n\"PYTHONPATH\": [\r\n    \"{LOCALAPPDATA}/Programs/Python/Python36/lib/site-packages\",\r\n    \"{PYTHONPATH}\"\r\n]\r\n```\r\n*(on windows)*\r\n\r\nThat way OTIO installed to Python 3.6 takes priority over default OpenPype version, but it is far from ideal.\n\n### Expected Behavior:\n\nOTIO should be handled the same way as PySide2, OpenColorIO and other frameworks that might already be used in some form in hosts.\n\n### Version\n\n3.15.10\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\nThis might  be hard to reporoduce because it depends on the specific studio configuration and environments. You can see it in effect in hosts with different python version than OpenPype has with their own OpenTimelineIO.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6173](https://app.clickup.com/t/861mxw8fh)]",
        "url": "https://github.com/ynput/OpenPype/issues/5138"
    },
    {
        "number": 5156,
        "title": "Enhancement: Change how Review is set on instace in Maya",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nWith change of Maya publishing to new publisher (#4388), it would be great to also change how review is assigned to instance. The way it works now is closely bound to previous system with all its limitations. How it works now:\r\n\r\nWhen you want to create review for another instance, lets say model:\r\n1) Create your Model instance\r\n2) Create Camera to be used for review\r\n3) Create Review instance with selected Camera\r\n4) Move Model instance set under Review instance set\r\n\r\nThis will then publish version of model and attach generated review to it.\r\nAlthough there is possibility to attach such review to multiple instances, it is not supported now.\r\n\r\nUsing renders as review data for instances is also possible, but the workflow is different - you need to add Model instance under the set representing render layer in Rendering instance.\n\n### How would you imagine the implementation of the feature?\n\nWith the new publisher system, attaching review could be easier. It could be simple checkbox on instance (or maybe combobox to allow selecting playblast/render/none). With the type change, new option specific to the workflow could be presented to the artist. Used camera can be selected from pre-collected cameras.\r\n\r\nIn more technical detail, this could be achieved by using virtual creator for Review that would invoke create either for playblast or render. When switching type, one creator would delete original instance and invoke the other one, transfer data if necessary.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6194](https://app.clickup.com/t/863h1n38x)]",
        "url": "https://github.com/ynput/OpenPype/issues/5156"
    },
    {
        "number": 5169,
        "title": "Bug: Maya - Xgen sidecar files arent copied to new xgen folder when saving workfile as an new asset workfile changing context",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWorking in a grooming workfile containing Xgen setup and changing context via \"Workfiles\" OP window to a new asset and perform \"Save as\" action for creating new workfile under that asset does not save sidecar files to a new destination of the newly created workfile. There is only xgen folder created but empty.\n\n### Expected Behavior:\n\nWhen re saving workfile to a new context under different asset, the xgen files should be saved to a new location too.\r\n\r\nNow just xgen folder get created but empty.\n\n### Version\n\n3.15.11-nightly.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1.Open/create maya workfile scene with Xgen groom setup.\r\n2.Try to re save the workfile as new workfile under different asset via OP>Workfiles\r\n3.Close and Reopen the new workfile.\r\n\r\nThere should be Xgen errors about missing xgen sidecar files....\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6222](https://app.clickup.com/t/863h2445a)]",
        "url": "https://github.com/ynput/OpenPype/issues/5169"
    },
    {
        "number": 5180,
        "title": "Bug: Delivery action from Ftrack can't resolve root",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nFtrack delivery actions results an error:\r\n\r\n```\r\nError during delivery action process:\r\nAnatomy template \"{root[delivery_test]}/{hierarchy}/{asset}/{task[name]}_v{version:0>4}.{ext}\" is unsolved. Missing keys: \"root[delivery_test]\".\r\n```\r\n\r\nRunning the same delivery from Loader works fine.\r\n\n\n### Expected Behavior:\n\nRunning delivery from FTrack should work the same as delivery from Loader.\r\n\n\n### Version\n\n3.15.9\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Define two roots in project_anatomy/roots\r\n2. Define a delivery template in project_anatomy/templates/delivery with the second root\r\n3. Run a delivery from FTrack with the defined delivery template\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n```shell\n2023-22-06 22:25:33 >>> [ Connected to Ftrack successfully ]\r\n2023-22-06 22:25:33 >>> [ Starting WebServer server ]\r\n2023-22-06 22:25:36 >>> [ Application \"Application action\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Batch Task Create\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"OpenPype Admin - Clean hierarchical custom attributes\" - Registered successfully (0.0017sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Sort Review\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Open File\" - Registered successfully (0.0022sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"OpenPype Admin - Create/Update Custom Attributes\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Create Folders\" - Registered successfully (0.0017sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Create Project Structure\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Delete Asset/Subsets\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"OpenPype Admin - Delete old versions\" - Registered successfully (0.0020sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Delivery\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Application \"DJV View\" - Registered successfully (0.0018sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"OpenPype Admin - Fill workfile attribute\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"OpenPype Admin - Job Killer\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Multiple Notes\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Prepare Project\" - Registered successfully (0.0018sec) ]\r\n2023-22-06 22:25:36 >>> [ RV path was not found. ]\r\n2023-22-06 22:25:36 >>> [ Action \"Seed Debug Project\" - Registered successfully (0.0022sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"OpenPype Admin - Store Thumbnails to avalon\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"OpenPype Admin - Sync To Avalon (Local)\" - Registered successfully (0.0019sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Thumbnail to Children\" - Registered successfully (0.0020sec) ]\r\n2023-22-06 22:25:36 >>> [ Action \"Thumbnail to Parent\" - Registered successfully (0.0016sec) ]\r\n2023-22-06 22:27:06 >>> [ Action \"Delivery\": Launched ]\r\n2023-22-06 22:27:06 >>> [ Delivery action just started. ]\r\n2023-22-06 22:27:06 *** WRN: >>> { Delivery }: [ Anatomy template \"{root[delivery_test]}/{hierarchy}/{asset}/{task[name]}_v{version:0>4}.{ext}\" is unsolved. Missing keys: \"root[delivery_test]\". ]\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\gaborca\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.9\\openpype\\modules\\ftrack\\event_handlers_user\\action_delivery.py\", line 479, in launch\r\n    report = self.real_launch(session, entities, event)\r\n  File \"C:\\Users\\gaborca\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.9\\openpype\\modules\\ftrack\\event_handlers_user\\action_delivery.py\", line 597, in real_launch\r\n    deliver_single_file(*args)\r\n  File \"C:\\Users\\gaborca\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.9\\openpype\\pipeline\\delivery.py\", line 154, in deliver_single_file\r\n    delivery_path = template_obj.format_strict(anatomy_data)\r\n  File \"C:\\Users\\gaborca\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.9\\openpype\\lib\\path_templates.py\", line 182, in format_strict\r\n    result.validate()\r\n  File \"C:\\Users\\gaborca\\AppData\\Local\\pypeclub\\openpype\\3.15\\openpype-v3.15.9\\openpype\\pipeline\\anatomy.py\", line 579, in validate\r\n    raise AnatomyTemplateUnsolved(\r\nopenpype.pipeline.anatomy.AnatomyTemplateUnsolved: Anatomy template \"{root[delivery_test]}/{hierarchy}/{asset}/{task[name]}_v{version:0>4}.{ext}\" is unsolved. Missing keys: \"root[delivery_test]\".\r\n2023-22-06 22:27:06 >>> [ Action \"Delivery\": Finished ]\n```\n\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6240](https://app.clickup.com/t/861mza8mz)]",
        "url": "https://github.com/ynput/OpenPype/issues/5180"
    },
    {
        "number": 5185,
        "title": "Bug: Thumbnail extractor is generating png instead of jpg",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nSeems like we are generating png (with alpha) instead of jpg thumbnail (publishing from Maya in this case)\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/352795/fa3f5091-f133-4378-9a6f-1950bd32e33d)\r\n\n\n### Expected Behavior:\n\n_No response_\n\n### Version\n\n3.15.11-nightly.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n- publish an instance with reviewable media to generate thumbnail \r\n- check the thumbnail format\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6259](https://app.clickup.com/t/861mzdjf1)]",
        "url": "https://github.com/ynput/OpenPype/issues/5185"
    },
    {
        "number": 5204,
        "title": "Bug: 3ds Max loose value types on instances",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nInstance data stored in 3ds Max loose their type -> potentially a value. That is because it is storing each key, value pair without information about the type. It works for string, list, dictionary but does not work for integer, float, or null (`None`).\r\n\r\nThis issue is probably not causing any major harm, but sometimes a value can be `None` and in that case `null` string is stored.\r\n\r\nOne of PRs that is handling boolean in some way: https://github.com/ynput/OpenPype/pull/5202 .\n\n### Expected Behavior:\n\nBecause it looks like max can store only strings (don't know the implementation background), the unknown value could be stored with similar prefix like `JSON::` -> `BOOL::`, `INT::`, `FLOAT::`, and  e.g. `NULL::VALUE` for None.\n\n### Version\n\n3.15.12-nightly.1\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\nThere are not any steps to reproduce.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6273](https://app.clickup.com/t/863h3k44j)]",
        "url": "https://github.com/ynput/OpenPype/issues/5204"
    },
    {
        "number": 5210,
        "title": "Maya: Loading Xgen in 2023 fails.",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\tools\\loader\\widgets.py\", line 1590, in _load_representations_by_loader\r\n    load_with_repre_context(\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\pipeline\\load\\utils.py\", line 308, in load_with_repre_context\r\n    return loader.load(repre_context, name, namespace, options)\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\hosts\\maya\\api\\plugin.py\", line 157, in load\r\n    self.process_reference(\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\hosts\\maya\\plugins\\load\\load_xgen.py\", line 84, in process_reference\r\n    write_xgen_file(data, xgen_file)\r\n  File \"C:\\Users\\tokejepsen\\OpenPype\\openpype\\hosts\\maya\\api\\lib.py\", line 3717, in write_xgen_file\r\n    with open(filepath, \"r\") as f:\r\nFileNotFoundError: [Errno 2] No such file or directory: 'P:/PROJECTS/toke_testing/OP_6222_xgen_sidecar_files/work/lookdev/toke_testing_OP_6222_xgen_sidecar_files_lookdev_v001__OP_6039_xgen_xgenMain_01___collection.xgen'\r\n```\r\n\r\nLooks like there might be some changed behaviour with referencing Xgen that causes the xgen file to be generated after we try to read it.\n\n### Expected Behavior:\n\nLoading Xgen should work in 2023.\n\n### Version\n\n3.15.12-nightly.1\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Load Xgen in Maya 2023\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6280](https://app.clickup.com/t/861n069w5)]",
        "url": "https://github.com/ynput/OpenPype/issues/5210"
    },
    {
        "number": 5236,
        "title": "Bug: Ftrack sync fails on new asset due to existing avalon/mongo id attributes",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nUpon syncing ftrack to OpenPype an error is generated if two assets next to each other in the hierarchy (siblings) share the same Mongo/Avalon ID on Ftrack due to copying an asset or inheriting it from the parent on create. See **Steps to reproduce** for more information.\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/f66d3671-adfd-445f-bf13-5a1163e83140)\r\n\r\nError report:\r\n```\r\nTraceback (most recent call last):\r\n  File \"\\openpype-v3.15.11-colorbleed.7\\openpype\\modules\\ftrack\\event_handlers_user\\action_sync_to_avalon.py\", line 80, in launch\r\n    result = self.synchronization(event, project_name)\r\n  File \"\\openpype-v3.15.11-colorbleed.7\\openpype\\modules\\ftrack\\event_handlers_user\\action_sync_to_avalon.py\", line 157, in synchronization\r\n    self.entities_factory.synchronize()\r\n  File \"\\openpype-v3.15.11-colorbleed.7\\openpype\\modules\\ftrack\\lib\\avalon_sync.py\", line 2023, in synchronize\r\n    self.session.commit()\r\n  File \"C:\\Program Files (x86)\\OpenPype\\3.15.11-colorbleed.1\\dependencies\\ftrack_api\\session.py\", line 1308, in commit\r\n    result = self.call(batch)\r\n  File \"C:\\Program Files (x86)\\OpenPype\\3.15.11-colorbleed.1\\dependencies\\ftrack_api\\session.py\", line 1687, in call\r\n    raise ftrack_api.exception.ServerError(error_message)\r\nftrack_api.exception.ServerError: Server reported error: IntegrityError( \"Duplicate entry '992288f-29b9-5e09-ac60-882211-prop_wallBar' for key 'context_parent_id_key'\"))\r\n```\r\n\r\nI suspect we're running into this issue now more than before due to new producers in our studio who seem to be copy/pasting or creating assets in a different way than other producers have done so far.\r\n\r\n### Expected Behavior:\r\n\r\nBest case would be if duplicating and/or creating new assets on Ftrack wouldn't copy the Avalon/Mongo ID to begin with, but hey... it happens. So I'd say on sync, if there are clashes where a Mongo ID exists on two assets this is what should happen:\r\n\r\n1. If one by same name already exists in the OpenPype database - the other not matching by name should get a new Avalon/Mongo ID assigned on Ftrack side.\r\n2. If one by the ID already exists in he OpenPype database then I think the most sensible thing to do is to automatically regenerate the IDs on Ftrack side for the _newest created assets_ (`created_at` data) and keep the id on the oldest one.\r\n\r\nI thought the first logic is was already in place but looking at what's occurring on our syncs that's not behaving as expected.\r\n\r\n### Version\r\n\r\n3.15.11\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\nTo reproduce:\r\n\r\n_For sake of producing the reproducable, disable auto sync for a moment_\r\n\r\n1. Create an asset underneath an existing asset that has publishes (this is important because assets seem to inherit the mongo id from its parent, even on duplicate it doesn't duplicate the id but takes it from its parent where you duplicated to)\r\n2. Move the asset one folder up so it lives next to the other asset. You now have to different assets next to each other in hierarchy (siblings) that have the same avalon/mongo id.\r\n    - An easier hack to reproduce the issue is by manually copy pasting the Mongo id from an existing asset to the new one.\r\n3. Actions > OpenPype Admin > Sync to Avalon\r\n\r\nI'm particularly mentioning clashing it with an existing asset that **has publishes** because that'll be what's holding the syncing from actually secretly \"renaming\" one of the entries in OpenPype database to avoid the ID clash and then change the ID of the other. At least, that's what helped me to reproduce it.\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-6320](https://app.clickup.com/t/861n0w2p7)]",
        "url": "https://github.com/ynput/OpenPype/issues/5236"
    },
    {
        "number": 5239,
        "title": "Bug: Maya Open last workfile on launch uses user's 'open file' preferences",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nWith open last workfile on launch enabled it seems that the file opened on launch actually uses Maya's preferences for the Open file options, as set here:\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/95425c2c-b51f-4040-8476-4e8b92e71bac)\r\n\r\nAs such, when e.g. Load Settings was saved to _Load no references_ then the scene is opened on launch with no references loaded. That's unlike how Maya's `host.open_file` behaves which disregards the user preferences.\r\n\r\n### Expected Behavior:\r\n\r\nI'm mostly reporting this due to artists reporting issues where a machine might have had the open file preferences tweaked to debug some issue and thus got saved into preferences - leaving them confused why the scene opens in an unexpected state.\r\n\r\nI'm wondering whether maybe we should align the behavior so that it behaves similar to Workfiles open file disregarding the user preferences.\r\n\r\nThe host install and initializing triggers before the file open in Maya - so it's likely that whenever \"launch last workfile\" triggers that we could perform some logic to reset e.g. the Open File user preferences so it behaves as it would originally. I'm not sure if there are other ways to 'fix' the behavior for a file passed to maya on launch.\r\n\r\n### Version\r\n\r\n3.15.12-nightly.2\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Set the Open File preferences (e.g. Load Settings > Load no references)\r\n2. Save settings + Save Preferences + Close maya\r\n3. Launch 'last workfile on launch' with a maya scene that has references.\r\n4. The references now are not loaded on launch.\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-6322](https://app.clickup.com/t/863h4xp2w)]",
        "url": "https://github.com/ynput/OpenPype/issues/5239"
    },
    {
        "number": 5255,
        "title": "Bug: Maya Frame/Animation ext validation",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nThe `Frame/Animation ext` render attribute is not validated, but when submitting to Deadline a certain (`name.#.ext`) naming is expected.\r\n\r\n![Capture](https://github.com/ynput/OpenPype/assets/1860085/9c780122-0331-4bd4-85dd-753fc20e4052)\r\n\r\nDeadline Error:\r\n```\r\n2023-07-06 08:27:50:  0: STDOUT: ERROR - Traceback (most recent call last):\r\n2023-07-06 08:27:50:  0: STDOUT:   File \"C:\\Users\\tokejepsen\\bumpybox_development\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 522, in __explicit_process\r\n2023-07-06 08:27:50:  0: STDOUT:     runner(*args)\r\n2023-07-06 08:27:50:  0: STDOUT:   File \"C:\\Users\\tokejepsen\\bumpybox_development\\OpenPype\\openpype\\modules\\deadline\\plugins\\publish\\validate_expected_and_rendered_files.py\", line 71, in process\r\n2023-07-06 08:27:50:  0: STDOUT: RuntimeError: Missing expected files: ['Main_beauty.0001.exr']\r\n2023-07-06 08:27:50:  0: STDOUT: Expected files: ['Main_beauty.0001.exr']\r\n2023-07-06 08:27:50:  0: STDOUT: Existing files: ['Main_beauty.exr.0001', 'Main_metadata.json']\r\n```\n\n### Expected Behavior:\n\nWe should either validate the attribute or ensure the expected output naming of frame files are correct.\n\n### Version\n\n3.15.12-nightly.3\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Setup render in Maya with any other `Frame/Animation ext` than `name.#.ext`\r\n2. Submit to Deadline.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6699](https://app.clickup.com/t/861nahkjt)]",
        "url": "https://github.com/ynput/OpenPype/issues/5255"
    },
    {
        "number": 5269,
        "title": "Bug: Maya 2024 - Publish of Look fails due to maya default shader connections not being Lambert1",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nDue to Adesk changes to the Maya 2024 there is no more Lambert1 shader used as defaults for ```initialShadingGroup``` ans ```initialParticleShadingGroup``` so it fails on validation during ```Look``` publishing.\r\n\r\n\r\n\r\n\r\n### Expected Behavior:\r\n\r\nThere shouldnt be any dependencies on Lambert1 so Publish of the Look not fail in maya 2024.\r\n\r\n### Version\r\n\r\n3.15.12-nightly.4\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1) Open/create Look Instance for publishing\r\n2) Try to Publish the Look\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/87277ee7-e3e8-4a49-a3c9-1d6da4259eab)\r\n\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-6346](https://app.clickup.com/t/863h62uhx)]",
        "url": "https://github.com/ynput/OpenPype/issues/5269"
    },
    {
        "number": 5279,
        "title": "Maya: Tile/Scanline settings",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nWith the Maya new publisher #4388 there is option to set tile/scanline rendering. There was some discussion about making this setting more user friendly.\n\n### How would you imagine the implementation of the feature?\n\nShould we include some of the following details in the tooltip?\r\n\r\n> Pixels in an OpenEXR file can be stored either as scan lines or as tiles. Tiled image files allow random-access to rectangular sub-regions of an image. Multiple versions of a tiled image, each with a different resolution, can be stored in a single multi-resolution OpenEXR file.\r\n\r\n> Multi-resolution images, often called \u201cmipmaps\u201d or \u201cripmaps\u201d, are commonly used as texture maps in 3D rendering programs to accelerate filtering during texture lookup, or for operations like stereo image matching. Tiled multiresultion images are also useful for implementing fast zooming and panning in programs that interactively display very large images.\r\n\r\nLike mention that it's a tiled image if the convertScanline option is off?\r\nOr maybe adding some hint in the tooltip about when the user might want to enable or disable it?\r\n\r\nArnold's ROP options expose this a bit more user friendly IMO (https://help.autodesk.com/view/ARNOL/ENU/?guid=arnold_for_houdini_output_ah_Image_Format_html):\r\n![image](https://user-images.githubusercontent.com/4348536/231185516-d9dfb226-166a-4d24-8018-0396a189d553.png)\r\nYou are either choosing `Tiled` or `Scanline` and that informs the user what the output will be and not expecting it to know what's the alternative of `convert to scanline`\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n> **Note**\r\nthis depends on #4388 \n\n\n[cuID:[OP-6353](https://app.clickup.com/t/861n1z5yz)]",
        "url": "https://github.com/ynput/OpenPype/issues/5279"
    },
    {
        "number": 5285,
        "title": "Enhancement: Houdini: Unable to review/Render using Lopimportcamera",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues.\r\n\r\n### Please describe the feature you have in mind and explain what the current shortcomings are?\r\n\r\n<img width=\"1529\" alt=\"image\" src=\"https://github.com/ynput/OpenPype/assets/61413765/60aa286d-06f2-4d50-a7e7-bfe3f266821e\">\r\n\r\nCurrently OP is publishing without errors using SOP level import camera. Its thowing error when loading the LOP camera\r\n\r\n### How would you imagine the implementation of the feature?\r\n\r\nThe OP should successfully publish, using Lopimportcamera SOP node as well\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the enhancement request.\r\n\r\n### Describe alternatives you've considered:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-6365](https://app.clickup.com/t/863h6y90b)]",
        "url": "https://github.com/ynput/OpenPype/issues/5285"
    },
    {
        "number": 5288,
        "title": "Bug: Houdini Open Last Workfile on launch does not show \"outdated containers\" popup",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWhen open last workfile on launch is enabled and Houdini opens the last workfile on launch the outdated containers pop-up that usually happens on scene open through the workfiles tool does not show.\n\n### Expected Behavior:\n\nThe outdated containers pop-up shows as usual.\n\n### Version\n\n3.15.12-nightly.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Enable open last workfile on launch\r\n2. Launch into a task with Houdini for where the last workfile has outdated containers.\r\n3. A pop-up should show to make the user aware they have outdated containers.\r\n\r\nIf you reopen the scene through workfiles tool you'll see the pop-up that was expected to be there.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6366](https://app.clickup.com/t/861n28eu6)]",
        "url": "https://github.com/ynput/OpenPype/issues/5288"
    },
    {
        "number": 5290,
        "title": "Enhancement: Houdini Pointcache (Alembic) allow to publish object level paths",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nThe Houdini Alembic ROP supports exporting object level paths, like locators however OpenPype does not allow it due to the validators that are in place.\r\n\r\nCurrently OpenPype only support the `Use SOP Path` enabled exports where a SOP path is used. However this does not allow exporting e.g. Houdini locators or alike to alembic which might be useful for certain type of technical exports.\r\n\r\nHere's a screenshot of how the node could be configured if Use SOP Path is disabled:\r\n\r\n![alembic_no_sop_path](https://github.com/ynput/OpenPype/assets/2439881/4a37c13c-3383-42de-a197-eeedf4acdfba)\r\n\n\n### How would you imagine the implementation of the feature?\n\nAllow to have `Use SOP Path` disabled and separate the validators for those that validate the SOP paths and the once that validate the object level entries.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6367](https://app.clickup.com/t/861n28gg3)]",
        "url": "https://github.com/ynput/OpenPype/issues/5290"
    },
    {
        "number": 5294,
        "title": "Enhancement: Publish report sidescroll or wordwrap",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nThe publish report are being cut off.\r\n\r\n![Capture](https://github.com/ynput/OpenPype/assets/1860085/349e2f10-a5e1-4e37-8228-37a9108bfa7f)\r\n\n\n### How would you imagine the implementation of the feature?\n\nEither a horizontal scroll bar or word wrap the text.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6368](https://app.clickup.com/t/861n2903e)]",
        "url": "https://github.com/ynput/OpenPype/issues/5294"
    },
    {
        "number": 5316,
        "title": "Bug: Resolve installation documentation",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nhttps://openpype.io/docs/admin_hosts_resolve#set-resolves-fusion-settings-for-python-36-interpereter\r\n\r\nThe UI does not update to reflect the python version available to Resolve.\n\n### Expected Behavior:\n\nA better way of confirming the python version, would be to use the Console in `Py3` mode and maybe print the python version.\n\n### Version\n\n3.16.1\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Follow installation guide for https://openpype.io/docs/admin_hosts_resolve#resolve-requirements\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6378](https://app.clickup.com/t/863h80dzd)]",
        "url": "https://github.com/ynput/OpenPype/issues/5316"
    },
    {
        "number": 5318,
        "title": "Bug: TVPaint Workfiles and Loader broken",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWorkfiles and Loader tools make TVPaint unresponsive.\n\n### Expected Behavior:\n\n_No response_\n\n### Version\n\n3.16.1\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Launch TVPaint and open either Workfiles or Loader.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6380](https://app.clickup.com/t/861n2wn4j)]",
        "url": "https://github.com/ynput/OpenPype/issues/5318"
    },
    {
        "number": 5330,
        "title": "Enhancement: Publisher Documentation Guidance",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nOn the [Publisher](https://ayon.ynput.io/docs/artist_tools_publisher/) documentation page, as a documentation user, I was unaware that there was DCC specific information relevant to the publisher. My suggestion is that there be added some information on this page noting that the publisher has DCC specific implementation details, and where to go in the documentation to find those details.\n\n### How would you imagine the implementation of the feature?\n\nSomething like a section titled \"DCC Integrations\" with the content:\r\n\r\n\u201cIf you\u2019re interested in a specific DCCs workflow in the publishing process, checkout the Integrations \u2192 \"DCC_NAME\" page for more information.\u201d\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6386](https://app.clickup.com/t/861n38ujn)]",
        "url": "https://github.com/ynput/OpenPype/issues/5330"
    },
    {
        "number": 5333,
        "title": "Bug: load model in substance painter doesn't fill correctly the new project window",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nload model in substance painter doesn't fill correctly the new project window : \r\nwe have to manually find the location of the model and select it\n\n### Expected Behavior:\n\nloading a model should 'fill' the mesh field of the new project  window\n\n### Version\n\n3.16.2-nightly.1\n\n### What platform you are running OpenPype on?\n\nLinux / Centos\n\n### Steps To Reproduce:\n\nOn Rocky Linux 8.7\r\nOpen Substance Painter on an asset\r\nLoad a Model \n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6387](https://app.clickup.com/t/861n39jz7)]",
        "url": "https://github.com/ynput/OpenPype/issues/5333"
    },
    {
        "number": 5342,
        "title": "Enhancement: Maya extract look texture paths.",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nThe hardlinking in the Maya look extractor is disabled and has issues on Windows (https://github.com/ynput/OpenPype/pull/5341), making it an invalid feature. BUT being able to reuse textures from previous publishes still have a lot of merit due to disk and data reduction.\r\nAnother issue with hardlinking is with cloud storage, which makes hardlinks into copies or simply gets ignored as a file.\n\n### How would you imagine the implementation of the feature?\n\nA better solution might be to publish the texture the first time and all subsequent textures of the same kind (needs investigating how to find and store this \"kind\" data), and reference the previous published texture path directly rather than relying on hardlinking. Since publishes are immutable, referencing older published data paths should be fine, and it'll be cloud storage compatible as well.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6393](https://app.clickup.com/t/861n3n9ev)]",
        "url": "https://github.com/ynput/OpenPype/issues/5342"
    },
    {
        "number": 5345,
        "title": "Enhancement: OIIO version too old not compatible OCIO v2",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nThe oiio package with openpype is quite old (2020) and it's not complatible with Ocio v2 \r\nThe last release version is [v2.4.13.0](https://github.com/OpenImageIO/oiio/releases/tag/v2.4.13.0)\r\nIt would also be perfect to make sure that there is a version available that work on rocky linux\n\n### How would you imagine the implementation of the feature?\n\ncompile version of the latest oiio available \n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6408](https://app.clickup.com/t/861n3uv45)]",
        "url": "https://github.com/ynput/OpenPype/issues/5345"
    },
    {
        "number": 5362,
        "title": "Bug: Maya viewport related calls breaking headless mode",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nCalls like `cmds.ogs()` are crashing in headless mode (mayabatch, mayapy). Its use is in context managers used around publishing plugins. There are probably more calls like that, but so far only `cmds.ogs()` is identified.\r\n\r\n### Expected Behavior:\r\n\r\nIf these call cannot be executed because maya is in headless mode, they need to be wrapped in `if IS_HEADLESS` condition.\r\n\r\n### Version\r\n\r\n3.15.12\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nLinux / Centos\r\n\r\n### Steps To Reproduce:\r\n\r\ntry to execute for example `Extract Animation` plugin in headless mode (in farm)\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n```shell\r\n2023-07-27 23:27:02:  0: STDOUT: !!! ERR: 2023-07-27 23:27:02,682 >>> { __main__ }: [ Failed ExtractAnimation: Maya command error -- ('/root/.local/share/openpype/3.15/openpype-v3.15.12-nightly.3/openpype/hosts/maya/plugins/publish/extract_pointcache.py', 156, 'suspended_refresh', 'original_state = cmds.ogs(query=True, pause=True)') ] \r\n2023-07-27 23:27:02:  0: WARNING: Error: line 1: RuntimeError: file /root/.local/share/openpype/3.15/openpype-v3.15.12-nightly.3/openpype/pipeline/publish/lib.py line 577: Fatal Error: Failed ExtractAnimation: Maya command error -- ('/root/.local/share/openpype/3.15/openpype-v3.15.12-nightly.3/openpype/hosts/maya/plugins/publish/extract_pointcache.py', 156, 'suspended_refresh', 'original_state = cmds.ogs(query=True, pause=True)')\r\n\r\n----\r\n\r\nTraceback (most recent call last):\r\n   File \"/mnt/openpype-3.15.6/dependencies/pyblish/plugin.py\", line 522, in __explicit_process\r\n     runner(*args)\r\n   File \"/root/.local/share/openpype/3.15/openpype-v3.15.12-nightly.3/openpype/hosts/maya/plugins/publish/extract_pointcache.py\", line 90, in process\r\n   File \"/usr/autodesk/maya2023/lib/python3.9/contextlib.py\", line 119, in __enter__\r\n     return next(self.gen)\r\n   File \"/root/.local/share/openpype/3.15/openpype-v3.15.12-nightly.3/openpype/hosts/maya/api/lib.py\", line 156, in suspended_refresh\r\n     original_state = cmds.ogs(query=True, pause=True)\r\nRuntimeError: Maya command error\r\n Traceback (most recent call last):\r\n   File \"/mnt/openpype-3.15.6/dependencies/pyblish/plugin.py\", line 522, in __explicit_process\r\n     runner(*args)\r\n   File \"<string>\", line 90, in process\r\n   File \"/usr/autodesk/maya2023/lib/python3.9/contextlib.py\", line 119, in __enter__\r\n     return next(self.gen)\r\n2   File \"/root/.local/share/openpype/3.15/openpype-v3.15.12-nightly.3/openpype/hosts/maya/api/lib.py\", line 156, in suspended_refresh\r\n     original_state = cmds.ogs(query=True, pause=True)\r\n```\r\n\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\r\n[cuID:[OP-6447](https://app.clickup.com/t/861n4n40a)]",
        "url": "https://github.com/ynput/OpenPype/issues/5362"
    },
    {
        "number": 5363,
        "title": "Bug: TrayPublisher not adding project level additional environment variables",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nEnvironment variables configurable from here `project_settings/global/project_environments` in Studio Settings, are not passed to TrayPublisher.\n\n### Expected Behavior:\n\nTo utilize project-based environment variables in TrayPublisher and other features that support path formatting with environment variables, follow these steps:\r\n\r\n1. Open Studio Settings by navigating to project_settings/global/project_environments.\r\n2. Update the desired environment variables according to your project's needs.\r\n3. Once saved, these variables can be used throughout the project in various features that support environment variable path formatting.\r\n\r\nBy configuring project-specific environment variables, you can create practical and effective solutions to cater to the specific requirements of your project.\n\n### Version\n\n3.16.3-nightly.1\n\n### What platform you are running OpenPype on?\n\nWindows, Linux / Centos, Linux / Ubuntu, Linux / RedHat, MacOS\n\n### Steps To Reproduce:\n\n1. Open Studio Settings by navigating to project_settings/global/project_environments.\r\n2. Update the desired environment variables according to your project's needs.\r\n3. Once saved, these variables can be used throughout the project in various features that support environment variable path formatting.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6448](https://app.clickup.com/t/861n4n4dn)]",
        "url": "https://github.com/ynput/OpenPype/issues/5363"
    },
    {
        "number": 5364,
        "title": "Bug: TrayPublisher - project's anatomy root environment variables are not added",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nThe TrayPublisher application does not have access to the defined Anatomy Roots in the environment variables. As a result, the path formatting feature cannot utilize these Anatomy Roots.\n\n### Expected Behavior:\n\n1. The Anatomy Root is set to `work` only.\r\n2. Normally, any application that is started includes the environment variable `OPENPYPE_ROOT_WORK`.\r\n3. This environment variable can be used in certain path settings inputs, such as `{OPENPYPE_ROOT_WORK}/file.jpg`.\r\n4. The path will be formatted according to the value of the `root[work]` variable.\n\n### Version\n\n3.16.3-nightly.1\n\n### What platform you are running OpenPype on?\n\nWindows, Linux / Centos, Linux / Ubuntu, Linux / RedHat, MacOS\n\n### Steps To Reproduce:\n\n1. The Anatomy Root is set to `work` only.\r\n2. Normally, any application that is started includes the environment variable `OPENPYPE_ROOT_WORK`.\r\n3. This environment variable can be used in certain path settings inputs, such as `{OPENPYPE_ROOT_WORK}/file.jpg`.\r\n4. The path will be formatted according to the value of the `root[work]` variable.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6449](https://app.clickup.com/t/861n4n5zf)]",
        "url": "https://github.com/ynput/OpenPype/issues/5364"
    },
    {
        "number": 5365,
        "title": "Nuke - `ExctractReviewDataMov` plugin with multiple format support",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nAt the moment `ExctractReviewDataMov` plugin supports only MOV (and also now additionaly other nuke supported video container formats since https://github.com/ynput/OpenPype/pull/5305). But we do not support image sequence formats and those could come also useful.\r\n\r\n### Expected Behavior:\r\n\r\nBy adding extension `png` to Studion Settings `project_settings/nuke/publish/ExtractReviewDataMov/outputs/baking/extension`. Expected would be png sequence to be used as intermediate for ExctractReview plugin. \r\n\r\nWe should also rename the plugin to be more appropriate to the process: `ExtractReviewDataBakingStreams` or something similar.\r\n\r\n### Version\r\n\r\n3.16.3-nightly.1\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows, Linux / Centos, Linux / Ubuntu, Linux / RedHat, MacOS\r\n\r\n### Steps To Reproduce:\r\n\r\n1. add `png` to Studion Settings `project_settings/nuke/publish/ExtractReviewDataMov/outputs/baking/extension`\r\n2. publish from nuke\r\n3. see the resulting error\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n```shell\r\nINFO: Rendering...  \r\nTraceback (most recent call last):\r\n  File \"C:\\CODE\\__PYPE\\OpenPype_3\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 527, in __explicit_process\r\n    runner(*args)\r\n  File \"C:\\CODE\\__PYPE\\OpenPype_3\\openpype\\hosts\\nuke\\plugins\\publish\\extract_review_data_mov.py\", line 126, in process\r\n    data = exporter.generate_mov(**o_data)\r\n  File \"C:\\CODE\\__PYPE\\OpenPype_3\\openpype\\hosts\\nuke\\api\\plugin.py\", line 946, in generate_mov\r\n    self.render(write_node.name())\r\n  File \"C:\\CODE\\__PYPE\\OpenPype_3\\openpype\\hosts\\nuke\\api\\plugin.py\", line 805, in render\r\n    int(self.last_frame))\r\nRuntimeError: Write1 cannot be executed for multiple frames.\r\n```\r\n\r\n\r\n### Additional context:\r\n\r\nsimilar PR https://github.com/ynput/OpenPype/pull/5305\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/40640033/5f8739a8-55e2-47b9-ae41-977228847789)\r\n\r\n\r\n[cuID:[OP-6451](https://app.clickup.com/t/861n4nfma)]",
        "url": "https://github.com/ynput/OpenPype/issues/5365"
    },
    {
        "number": 5385,
        "title": "Bug: Current context nog logged correctly during publish",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nIn Maya when publishing I see this logged:\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/6cf0b362-13ee-4e90-8077-56596c9c879d)\r\n\r\nThis is due to an issue in the logic:\r\n\r\nVariables `project_name`, `asset_name`, `task_name` don't get updated at all here https://github.com/ynput/OpenPype/blob/c10781a662e9dd85839d8eb786e471b0709cbccf/openpype/plugins/publish/collect_current_context.py#L43\r\nIf it goes into any of the if statements to use the result of `get_current_context` :slight_smile:\n\n### Expected Behavior:\n\nLogged data should be corrected. :) \n\n### Version\n\n3.16.3-nightly.3\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Publish in maya :)\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6498](https://app.clickup.com/t/861n5cbn3)]",
        "url": "https://github.com/ynput/OpenPype/issues/5385"
    },
    {
        "number": 5390,
        "title": "Nuke: define creator plugin order",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nCreator base class is having `order` attribute we are not using in Nuke plugins. \n\n### How would you imagine the implementation of the feature?\n\nWe need to add the order attribute so we are able to better group similar plugins. This can also be then utilized farther for defining order of created instances shown in Publisher (this will be addressed in different issue).\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6502](https://app.clickup.com/t/861n5ev3y)]",
        "url": "https://github.com/ynput/OpenPype/issues/5390"
    },
    {
        "number": 5391,
        "title": "General: publisher instance order based on creator's order attribute ",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nAt the moment the order of product type grouping in publisher's list of instances is based on alphabetical order. We are not utilizing a set order attribute on Creator plugins in case they are used.\n\n### How would you imagine the implementation of the feature?\n\nWe should be taking preference from order attribute on Creator plugins if they are used. This order should also be processing order of instances. \r\n\r\nWe are already able to define order of instances in Nuke write nodes by configuring order preference on Nodes. This should be also reflecting in the Publisher instances stack order.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n\n[cuID:[OP-6503](https://app.clickup.com/t/861n5ew9h)]",
        "url": "https://github.com/ynput/OpenPype/issues/5391"
    },
    {
        "number": 5432,
        "title": "Enhancement: Workfiles tool show publishes that were made from a workfile",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nI'd like the workfiles tool to be able to help an artist identify or highlight whether a workfile was published. Preferably it would also be able to show _when_ it was published and _what_ it produced as outputs (and maybe even which instances were disabled during that publish).\r\n\r\n\n\n### How would you imagine the implementation of the feature?\n\nUpon publishing data is saved into the Workfile document entry (which is currently used e.g. for Artist Notes) about the related publish that occurred on the file, potentially together with the information of what instances were disabled in this publish session.\r\n\r\nInitially I thought of prototyping this by storing adding to the Artist note of a workfile a message like:\r\n```\r\nPublished 07-08-2023 12:31 to subsets: modelMain v001, reviewMain v002\r\nDisabled instances: pointcacheEnvironment, character_hero_01\r\n```\r\nExample:\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/abdff88e-499e-4479-9a41-b2cd84055e2a)\r\n\r\nBut it'd require to select a workfile in the workfiles tool to get to that information + it's maybe abusing the artist note section a bit too much? (Plus it's not trivial to prototype since all the workfile doc + artist note logic seems to be built into the workfiles tool instead of having an exposed api for that)\r\n\r\nWhat I'd prefer is to be able to see for all workfiles of a scene what they were involved in.\r\n\r\n![published_date_column_in_workfiles](https://github.com/ynput/OpenPype/assets/2439881/b410424f-14c4-4796-bd5b-3146f82dcf55)\r\n\r\nI came up with this \u261d\ufe0f to add a column for the last publish datetime of a scene. Nice thing about that is that it also directly visualizes whether someone worked in a workfile since the last publish (e.g. publish datetime for a file is older than the workfile save itself - not something that'd frequenlty happen with files being incremented on publish; but technically it could happen)\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\nIn the past I've had some scripts where I could get latest workfile dates and versions and compare it with the latest publish outputs to detect whether latest workfiles were published. But that was more of a bulk check plus didn't really aid the artists in the day to day.\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6712](https://app.clickup.com/t/861najcum)]",
        "url": "https://github.com/ynput/OpenPype/issues/5432"
    },
    {
        "number": 5457,
        "title": "Houdini Shelves Manager: Shelf is not add to the given shelf set",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nIn Houdini shelves manager, \r\nShelf set name has no effect when specifying shelf set path.\r\nand I have to do that explicitly in the `.shelf` file \r\n\r\n![image](https://github.com/ynput/OpenPype/assets/20871534/bd76e282-7dec-47d6-9f3e-193a2955e405)\r\n\r\nInstead, I find this set created and it's empty. \r\n```xml\r\n<shelfSet name=\"shelf_set_3\" label=\"\"/>\r\n```\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/20871534/015159b9-57a1-4006-9a5e-43f044e6eaf3)\r\n\r\n\r\n### Expected Behavior:\r\n\r\nTo have some thing like this added to shelf file\r\n```xml\r\n <shelfSet name=\"openpype_set\" label=\"OpenPype Set\">\r\n    <memberToolshelf name=\"null_shelf\"/>\r\n </shelfSet>\r\n```\r\n\r\n### Version\r\n\r\n3.16.4-nightly.2\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Add new shelf in shelves manager \r\n    i. Add Shelf set name\r\n    ii. Add Shelf Set Path\r\n3. launch houdini and check shelves sets \r\n4. you can also check `default.shelf` and your `.shelf` file contents \r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\nHere's an example shelf file that you can sue for testing.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<shelfDocument>\r\n  <!-- This file contains definitions of shelves, toolbars, and tools.\r\n It should not be hand-edited when it is being used by the application.\r\n Note, that two definitions of the same element are not allowed in\r\n a single file. -->\r\n\r\n  <tool name=\"geo_null\" label=\"Geo Null\" icon=\"PLASMA_App\">\r\n    <helpText><![CDATA[Create a geo null]]></helpText>\r\n    <script scriptType=\"python\"><![CDATA[import hou \r\n\r\nparent = hou.node(\"/obj\").createNode(\"geo\", \"A_Null_Parent\")\r\nnull_node = parent.createNode(\"null\", \"A_Null\")\r\nnull_node.setGenericFlag(hou.nodeFlag.DisplayComment, True)\r\nnull_node.setComment(\"I'm a Null\")]]></script>\r\n  </tool>\r\n\r\n  <tool name=\"obj_null\" label=\"Obj Null\" icon=\"PLASMA_App\">\r\n    <helpText><![CDATA[Create an obj null]]></helpText>\r\n    <script scriptType=\"python\"><![CDATA[import hou \r\n\r\nnull_node = hou.node(\"/obj\").createNode(\"null\", \"A_Null\")\r\nnull_node.setGenericFlag(hou.nodeFlag.DisplayComment, True)\r\nnull_node.setComment(\"I'm a Null\")]]></script>\r\n  </tool>\r\n\r\n  <toolshelf name=\"null_shelf\" label=\"Null Shelf\">\r\n    <memberTool name=\"geo_null\"/>\r\n    <memberTool name=\"obj_null\"/>\r\n  </toolshelf>\r\n\r\n</shelfDocument>\r\n```\n\n[cuID:[OP-6713](https://app.clickup.com/t/861najcut)]",
        "url": "https://github.com/ynput/OpenPype/issues/5457"
    },
    {
        "number": 5458,
        "title": "Houdini Shelves Manager: Shelf is not created without specifying shelf set name",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nIn Houdini, Shelf creation doesn't require a shelf set name.\r\nhowever Shelves Manager won't create a shelf without adding a `shelf set name`\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/20871534/6ddadb80-f09a-4b1f-a358-4829db9819b6)\r\n\n\n### Expected Behavior:\n\nMissing `Shelf set name` shouldn't stop shelf creation.\n\n### Version\n\n3.16.4-nightly.2\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. create a shelf by adding tools (like screenshot above)\r\n2. Launch Houdini and try to find your new shelf\r\n3. Alternatively, you can check `default.shelf` contents\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\nHere's an example script that you can use. \r\n\r\n```python\r\nimport hou \r\nhou.ui.displayMessage(\"Hello There!\")\r\n```\n\n[cuID:[OP-6714](https://app.clickup.com/t/861najcuy)]",
        "url": "https://github.com/ynput/OpenPype/issues/5458"
    },
    {
        "number": 5467,
        "title": "Houdini Shelves Manager: pathes are not resolved if template keys are used ",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\npaths are not resolved if template keys are used\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/20871534/68ed311a-c6c6-4e45-8b8f-505dc0950102)\r\n\r\n\r\n\r\n### Expected Behavior:\r\n\r\nShelves manager should be able to resolve paths if template keys are used \r\n\r\n\r\n\r\n### Version\r\n\r\n3.16.4-nightly.2\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\nDo the same as the screenshot above:\r\n1. Create a shelf file\r\n2. add it in houdini settings using template keys \r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n```\r\nShelf path doesn't exist - {root[configs]}\\houdini\\shelves\\null_shelf.shelf\r\nThis path doesn't exist - {root[configs]}\\houdini\\scripts\\say_hello.py\r\n```\r\n\r\n### Additional context:\r\n\r\n_No response_\n\n[cuID:[OP-6710](https://app.clickup.com/t/861najcbg)]",
        "url": "https://github.com/ynput/OpenPype/issues/5467"
    },
    {
        "number": 5468,
        "title": "Bug: Maya - Extract Yeti Cache Error",
        "body": "Using OP 3.16.x with new Publisher in ```maya 2023``` tested to publish ```YetiCache``` instance but getting error during extraction.\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/e80079e2-3cb6-48fa-a3e4-52fddcea01e9)\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"D:\\REPO\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 527, in __explicit_process\r\n    runner(*args)\r\n  File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\extract_yeti_cache.py\", line 29, in process\r\n    start_frame = instance.data[\"frameStartHandle\"]\r\nKeyError: 'frameStartHandle'\r\n```\r\n\r\nAlso not sure if the ```YetiCache``` instance doesnt miss ```frameStart``` and ```frameEnd```.\r\n\r\nNote: this was done in ```Asset``` with ```frameStart``` ```1001``` and ```frameEnd``` also ```1001```.  But also happens if different ```frameRange``` set\r\n\r\nHappens even if not ```Validate FrameRange``` is turned on.\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/a0495759-b0d5-45a7-96ff-74949b9237f4)\r\n\r\n\r\n### Expected Behavior:\r\n\r\nShould not be failing on ```frameStartHandle``` attribute.\r\n\r\n\r\n\r\n### Version\r\n\r\n3.16.4-nightly.2\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Setup Yeti\r\n2. create ```YetiCache``` instance\r\n3. Hit Publish\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\n\n[cuID:[OP-6711](https://app.clickup.com/t/861najcby)]",
        "url": "https://github.com/ynput/OpenPype/issues/5468"
    },
    {
        "number": 5469,
        "title": "Enhancement: Maya Yeti Cache - possibility to extract yeti cache from any given source geometry",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nRight now (OP 3.16.x) when trying to extract ```YetiCache``` instance via ```Publish``` failing on validation of source geometry when not using duplicate geometry with premade connections to source asset loaded (translation channels, inmesh/outmesh etc)\r\n\r\nImho not neccessary, limiting user and forcing him to make connections in advance even not mandatory. User simple could just output ```YetiCache``` from any possible object later loading the product (yetiCache) without any neccessity to reconnect it to other existing products as for example ```pointCache``` alembics from animation.\r\n\r\nThis workflow being suitable for any grooming not tied to character or any type of animated assets. Being it grass field, static clumps of hair sitting in enviroment etc.\r\n\r\n\n\n### How would you imagine the implementation of the feature?\n\nUser could use any valid geometry as a source for yeti grooming being it local created mesh, loaded asset etc.\r\n\r\nValidation should pass in any given case and successfully publish ```YetiCache```.\r\n\r\nUser should be able to publish single YetiCache frame or frame range given.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\nIn general it should follow native procedures given by Yeti addon not limiting/forcing user to follow convoluted workflow if not neccessary/mandatory later on regarding workflow.\r\n\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6733](https://app.clickup.com/t/861najumw)]",
        "url": "https://github.com/ynput/OpenPype/issues/5469"
    },
    {
        "number": 5470,
        "title": "Enhancement: UE / Maya - Yeti - possibility to publish hair alembic for UE (new OP product)",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues.\r\n\r\n### Please describe the feature you have in mind and explain what the current shortcomings are?\r\n\r\nWe are missing publishing hair assets from Yeti to Unreal Engine even its supported by Yeti addon.\r\n![YetiToUE](https://github.com/ynput/OpenPype/assets/112623825/0cb8b028-d276-4dd2-8b7a-bf62d437cd7e)\r\n\r\nAccording to the docs it should follow the ```Alembic``` standards so the product being sort of ```pointCache``` in abc.\r\n\r\nIts possible to output it via cmd\r\n\r\n```pgYetiCommand -exportUnrealAbc [filename (string)]```\r\n\r\n[here is also the full docs article](https://support.peregrinelabs.com/support/solutions/articles/66000477499-exporting-to-unreal) regarding it.\r\n\r\n\r\n### How would you imagine the implementation of the feature?\r\n\r\nThere should be new product type when creating new instances via Publish>Create\r\n\r\nsomething like ```UE_yetiHair_cache``` or similar for outputting these alembic files.\r\n\r\nNote: these UE addons need to be activated before trying to get Yeti hair inside UE\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/1b499f00-8e7e-44fd-892b-12156736d970)\r\n\r\nAnd imported in UE:\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/3af75d03-b026-4687-95c4-d6fc214fd484)\r\n\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the enhancement request.\r\n\r\n### Describe alternatives you've considered:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\n\n[cuID:[OP-6726](https://app.clickup.com/t/861najumr)]",
        "url": "https://github.com/ynput/OpenPype/issues/5470"
    },
    {
        "number": 5471,
        "title": "Enhancement: Maya - Yeti, Possibility to load/connect YetiRig to more OP products not just pointCache animation",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nCurrently in OP (3.16.x) there is no possibility to use published ```yetiRig``` on other types of asset just ```pointCache``` and ```animation``` products.\r\n\r\nThere shoud exist workflow to be able to use published ```YetiRig``` product also on other types of assets which are valid for ```Yeti``` addon.\r\n\r\nOne use case being, animator could be able to load already published ```YetiRig``` on loaded character rig asset to see it with hair/fur when animating. Currently this is impossible to do via OP tools. Being pretty limited just to load ```YetiRig``` to alembic caches as mentioned earlier (pointcaches in general).\n\n### How would you imagine the implementation of the feature?\n\nUser being able to \"apply\" or use already published ``YetiRig``` not just on alembics products as animation etc but also on valid asset as for example the character rig.\r\n\r\nThis could be very important to be able to do so when for ie animating the furry character and needing visual feedback for viewport etc.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6722](https://app.clickup.com/t/861najun7)]",
        "url": "https://github.com/ynput/OpenPype/issues/5471"
    },
    {
        "number": 5473,
        "title": "Bug: 3dsmax is not using predefined OCIO config file in OP Settings when Enabled CMS",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWhen turning ```On``` global Color Management in OP Project Settings\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/57b980f0-f001-4430-b249-e8b3b6b33e8b)\r\n\r\n3dsmax host CM also turned ```On``` too\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/64ab6e59-0d52-4b5d-b173-8cc1823fa8ae)\r\n\r\nIt does not start up with that particular OCIO config file defined but with different Color Management settings.\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/773053bc-c3e5-40d3-9adf-b719f2c31842)\r\n\r\nThere have to be taken extra step manually switching to OCIO based CMS:\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/d2327da7-34cb-4134-90a7-88cc5b81470d)\r\n\r\n\r\n\r\n\n\n### Expected Behavior:\n\n_No response_\n\n### Version\n\n3.16.4-nightly.3\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1.Turn Global CMS on in OP Settings\r\n2. Turn CMS for Max host app in OP Settings\r\n3. Launch Max via OP Launcher\r\n4. Check File>Preferences>Color Management Settings for OCIO config file based management\r\n5. Missing OCIO based Color Management mode present (need to be set manually by user which is wrong)\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\nAll CMS settings with OCIO config file should be set automatically on launch via OP.\n\n[cuID:[OP-6732](https://app.clickup.com/t/861najumt)]",
        "url": "https://github.com/ynput/OpenPype/issues/5473"
    },
    {
        "number": 5474,
        "title": "Enhancement: Publish Houdini point cache through Deadline",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nHey! Can we have a option to publish point cache through deadline similar to the option we have in Arnold(Render)Rops. This feature can really a timesaving for the artists.\n\n### How would you imagine the implementation of the feature?\n\nPublishing point cache through the deadline.\r\n\r\nThere should be two options:\r\n1. Local publish\r\n2. Farm publish\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\ncurrently we publishing using local machine\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6735](https://app.clickup.com/t/861najun5)]",
        "url": "https://github.com/ynput/OpenPype/issues/5474"
    },
    {
        "number": 5482,
        "title": "Bug: Houdini Mantra Local Render",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nWhen Toggling `farm` parameters off, Houdini sends a render job to deadline (without a publish job). \r\n![image](https://github.com/ynput/OpenPype/assets/20871534/ad4ea4e4-5a1f-4075-a815-635ab9866b61)\r\n\r\n\r\n### Expected Behavior:\r\n\r\nHoudini should render locally then publish that render. \r\n\r\n### Version\r\n\r\n3.16.4\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Create a Mantra publish type \r\n2. untick `Submitting to farm`\r\n3. publish\r\n![image](https://github.com/ynput/OpenPype/assets/20871534/f75f4c4d-3a4d-40f1-9a67-3651c5ad98cf)\r\n\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\nWe can avoid this issue by keeping `Submitting to farm` on.\n\n[cuID:[OP-6728](https://app.clickup.com/t/861najun0)]",
        "url": "https://github.com/ynput/OpenPype/issues/5482"
    },
    {
        "number": 5485,
        "title": "Bug: Maya - UE skeletal mesh doesnt publish correct data",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWhen ```publish``` a ```skeletalMesh``` from ```maya``` even tho it publishes without any errors it contains invalid data.\r\n\r\nHere is my current asset before ```Publish```\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/a5e77d09-e047-4b51-9c12-1d9c0a187953)\r\n\r\nand the ```Publish``` state after successfull publishing\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/28b13e27-51c5-4783-9b46-6b224c194422)\r\n\r\nHowever when inspected the published ```skeletalMesh``` product it does contain invalid data which are missing actual ```geometries``` substitued by empty nodes.\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/06b8bc12-1763-488c-84b2-da1c23fa5600)\r\n\r\n\r\n\n\n### Expected Behavior:\n\nPublished asset should contain all data as skeletal bones and geometries driven by those. Now we miss deformed meshes as seen on the scrngrab\n\n### Version\n\n3.16.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Setup asset for publishing ```skeletalMesh``` product\r\n2. Create ```skeletalMesh``` instance via OP>Create\r\n3. Publish the asset\r\n4. Manually Import the FBX into Maya to check if correct data are present in the published asset.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6721](https://app.clickup.com/t/861najun6)]",
        "url": "https://github.com/ynput/OpenPype/issues/5485"
    },
    {
        "number": 5488,
        "title": "Houdini: Hard coded \"start_frame\" raises error in validations",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nHard coded \"frameStart\" value in several houdini plugins \r\n```python\r\nframe = instance.data.get(\"frameStart\", 0)\r\n```\r\nIt causes an error when imported asset doesn't have a 0000 frame. \r\n![image](https://github.com/ynput/OpenPype/assets/20871534/e6926425-24cb-4f43-b186-afd8913f8f70)\r\n\r\n\r\n\r\n\r\n### Expected Behavior:\r\n\r\nValidators should validate what the user see in the view port whether the current frame or the start frame of the current frame range. \r\nDepending on the situation: \r\n\r\n### Version\r\n\r\n3.16.4\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. import an asset that doesn't exists at frame 0 (e.g. a BEGO cache that doesn't have 0000 frame) \r\n2. publish\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\nSuggested Solution\r\n```python\r\n        # Get frame\r\n        frame = hou.intFrame()\r\n        trange = rop_node.parm(\"trange\").eval()\r\n        if trange:\r\n            frame = int(hou.playbar.frameRange()[0])\r\n\r\n        frame = instance.data.get(\"frameStart\", frame)\r\n\r\n        # Get Geo at that frame\r\n        geo = output_node.geometryAtFrame(frame)\r\n        if not geo:\r\n            cls.log.warning(\"No geometry found,\"\r\n                            \" skipping check..\")\r\n            return\r\n```\r\nValidators associated with this issue\r\n\r\nhttps://github.com/ynput/OpenPype/blob/4b00d2a9b96f0e877baae03371e4d8fd785ded05/openpype/hosts/houdini/plugins/publish/validate_abc_primitive_to_detail.py#L76-L86\r\n\r\nhttps://github.com/ynput/OpenPype/blob/4b00d2a9b96f0e877baae03371e4d8fd785ded05/openpype/hosts/houdini/plugins/publish/validate_alembic_input_node.py#L53\r\n\r\nhttps://github.com/ynput/OpenPype/blob/4b00d2a9b96f0e877baae03371e4d8fd785ded05/openpype/hosts/houdini/plugins/publish/validate_primitive_hierarchy_paths.py#L83\r\n\r\nhttps://github.com/ynput/OpenPype/blob/4b00d2a9b96f0e877baae03371e4d8fd785ded05/openpype/hosts/houdini/plugins/publish/validate_vdb_output_node.py#L118\r\n\r\n\r\n\n\n[cuID:[OP-6727](https://app.clickup.com/t/861najumv)]",
        "url": "https://github.com/ynput/OpenPype/issues/5488"
    },
    {
        "number": 5495,
        "title": "Bug: Maya Repair Incorrect Frame Range Action fails / doesnt work",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWhen workfile containing wrong ```frame range``` on OP instances like ```Review``` ```Animation``` ```Pointcache``` differing from DB entries ```Validator``` ```Repair``` action does not set those accordingly. Practically fails to repair those ```frame ranges```.\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/7897845f-f490-478d-88fc-6eec0bef9292)\r\n\r\nAnd the log for the error when user triggered Repair action:\r\n\r\n```\r\n// pyblish.pyblish.plugin.Action : Finding failed instances..\r\n// pyblish.pyblish.plugin.Action : Attempting repair for instance: rayman_rigMain_01_ ...\r\n// Error: pyblish.plugin : Traceback (most recent call last):\r\n//   File \"D:\\REPO\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 527, in __explicit_process\r\n//     runner(*args)\r\n//   File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\publish\\publish_plugins.py\", line 243, in process\r\n//     plugin.repair(instance)\r\n//   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\validate_frame_range.py\", line 139, in repair\r\n//     if cmds.attributeQuery(\"handleStart\", node=node, exists=True):\r\n// TypeError: No object matches name: rayman_rigMain_01_\r\n// Traceback (most recent call last):\r\n//   File \"D:\\REPO\\OpenPype\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 527, in __explicit_process\r\n//     runner(*args)\r\n//   File \"D:\\REPO\\OpenPype\\openpype\\pipeline\\publish\\publish_plugins.py\", line 243, in process\r\n//     plugin.repair(instance)\r\n//   File \"D:\\REPO\\OpenPype\\openpype\\hosts\\maya\\plugins\\publish\\validate_frame_range.py\", line 139, in repair\r\n//     if cmds.attributeQuery(\"handleStart\", node=node, exists=True):\r\n// TypeError: No object matches name: rayman_rigMain_01_\r\n```\n\n### Expected Behavior:\n\nIf ```frame range``` being different from DB entries for current ```asset``` Validator's ```Repair``` action should fix those so the ```frame ranges``` matches DB.\r\n\n\n### Version\n\n3.16.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Create ```Animation``` or ```Pointcache``` or any other instance with ```frame range``` attribs\r\n2. Change ```frame range``` so they differ from database entry\r\n3. Try to ```Publish```\r\n4. Use ```Repair``` action to fix ```frame ranges```\r\n5. Publish should happen without erroring out\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6718](https://app.clickup.com/t/861najumy)]",
        "url": "https://github.com/ynput/OpenPype/issues/5495"
    },
    {
        "number": 5501,
        "title": "Bug: Nuke updating published Gizmo to latest version disconnects the gizmo node",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nWhen updating published gizmo to the latest version, the gizmo (knobs) is updated in the Nuke script, but input and output connections are lost.\r\nThis breaks scripts in a non-obvious way, 'cause the updated Gizmo stays on the same place. (I moved it for the screenshot below to demonstrate the issue)\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/4ca17805-ba5c-40a4-b17a-cc1553516254)\r\n\r\n\r\n### Expected Behavior:\r\n\r\nGizmo connections should be kept after update\r\n\r\n### Version\r\n\r\n3.16.4\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Publish a gizmo\r\n2. Load the published Gizmo to new Nuke script, save and close\r\n3. Make a chnage in gizmo from 1st step, publish again\r\n4. Open Nuke script from step 2. Orange color indicates old version\r\n5. Use Scene Inventory to update the Gizmo\r\n6. Move the updated Gizmo to check if it is connected\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [ ] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n```shell\r\nUsing existing QApplication..\r\n>>> We have preset for LoadClip\r\n  - setting `enabled`: `True`\r\n  - setting `_representations`: `['exr', 'dpx', 'jpg', 'jpeg', 'tif', 'tiff', 'psd', 'png']`\r\n  - setting `node_name_template`: `{class_name}_{ext}`\r\n  - setting `options_defaults`: `{'start_at_workfile': True, 'add_retime': True}`\r\n>>> We have preset for LoadImage\r\n  - setting `enabled`: `True`\r\n  - setting `_representations`: `['exr', 'dpx', 'jpg', 'jpeg', 'png', 'psd', 'tiff', 'tif']`\r\n  - setting `node_name_template`: `{class_name}_{ext}`\r\n\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\tools\\sceneinventory\\view.py:851: DeprecatedWarning: Call to deprecated function 'get_avalon_knob_data'\r\nFunction was moved or removed. Please replace your usage with 'openpype.hosts.nuke.api.lib.get_node_data'.\r\n  update_container(item, item_version)\r\n\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\tools\\sceneinventory\\view.py:851: DeprecatedWarning: Call to deprecated function 'set_avalon_knob_data'\r\nFunction was moved or removed. Please replace your usage with 'openpype.hosts.nuke.api.lib.set_node_data'.\r\n  update_container(item, item_version)\r\nTraceback (most recent call last):\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\tools\\sceneinventory\\view.py\", line 266, in <lambda>\r\n    lambda: self._show_version_dialog(items))\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\tools\\sceneinventory\\view.py\", line 724, in _show_version_dialog\r\n    self._update_containers(items, version)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\tools\\sceneinventory\\view.py\", line 851, in _update_containers\r\n    update_container(item, item_version)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\pipeline\\load\\utils.py\", line 503, in update_container\r\n    return Loader().update(container, new_representation)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\hosts\\nuke\\plugins\\load\\load_gizmo.py\", line 153, in update\r\n    GN[\"name\"].setValue(object_name)\r\n  File \"C:\\Program Files\\Nuke14.0v3\\python39.zip\\contextlib.py\", line 126, in __exit__\r\n    next(self.gen)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\hosts\\nuke\\api\\lib.py\", line 2752, in maintained_selection\r\n    select_nodes(previous_selection)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\hosts\\nuke\\api\\lib.py\", line 2770, in select_nodes\r\n    node[\"selected\"].setValue(True)\r\nValueError: A PythonObject is not attached to a node\r\n```\r\n\r\n\r\n### Additional context:\r\n\r\nHere is a one way how to swap Nuke nodes and keep input and output connections:\r\nhttps://github.com/ynput/OpenPype/blob/13d4273fe707e91f6c5c88c780ae76738e4f01ea/openpype/hosts/nuke/api/workfile_template.py#L60-L118\n\n[cuID:[OP-6720](https://app.clickup.com/t/861najun2)]",
        "url": "https://github.com/ynput/OpenPype/issues/5501"
    },
    {
        "number": 5503,
        "title": "Bug: Nuke Write Node - Read from Rendered is offset if Nuke Slate is used",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nNuke Render \"Read From Rendered\" button loads slate if it is present, but doesn't offset the read node accordingly.\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/7abade6c-dc14-4801-8b6e-431d6754df47)\r\n\n\n### Expected Behavior:\n\nRead node should be offset to script start - 1 (or use ```expression``` instead of ```start at```)\n\n### Version\n\n3.16.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Publish a render from Nuke script, with Nuke slate\r\n2. Use write node Read from rendered\r\n3. Note that read node is offset compared to write node\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\nAssuming that when render starts one frame earlient than script start means slate is present, this can fix the issue:\r\n\r\n```\r\nelif (comp_start - 1) == int(ndata['firstframe']):\r\n    read.knob('frame_mode').setValue(\"1\")\r\n    read.knob('frame').setValue(str(comp_start - 1))\r\n```\r\n\r\nhttps://github.com/ynput/OpenPype/blob/594bf8a1f66c8a22112fbb2748b1082db89f2df8/openpype/hosts/nuke/startup/write_to_read.py#L97\r\n\r\n\r\n\n\n[cuID:[OP-6725](https://app.clickup.com/t/861najumq)]",
        "url": "https://github.com/ynput/OpenPype/issues/5503"
    },
    {
        "number": 5506,
        "title": "Bug: Nuke ExtractReviewDataMov fails if more than one output profile is used",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nUsing more than one ExtractReviewDataMov output definitions, publish fails on integrating the asset. Each output definition creates a thumbnail, but only one thumbnail can be published. Publish stops 'cause it doesn't allow to overwrite files already in the queue.\n\n### Expected Behavior:\n\nIdeally, there should be a settings for output profile that should be used for Thumbnail.\r\nOr maybe just allowing FileTransaction  allow_queue_replacements=True would be OK fof integrating Thumbnails?\n\n### Version\n\n3.16.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Set project_settings/nuke/publish/ExtractReviewDataMov to have two output profiles\r\n2. Publish the Nuke render\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/b2ea4d2d-a1b3-47d2-bd85-bc1bfaddddd4)\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/7a9a043f-a19d-4d7c-893e-5372eef93216)\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n```shell\nDEBUG: Establishing staging directory @ \\\\dazzle.local\\shares\\pype_dev\\projects\\T029_OP3_16_3_tst\\shots\\sq01test02\\sq01tst02_sh060\\work\\comp\\renders\\nuke\\renderCompMain\r\nDEBUG: Looking for matching profile for: hosts: \"nuke\" | families: \"render\" | task_names: \"comp\" | task_types: \"Compositing\"\r\nDEBUG: \"nuke\" not found in \"hosts\": ['standalonepublisher']\r\nDEBUG: \"nuke\" not found in \"hosts\": ['maya']\r\nDEBUG: \"nuke\" not found in \"hosts\": ['traypublisher']\r\nDEBUG: Profile selected: {'families': ['review', 'render', 'prerender'], 'hosts': [], 'task_types': [], 'task_names': [], 'template_name': 'render'}\r\nDEBUG: Subset: renderCompMain\r\nINFO: Subset 'renderCompMain' not found, creating ...\r\nDEBUG: Prepared subset: renderCompMain\r\nDEBUG: Source: {root[work]}/T029_OP3_16_3_tst/shots/sq01test02/sq01tst02_sh060/work/comp/sq01tst02_sh060_comp_v000.nk\r\nDEBUG: Creating new version ...\r\nDEBUG: Prepared version: v000\r\nDEBUG: Anatomy template name: render\r\nDEBUG: Template filled: //dazzle.local/shares/pype_dev/projects/T029_OP3_16_3_tst/shots/sq01test02/sq01tst02_sh060/publish/render/renderCompMain/v000//sq01tst02_sh060_renderCompMain_v000.1000.exr\r\nDEBUG: Anatomy template name: render\r\nDEBUG: Anatomy template name: render\r\nTraceback (most recent call last):\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\plugins\\publish\\integrate.py\", line 181, in process\r\n    self.register(instance, file_transactions, filtered_repres)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\plugins\\publish\\integrate.py\", line 281, in register\r\n    file_transactions.add(src, dst)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\lib\\file_transaction.py\", line 98, in add\r\n    raise DuplicateDestinationError(\r\nopenpype.lib.file_transaction.DuplicateDestinationError: Transfer to destination is already in queue: \\\\dazzle.local\\shares\\pype_dev\\projects\\T029_OP3_16_3_tst\\shots\\sq01test02\\sq01tst02_sh060\\work\\comp\\renders\\nuke\\renderCompMain\\renderCompMain_baking.jpg -> \\\\dazzle.local\\shares\\pype_dev\\projects\\T029_OP3_16_3_tst\\shots\\sq01test02\\sq01tst02_sh060\\publish\\render\\renderCompMain\\v000\\_thumb\\sq01tst02_sh060_renderCompMain_v000_thumb.jpg. It's not allowed to be replaced by a new transfer from \\\\dazzle.local\\shares\\pype_dev\\projects\\T029_OP3_16_3_tst\\shots\\sq01test02\\sq01tst02_sh060\\work\\comp\\renders\\nuke\\renderCompMain\\renderCompMain_LOGhd.jpg\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\.venv\\lib\\site-packages\\pyblish\\plugin.py\", line 527, in __explicit_process\r\n    runner(*args)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\plugins\\publish\\integrate.py\", line 186, in process\r\n    six.reraise(KnownPublishError,\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\.venv\\lib\\site-packages\\six.py\", line 718, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\plugins\\publish\\integrate.py\", line 181, in process\r\n    self.register(instance, file_transactions, filtered_repres)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\plugins\\publish\\integrate.py\", line 281, in register\r\n    file_transactions.add(src, dst)\r\n  File \"\\\\dazzle.local\\shares\\pype_dev\\_code\\OP3\\3.16.5-nightly.1\\openpype\\lib\\file_transaction.py\", line 98, in add\r\n    raise DuplicateDestinationError(\r\nopenpype.pipeline.publish.publish_plugins.KnownPublishError: Transfer to destination is already in queue: \\\\dazzle.local\\shares\\pype_dev\\projects\\T029_OP3_16_3_tst\\shots\\sq01test02\\sq01tst02_sh060\\work\\comp\\renders\\nuke\\renderCompMain\\renderCompMain_baking.jpg -> \\\\dazzle.local\\shares\\pype_dev\\projects\\T029_OP3_16_3_tst\\shots\\sq01test02\\sq01tst02_sh060\\publish\\render\\renderCompMain\\v000\\_thumb\\sq01tst02_sh060_renderCompMain_v000_thumb.jpg. It's not allowed to be replaced by a new transfer from \\\\dazzle.local\\shares\\pype_dev\\projects\\T029_OP3_16_3_tst\\shots\\sq01test02\\sq01tst02_sh060\\work\\comp\\renders\\nuke\\renderCompMain\\renderCompMain_LOGhd.jpg\n```\n\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6729](https://app.clickup.com/t/861najun4)]",
        "url": "https://github.com/ynput/OpenPype/issues/5506"
    },
    {
        "number": 5507,
        "title": "Houdini: Bgeo extractor crashes when rendering current frame",
        "body": "### Is there an existing issue for this?\r\n\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\n`instance.data` will not have `\"frameStart\"` and `\"frameEnd\"` \r\n![image](https://github.com/ynput/OpenPype/assets/20871534/024c6a9a-807a-4843-b09a-af74696c8e98)\r\n\r\n\r\n### Expected Behavior:\r\n\r\nA quick fix to modify extractor as such\r\n```python\r\n# A single frame may also be rendered without start/end frame.\r\nif \"frameStart\" in instance.data and \"frameEnd\" in instance.data:\r\n    representation[\"frameStart\"] = instance.data[\"frameStart\"]\r\n    representation[\"frameEnd\"] = instance.data[\"frameEnd\"]\r\n```\r\n\r\nA more in depth fix to \r\n- add a validator that add or remove `$F4` in `sopoutput` according to the value of `trange`\r\n\r\n### Version\r\n\r\n3.16.4\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Create a bgeo instance\r\n2. Set  `Valid Frame Range` to `Render Current Frame` \r\n![image](https://github.com/ynput/OpenPype/assets/20871534/9b78cc55-687d-4e46-a8d9-dec9471c8a3e)\r\n\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_\n\n[cuID:[OP-6724](https://app.clickup.com/t/861najun9)]",
        "url": "https://github.com/ynput/OpenPype/issues/5507"
    },
    {
        "number": 5509,
        "title": "Bug: Tray Publisher inherits handles from the asset for published Render",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nPublishing render with Tray Publisher expects handles that are not present in the image data published. If your file sequence starts from 1 and your head (handle start) is 5 frames, loaders try to find files that start at -4.\r\n\r\n\r\n### Expected Behavior:\r\n\r\nAdding handle start and handle end zero would be a good start for Tray Publisher (similar to a way how prerender works in Nuke).\r\n\r\nOptions:\r\n\r\nLet's say I am publishing frames 1-20, for asset that has frame start 1005, frame end 1009, handles start 4 and handles end 2.\r\na: Publish the render as 1-20 with  handles 0-0\r\nb: Publish the render as 1005-1018, with handle start 4 and handle end 2 (to align with asset)\r\nc: Publish the render as 5-18, with handle start 4 and handle end 2 (to align handles with asset)\r\n\r\n### Version\r\n\r\n3.16.4\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Go to Tray publisher\r\n2. Define context of project and shot hierarchy\r\n3. Set family to Render\r\n4. Drop any image frame range which you are sure is different from the shot frame range\r\n5. publish\r\n6. open Nuke workfile and Loader at the context of published shot\r\n7. Notice the handles are wrong\r\n8. Notice the loades is expecting fingle frame\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/7439a927-43c2-434c-b2f5-b12c502bbcfc)\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/0047467d-138a-411f-948b-7c22a8e0113e)\r\n\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/6af9b530-a3bb-4dfc-88fa-d0a95c1ed5b0)\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/8f239f67-6a78-4cf0-ac6c-b10de8a82fde)\r\n\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n\r\n### Additional context:\r\n\r\n_No response_\r\n\r\n\n\n\n[cuID:[OP-6632](https://app.clickup.com/t/866av0yr6)]",
        "url": "https://github.com/ynput/OpenPype/issues/5509"
    },
    {
        "number": 5513,
        "title": "Bug: Tray Publisher ignores custom version for published Render",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nPublishing render with Tray Publisher with ```Allow_version_control``` and custom version number is ignored. The next available version is used instead.\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/4ba639a7-891f-43ae-a5b1-3962d71273df)\r\n\n\n### Expected Behavior:\n\nForcing the versions is great for publishing Variants that should be used together later on. For example beauty v8 with separate render containing crypto v8.\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/e8bbf477-86bf-4d21-9218-5fe0069e965b)\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/e74fb8ac-b592-4950-ace9-4609eb32cd49)\r\n\n\n### Version\n\n3.16.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Go to Tray publisher\r\n2. Define context of project and shot hierarchy\r\n3. Set family to Render\r\n4. Drop any image frame range \r\n5. Set version to use to something higher then next available version. Publish\r\n6. Open Nuke workfile and Loader at the context of published shot\r\n7. Notice the version doesn't match the custom set version.\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/45896205/3fabb710-dcdb-4355-9a59-a1085ef52c8f)\r\n\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6716](https://app.clickup.com/t/861najump)]",
        "url": "https://github.com/ynput/OpenPype/issues/5513"
    },
    {
        "number": 5518,
        "title": "Bug: Publisher detailed description from Create tab shows in Publish tab but with unrelated help",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\nThe new style Creators of the new publisher allow to define a `detailed_description` class attribute or override a `get_detailed_description` method to retrieve a informational help message about the Creator to be shown when the question mark on the top right of the UI is clicked.\r\n\r\nFor example:\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/16dcae9f-eee7-4dee-96ac-13441be5e02b)\r\n\r\nHowever, currently when going to the Publish tab the detailed description remains.\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/72a677f7-a23a-4f6e-aada-8c656ef8a3a1)\r\n\r\nEven when selecting an instance of another creator:\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/1f6ff09e-2a52-4add-bd33-550f96308a72)\r\n\r\n\r\n### Expected Behavior:\r\n\r\nIf the publish tab doesn't provide its own detailed descriptions I'd say the help dialog should auto-close and the question mark top right should disappear or get disabled.\r\n\r\n### Version\r\n\r\n3.16.5-nightly.2\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\n1. Select a creator with detailed description in create tab\r\n2. Go to publish tab\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\nSide note - when no detailed description is implemented you'll see:\r\n\r\n> We didn't prepare help for this part... \r\n\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/e74626ff-4690-469a-81ee-13bbde26e6b7)\r\n\r\nI think for those cases it'd also be preferable for that message to read: \r\n\r\n> No detailed description available for {creator.label}.\r\n\r\nAnd maybe even expand that with: \r\n\r\n> Please check the Ayon documentation at {docs_url} or request more details on the community forum if the related documentation can't be found\n\n[cuID:[OP-6730](https://app.clickup.com/t/861najumz)]",
        "url": "https://github.com/ynput/OpenPype/issues/5518"
    },
    {
        "number": 5519,
        "title": "Enhancement: Collect Scene Version report nicer error to artist in new publisher",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues.\r\n\r\n### Please describe the feature you have in mind and explain what the current shortcomings are?\r\n\r\nWhenever a scene is unsaved or saved with a filename from which no version could be detected the Collect Scene Version plug-in errors with a `KnownPublishError`. The reported message is quite clear by itself but the publisher does not report it in a user/artist-friendly way.\r\n\r\n![collect_scene_version_unsaved_scene](https://github.com/ynput/OpenPype/assets/2439881/559c0eac-c049-4a79-8b9f-1c6d6950dba8)\r\n\r\nDirectly after \"collecting\" this is what you see:\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/59e7c8b7-dae3-4b6b-a66a-f835bdaf9a20)\r\n\r\n\r\nOnly when you expand the bottom bar (there's no hint to the user that there MIGHT be some info there) a somewhat more descriptive error shows:\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/d7b72e8f-3c47-4f46-8d8b-761cab15d69a)\r\n\r\n\r\n### How would you imagine the implementation of the feature?\r\n\r\nLike the artist facing validation reports for these cases where we know early on during publishing (e.g. in Collecting) there's a known publish error like \"unsaved scene\" I feel we should be able to report to the user a clear and friendly message that their scene is unsaved.\r\n\r\nAlso, this particular \"known error\" is definitely up to the artist to fix (it is their fault in way, they didn't save at all.) Like the artist report I'd expect at least we can redirect the artist to explain what they should be doing if we can - for which this is one of those situations.\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the enhancement request.\r\n\r\n### Describe alternatives you've considered:\r\n\r\nWe could separate out collecting and validating - however, it might become quite more complex quite quickly since now all other collectors + validators need to be aware of the situation where the collector might've actually failed to produce the required data. So any of those plug-ins relying on `currentFile` or `version` in `instance.data` would basically need to mimic the error report duplicating quite a few checks around the code base.\r\n\r\n### Additional context:\r\n\r\nAlso reported on Discord [here](https://discord.com/channels/517362899170230292/517382145552154634/1145654470315888650)\n\n[cuID:[OP-6723](https://app.clickup.com/t/861najun8)]",
        "url": "https://github.com/ynput/OpenPype/issues/5519"
    },
    {
        "number": 5536,
        "title": "Enhancement: Preserve tweaked pre create attribute values when clicking \"Create\" in new publisher",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues.\r\n\r\n### Please describe the feature you have in mind and explain what the current shortcomings are?\r\n\r\nWhen using the new publisher to create publish instances you can use the **pre create attribute definitions** to tweak how the instance is created, e.g. the `Use selection` toggle or alike.\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/5a67a600-c34e-44af-b05b-f80952d5417a)\r\n\r\nWhen changing any values and then clicking \"Create\" the settings revert to their defaults (except \"Variant\"; that remains).\r\nI would've expected the tweaked values to persist so I could continue to create another instance with the same settings.\r\n\r\nE.g. I tweaked **variant** and **use selection**:\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/ef2d54ab-85e4-407d-bf3f-d9d0f13a4c16)\r\n\r\nAfter clicking **Create** note how Use Selection is re-enabled:\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/fc2c6389-b979-4118-90f5-28fad75cb16e)\r\n\r\n\r\n### How would you imagine the implementation of the feature?\r\n\r\nDo not reset the create attribute values on Create.. (it's ok if they reset on clicking between publish types however).\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the enhancement request.\r\n\r\n### Describe alternatives you've considered:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\nThis is about the settings on the Create tab - it's **not** about the data not correctly being stored to the created instances.\n\n[cuID:[OP-6731](https://app.clickup.com/t/861najun3)]",
        "url": "https://github.com/ynput/OpenPype/issues/5536"
    },
    {
        "number": 5543,
        "title": "Enhancement: Simplify resolution of Ayon executable paths in Deadline",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues.\n\n### Please describe the feature you have in mind and explain what the current shortcomings are?\n\nPath to Ayon executable is currently resolved twice in `GlobalJobPreLoad.py` and `modules/deadline/repository/custom/plugins/Ayon/Ayon.py`. This could lead in issues when only one place gets updated.\r\n\n\n### How would you imagine the implementation of the feature?\n\nAs ` `GlobalJobPreLoad.py` runs always, required variables:\r\n- AYON_SERVER_URL\r\n- AYON_API_KEY\r\n- AYON_EXECUTABLE_PATH\r\nshould be prepared there and `Ayon.py.RenderExecutable` will only reach for those. If they would be missing, publish plugins will fail.\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the enhancement request.\n\n### Describe alternatives you've considered:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6717](https://app.clickup.com/t/861najumx)]",
        "url": "https://github.com/ynput/OpenPype/issues/5543"
    },
    {
        "number": 5551,
        "title": "Enhancement: Publisher copy instance settings between instances",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues.\r\n\r\n\r\n### Please describe the feature you have in mind and explain what the current shortcomings are?\r\n\r\nI'd like to be able to transfer the attribute definition values of one instance to others. That way when new instances are created I can easily transfer the settings from an instance I had already configured the way I like.\r\n\r\n### How would you imagine the implementation of the feature?\r\n\r\nI think being able to right click on the Instance left hand side to \"Copy Settings\" would be great to then select multiple others, right click and \"Paste Settings\".\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/2439881/b27ef67f-5f05-41d5-8c64-cd193cdb11d0)\r\n\r\nAdditional nice to haves:\r\n\r\n- Would be great if it'd support CTRL + C and then CTRL + V since it's must faster if you want to do this frequently.\r\n- The copied settings could be a `json` into the (system) clipboard so that you could even paste it onto instances in another session.\r\n    - By allowing pasting from clipboard it could even result in someone sharing an example json snippet and say \"paste this onto the instance to configure it the way we need\" which I think could be a nice bonus.\r\n- When \"copying\" or \"pasting\" a notification like the \"refreshed\" one could appear at the top of the window to indicate that the settings were copied to clipboard or that they were applied.\r\n\r\n---\r\n\r\nI'd expect it to only transfer the attribute definitions and NOT the variant, asset and task. I'm not sure what we'd like to do with the thumbnail; whether to copy/paste that as well - I think we might be best to exclude that as well. As such it'd only be the attribute definition values that get copied to clipboard and applied to selected instances on pasting.\r\n\r\n---\r\n\r\nIn short, allow selecting an instance, click CTRL + C, select a few others and CTRL + V to paste the same attribute definition values there.\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the enhancement request.\r\n\r\n### Describe alternatives you've considered:\r\n\r\nThe new publisher allows for \"Multiselection\" to change the values of multiple instances at once. But it can often happen that you have an instance configured the way you like, a new instance gets created or added and you just want to match the settings. There's currently no easy way to do _that_.\r\n\r\n### Additional context:\r\n\r\n_No response_\n\n[cuID:[OP-6719](https://app.clickup.com/t/861najun1)]",
        "url": "https://github.com/ynput/OpenPype/issues/5551"
    },
    {
        "number": 5556,
        "title": "Bug: Settings for Maya Color Management System (Ayon Settings) is not on par with legacy OP version ",
        "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current Behavior:\n\nWhen setting options for Maya app on Ayon, there are differences in Color Management System (CMS)\r\n\r\nHere are the legacy Settings:\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/1cbf8ec8-6237-4a05-b819-bd289d7dc001)\r\n\r\nand on AYON:\r\n\r\n![image](https://github.com/ynput/OpenPype/assets/112623825/0ba3dbb1-42b0-4afc-8f72-ead389303a4e)\r\n\r\nNotes for refactoring:\r\n\r\nLoose Workfile, V2 knobs, just include ```Rendering Space```, ```Display```, ```View``` items in CMS\r\n\r\n![CMS_refactor_Maya](https://github.com/ynput/OpenPype/assets/112623825/0b33c7b9-4855-44f3-aee8-e1fd3d7865f1)\r\n\r\n\n\n### Expected Behavior:\n\nThe CMS for Maya should only contain valid entries according to the legacy OP Settings.\r\n\r\nThere are unnecessary entries now.\n\n### Version\n\n3.16.5-nightly.4\n\n### What platform you are running OpenPype on?\n\nWindows\n\n### Steps To Reproduce:\n\n1. Run Ayon Server\r\n2. Go to Maya Settings/ColorManagement\r\n3. Check settings entries\n\n### Are there any labels you wish to add?\n\n- [X] I have added the relevant labels to the bug report.\n\n### Relevant log output:\n\n_No response_\n\n### Additional context:\n\n_No response_\n\n[cuID:[OP-6734](https://app.clickup.com/t/861najumu)]",
        "url": "https://github.com/ynput/OpenPype/issues/5556"
    },
    {
        "number": 5577,
        "title": "Use OpenPype event system for 3dsMax Callback",
        "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current Behavior:\r\n\r\n Why isn't 3dsmax using the OpenPype event system like the other hosts? Let's create an issue to track that and fix that in a separate PR. Each host should try and emit the events in a DCC agnostic way so that global OpenPype tooling could hook into it, like scene saves, etc.\r\n\r\n_Originally posted by @BigRoy in https://github.com/ynput/OpenPype/pull/5499#discussion_r1315901738_\r\n\r\n### Expected Behavior:\r\n\r\n1. Using Openpype event system for the callbacks in 3dsmax.\r\n2. Can take references from the Maya hosts.\r\n\r\n### Version\r\n\r\n3.16.5\r\n\r\n### What platform you are running OpenPype on?\r\n\r\nWindows\r\n\r\n### Steps To Reproduce:\r\n\r\nn/a\r\n\r\n\r\n### Are there any labels you wish to add?\r\n\r\n- [X] I have added the relevant labels to the bug report.\r\n\r\n### Relevant log output:\r\n\r\n_No response_\r\n\r\n### Additional context:\r\n\r\n_No response_",
        "url": "https://github.com/ynput/OpenPype/issues/5577"
    }
]